----------------
IN: 
0x00000000fffffff0:  ljmp   $0xf000,$0xe05b

----------------
IN: 
0x00000000000fe05b:  cmpl   $0x0,%cs:0x6c30
0x00000000000fe062:  jne    0xfd34d

----------------
IN: 
0x00000000000fe066:  xor    %ax,%ax
0x00000000000fe068:  mov    %ax,%ss

----------------
IN: 
0x00000000000fe06a:  mov    $0x7000,%esp

----------------
IN: 
0x00000000000fe070:  mov    $0xf2e31,%edx
0x00000000000fe076:  jmp    0xfd1be

----------------
IN: 
0x00000000000fd1be:  mov    %eax,%ecx
0x00000000000fd1c1:  cli    
0x00000000000fd1c2:  cld    
0x00000000000fd1c3:  mov    $0x8f,%eax
0x00000000000fd1c9:  out    %al,$0x70
0x00000000000fd1cb:  in     $0x71,%al
0x00000000000fd1cd:  in     $0x92,%al
0x00000000000fd1cf:  or     $0x2,%al
0x00000000000fd1d1:  out    %al,$0x92
0x00000000000fd1d3:  lidtw  %cs:0x6c20
0x00000000000fd1d9:  lgdtw  %cs:0x6be0
0x00000000000fd1df:  mov    %cr0,%eax
0x00000000000fd1e2:  or     $0x1,%eax
0x00000000000fd1e6:  mov    %eax,%cr0

----------------
IN: 
0x00000000000fd1e9:  ljmpl  $0x8,$0xfd1f1

----------------
IN: 
0x00000000000fd1f1:  mov    $0x10,%eax
0x00000000000fd1f6:  mov    %eax,%ds

----------------
IN: 
0x00000000000fd1f8:  mov    %eax,%es

----------------
IN: 
0x00000000000fd1fa:  mov    %eax,%ss

----------------
IN: 
0x00000000000fd1fc:  mov    %eax,%fs

----------------
IN: 
0x00000000000fd1fe:  mov    %eax,%gs
0x00000000000fd200:  mov    %ecx,%eax
0x00000000000fd202:  jmp    *%edx

----------------
IN: 
0x00000000000f2e31:  push   %ebx
0x00000000000f2e32:  sub    $0x2c,%esp
0x00000000000f2e35:  movl   $0xf64e0,0x4(%esp)
0x00000000000f2e3d:  movl   $0xf4d74,(%esp)
0x00000000000f2e44:  call   0xf1cc0

----------------
IN: 
0x00000000000f1cc0:  lea    0x8(%esp),%ecx
0x00000000000f1cc4:  mov    0x4(%esp),%edx
0x00000000000f1cc8:  mov    $0xf64dc,%eax
0x00000000000f1ccd:  call   0xf1943

----------------
IN: 
0x00000000000f1943:  push   %ebp
0x00000000000f1944:  push   %edi
0x00000000000f1945:  push   %esi
0x00000000000f1946:  push   %ebx
0x00000000000f1947:  sub    $0xc,%esp
0x00000000000f194a:  mov    %eax,0x4(%esp)
0x00000000000f194e:  mov    %edx,%ebp
0x00000000000f1950:  mov    %ecx,%esi
0x00000000000f1952:  movsbl 0x0(%ebp),%edx
0x00000000000f1956:  test   %dl,%dl
0x00000000000f1958:  je     0xf1b27

----------------
IN: 
0x00000000000f195e:  cmp    $0x25,%dl
0x00000000000f1961:  jne    0xf1b10

----------------
IN: 
0x00000000000f1b10:  mov    0x4(%esp),%eax
0x00000000000f1b14:  call   0xf1087

----------------
IN: 
0x00000000000f1087:  mov    %eax,%ecx
0x00000000000f1089:  movsbl %dl,%edx
0x00000000000f108c:  call   *(%ecx)

----------------
IN: 
0x00000000000f107c:  mov    %edx,%eax
0x00000000000f107e:  mov    0xf68fc,%dx
0x00000000000f1085:  out    %al,(%dx)
0x00000000000f1086:  ret    

----------------
IN: 
0x00000000000f108e:  ret    

----------------
IN: 
0x00000000000f1b19:  mov    %ebp,%ebx
0x00000000000f1b1b:  jmp    0xf1b1f

----------------
IN: 
0x00000000000f1b1f:  lea    0x1(%ebx),%ebp
0x00000000000f1b22:  jmp    0xf1952

----------------
IN: 
0x00000000000f1952:  movsbl 0x0(%ebp),%edx
0x00000000000f1956:  test   %dl,%dl
0x00000000000f1958:  je     0xf1b27

----------------
IN: 
0x00000000000f1967:  lea    0x1(%ebp),%ebx
0x00000000000f196a:  movb   $0x20,0xb(%esp)
0x00000000000f196f:  xor    %ecx,%ecx
0x00000000000f1971:  movsbl (%ebx),%eax
0x00000000000f1974:  lea    -0x30(%eax),%edx
0x00000000000f1977:  cmp    $0x9,%dl
0x00000000000f197a:  ja     0xf1997

----------------
IN: 
0x00000000000f1997:  mov    %ebx,%edx
0x00000000000f1999:  xor    %edi,%edi
0x00000000000f199b:  cmp    $0x6c,%al
0x00000000000f199d:  jne    0xf19b4

----------------
IN: 
0x00000000000f19b4:  cmp    $0x64,%al
0x00000000000f19b6:  je     0xf1a27

----------------
IN: 
0x00000000000f19b8:  jg     0xf19e5

----------------
IN: 
0x00000000000f19e5:  cmp    $0x73,%al
0x00000000000f19e7:  je     0xf1af2

----------------
IN: 
0x00000000000f1af2:  lea    0x4(%esi),%edi
0x00000000000f1af5:  mov    (%esi),%ebp
0x00000000000f1af7:  movsbl 0x0(%ebp),%edx
0x00000000000f1afb:  test   %dl,%dl
0x00000000000f1afd:  je     0xf1b1d

----------------
IN: 
0x00000000000f1aff:  mov    0x4(%esp),%eax
0x00000000000f1b03:  call   0xf1087

----------------
IN: 
0x00000000000f1b08:  inc    %ebp
0x00000000000f1b09:  jmp    0xf1af7

----------------
IN: 
0x00000000000f1af7:  movsbl 0x0(%ebp),%edx
0x00000000000f1afb:  test   %dl,%dl
0x00000000000f1afd:  je     0xf1b1d

----------------
IN: 
0x00000000000f1b1d:  mov    %edi,%esi
0x00000000000f1b1f:  lea    0x1(%ebx),%ebp
0x00000000000f1b22:  jmp    0xf1952

----------------
IN: 
0x00000000000f1b27:  add    $0xc,%esp
0x00000000000f1b2a:  pop    %ebx
0x00000000000f1b2b:  pop    %esi
0x00000000000f1b2c:  pop    %edi
0x00000000000f1b2d:  pop    %ebp
0x00000000000f1b2e:  ret    

----------------
IN: 
0x00000000000f1cd2:  ret    

----------------
IN: 
0x00000000000f2e49:  mov    $0x40000000,%ebx
0x00000000000f2e4e:  lea    0x18(%esp),%eax
0x00000000000f2e52:  mov    %eax,0x4(%esp)
0x00000000000f2e56:  lea    0x14(%esp),%eax
0x00000000000f2e5a:  mov    %eax,(%esp)
0x00000000000f2e5d:  lea    0x10(%esp),%ecx
0x00000000000f2e61:  lea    0xc(%esp),%edx
0x00000000000f2e65:  mov    %ebx,%eax
0x00000000000f2e67:  call   0xf1197

----------------
IN: 
0x00000000000f1197:  push   %ebp
0x00000000000f1198:  push   %edi
0x00000000000f1199:  push   %esi
0x00000000000f119a:  push   %ebx
0x00000000000f119b:  mov    %edx,%esi
0x00000000000f119d:  mov    %ecx,%edi
0x00000000000f119f:  mov    0x14(%esp),%ebp
0x00000000000f11a3:  pushf  
0x00000000000f11a4:  pop    %ecx
0x00000000000f11a5:  mov    %ecx,%edx
0x00000000000f11a7:  xor    $0x200000,%edx
0x00000000000f11ad:  push   %edx
0x00000000000f11ae:  popf   

----------------
IN: 
0x00000000000f11af:  pushf  
0x00000000000f11b0:  pop    %edx
0x00000000000f11b1:  push   %ecx
0x00000000000f11b2:  popf   

----------------
IN: 
0x00000000000f11b3:  xor    %ecx,%edx
0x00000000000f11b5:  and    $0x200000,%edx
0x00000000000f11bb:  jne    0xf11dc

----------------
IN: 
0x00000000000f11dc:  cpuid  
0x00000000000f11de:  mov    %eax,(%esi)
0x00000000000f11e0:  mov    %ebx,(%edi)
0x00000000000f11e2:  mov    %ecx,0x0(%ebp)
0x00000000000f11e5:  mov    0x18(%esp),%eax
0x00000000000f11e9:  mov    %edx,(%eax)
0x00000000000f11eb:  pop    %ebx
0x00000000000f11ec:  pop    %esi
0x00000000000f11ed:  pop    %edi
0x00000000000f11ee:  pop    %ebp
0x00000000000f11ef:  ret    

----------------
IN: 
0x00000000000f2e6c:  mov    0x10(%esp),%eax
0x00000000000f2e70:  mov    %eax,0x1f(%esp)
0x00000000000f2e74:  mov    0x14(%esp),%eax
0x00000000000f2e78:  mov    %eax,0x23(%esp)
0x00000000000f2e7c:  mov    0x18(%esp),%eax
0x00000000000f2e80:  mov    %eax,0x27(%esp)
0x00000000000f2e84:  movb   $0x0,0x2b(%esp)
0x00000000000f2e89:  mov    $0xf57cc,%edx
0x00000000000f2e8e:  lea    0x1f(%esp),%eax
0x00000000000f2e92:  call   0xf116c

----------------
IN: 
0x00000000000f116c:  push   %ebx
0x00000000000f116d:  xor    %ecx,%ecx
0x00000000000f116f:  mov    (%eax,%ecx,1),%bl
0x00000000000f1172:  cmp    (%edx,%ecx,1),%bl
0x00000000000f1175:  je     0xf1183

----------------
IN: 
0x00000000000f1177:  setge  %al
0x00000000000f117a:  movzbl %al,%eax
0x00000000000f117d:  lea    -0x1(%eax,%eax,1),%eax
0x00000000000f1181:  jmp    0xf118a

----------------
IN: 
0x00000000000f118a:  pop    %ebx
0x00000000000f118b:  ret    

----------------
IN: 
0x00000000000f2e97:  test   %eax,%eax
0x00000000000f2e99:  jne    0xf2ef1

----------------
IN: 
0x00000000000f2ef1:  add    $0x100,%ebx
0x00000000000f2ef7:  cmp    $0x40010000,%ebx
0x00000000000f2efd:  jne    0xf2e4e

----------------
IN: 
0x00000000000f2e4e:  lea    0x18(%esp),%eax
0x00000000000f2e52:  mov    %eax,0x4(%esp)
0x00000000000f2e56:  lea    0x14(%esp),%eax
0x00000000000f2e5a:  mov    %eax,(%esp)
0x00000000000f2e5d:  lea    0x10(%esp),%ecx
0x00000000000f2e61:  lea    0xc(%esp),%edx
0x00000000000f2e65:  mov    %ebx,%eax
0x00000000000f2e67:  call   0xf1197

----------------
IN: 
0x00000000000f2f03:  cmpl   $0x0,0xf6500
0x00000000000f2f0a:  jne    0xf2f1a

----------------
IN: 
0x00000000000f2f0c:  movl   $0xf5832,(%esp)
0x00000000000f2f13:  call   0xf1cc0

----------------
IN: 
0x00000000000f2f18:  jmp    0xf2f24

----------------
IN: 
0x00000000000f2f24:  call   0xf29c7

----------------
IN: 
0x00000000000f29c7:  testb  $0x2,0xf65e0
0x00000000000f29ce:  jne    0xf2a41

----------------
IN: 
0x00000000000f29d0:  push   %esi
0x00000000000f29d1:  push   %ebx
0x00000000000f29d2:  push   %edx
0x00000000000f29d3:  xor    %edx,%edx
0x00000000000f29d5:  or     $0xffffffff,%eax
0x00000000000f29d8:  call   0xf15f0

----------------
IN: 
0x00000000000f15f0:  push   %ebp
0x00000000000f15f1:  push   %edi
0x00000000000f15f2:  push   %esi
0x00000000000f15f3:  push   %ebx
0x00000000000f15f4:  mov    %eax,%ebx
0x00000000000f15f6:  mov    %edx,%esi
0x00000000000f15f8:  movzwl %ax,%eax
0x00000000000f15fb:  test   $0x7,%al
0x00000000000f15fd:  jne    0xf1612

----------------
IN: 
0x00000000000f1612:  lea    0x1(%ebx),%ecx
0x00000000000f1615:  mov    $0xcf8,%edi
0x00000000000f161a:  mov    $0xcfc,%ebp
0x00000000000f161f:  movzwl %cx,%ebx
0x00000000000f1622:  mov    %ebx,%eax
0x00000000000f1624:  shr    $0x8,%eax
0x00000000000f1627:  cmp    %esi,%eax
0x00000000000f1629:  jne    0xf1650

----------------
IN: 
0x00000000000f162b:  mov    %ebx,%eax
0x00000000000f162d:  shl    $0x8,%eax
0x00000000000f1630:  or     $0x80000000,%eax
0x00000000000f1635:  mov    %edi,%edx
0x00000000000f1637:  out    %eax,(%dx)
0x00000000000f1638:  mov    %ebp,%edx
0x00000000000f163a:  in     (%dx),%ax
0x00000000000f163c:  dec    %eax
0x00000000000f163d:  cmp    $0xfffffffd,%ax
0x00000000000f1641:  jbe    0xf1655

----------------
IN: 
0x00000000000f1655:  mov    %ecx,%eax
0x00000000000f1657:  pop    %ebx
0x00000000000f1658:  pop    %esi
0x00000000000f1659:  pop    %edi
0x00000000000f165a:  pop    %ebp
0x00000000000f165b:  ret    

----------------
IN: 
0x00000000000f29dd:  mov    %eax,%ebx
0x00000000000f29df:  test   %eax,%eax
0x00000000000f29e1:  js     0xf2a32

----------------
IN: 
0x00000000000f29e3:  movzwl %bx,%esi
0x00000000000f29e6:  xor    %edx,%edx
0x00000000000f29e8:  mov    %esi,%eax
0x00000000000f29ea:  call   0xf1241

----------------
IN: 
0x00000000000f1241:  mov    %edx,%ecx
0x00000000000f1243:  and    $0xfc,%ecx
0x00000000000f1249:  or     $0x80000000,%ecx
0x00000000000f124f:  shl    $0x8,%eax
0x00000000000f1252:  or     %eax,%ecx
0x00000000000f1254:  mov    $0xcf8,%edx
0x00000000000f1259:  mov    %ecx,%eax
0x00000000000f125b:  out    %eax,(%dx)
0x00000000000f125c:  mov    $0xfc,%dl
0x00000000000f125e:  in     (%dx),%eax
0x00000000000f125f:  ret    

----------------
IN: 
0x00000000000f29ef:  mov    %eax,%edx
0x00000000000f29f1:  shr    $0x10,%edx
0x00000000000f29f4:  cmp    $0x8086,%ax
0x00000000000f29f8:  sete   %al
0x00000000000f29fb:  cmp    $0x1237,%edx
0x00000000000f2a01:  jne    0xf2a0d

----------------
IN: 
0x00000000000f2a03:  test   %al,%al
0x00000000000f2a05:  je     0xf2a0d

----------------
IN: 
0x00000000000f2a07:  mov    $0x59,%dx
0x00000000000f2a0b:  jmp    0xf2a1d

----------------
IN: 
0x00000000000f2a1d:  mov    %esi,%eax
0x00000000000f2a1f:  call   0xf15a4

----------------
IN: 
0x00000000000f15a4:  push   %esi
0x00000000000f15a5:  push   %ebx
0x00000000000f15a6:  mov    %edx,%esi
0x00000000000f15a8:  movzwl %ax,%ebx
0x00000000000f15ab:  mov    %ebx,%eax
0x00000000000f15ad:  call   0xf1260

----------------
IN: 
0x00000000000f1260:  push   %ebx
0x00000000000f1261:  mov    %edx,%ebx
0x00000000000f1263:  mov    %edx,%ecx
0x00000000000f1265:  and    $0xfc,%ecx
0x00000000000f126b:  or     $0x80000000,%ecx
0x00000000000f1271:  shl    $0x8,%eax
0x00000000000f1274:  or     %eax,%ecx
0x00000000000f1276:  mov    $0xcf8,%edx
0x00000000000f127b:  mov    %ecx,%eax
0x00000000000f127d:  out    %eax,(%dx)
0x00000000000f127e:  and    $0x3,%ebx
0x00000000000f1281:  lea    0xcfc(%ebx),%edx
0x00000000000f1287:  in     (%dx),%al
0x00000000000f1288:  pop    %ebx
0x00000000000f1289:  ret    

----------------
IN: 
0x00000000000f15b2:  mov    %esi,%edx
0x00000000000f15b4:  test   $0x10,%al
0x00000000000f15b6:  mov    %ebx,%eax
0x00000000000f15b8:  jne    0xf15c4

----------------
IN: 
0x00000000000f15ba:  mov    $0xffff1541,%ecx
0x00000000000f15bf:  call   *%ecx

----------------
IN: 
0x00000000ffff1541:  push   %ebp
0x00000000ffff1542:  push   %edi
0x00000000ffff1543:  push   %esi
0x00000000ffff1544:  push   %ebx
0x00000000ffff1545:  mov    %edx,%edi
0x00000000ffff1547:  lea    0x1(%edx),%ebx
0x00000000ffff154a:  lea    0x7(%edx),%ebp
0x00000000ffff154d:  movzwl %ax,%esi
0x00000000ffff1550:  mov    %ebx,%edx
0x00000000ffff1552:  mov    %esi,%eax
0x00000000ffff1554:  call   0xffff1260

----------------
IN: 
0x00000000ffff1260:  push   %ebx
0x00000000ffff1261:  mov    %edx,%ebx
0x00000000ffff1263:  mov    %edx,%ecx
0x00000000ffff1265:  and    $0xfc,%ecx
0x00000000ffff126b:  or     $0x80000000,%ecx
0x00000000ffff1271:  shl    $0x8,%eax
0x00000000ffff1274:  or     %eax,%ecx
0x00000000ffff1276:  mov    $0xcf8,%edx
0x00000000ffff127b:  mov    %ecx,%eax
0x00000000ffff127d:  out    %eax,(%dx)
0x00000000ffff127e:  and    $0x3,%ebx
0x00000000ffff1281:  lea    0xcfc(%ebx),%edx
0x00000000ffff1287:  in     (%dx),%al
0x00000000ffff1288:  pop    %ebx
0x00000000ffff1289:  ret    

----------------
IN: 
0x00000000ffff1559:  mov    $0x33,%ecx
0x00000000ffff155e:  mov    %ebx,%edx
0x00000000ffff1560:  mov    %esi,%eax
0x00000000ffff1562:  call   0xffff1213

----------------
IN: 
0x00000000ffff1213:  push   %esi
0x00000000ffff1214:  push   %ebx
0x00000000ffff1215:  mov    %edx,%esi
0x00000000ffff1217:  mov    %edx,%ebx
0x00000000ffff1219:  and    $0xfc,%ebx
0x00000000ffff121f:  or     $0x80000000,%ebx
0x00000000ffff1225:  shl    $0x8,%eax
0x00000000ffff1228:  or     %eax,%ebx
0x00000000ffff122a:  mov    $0xcf8,%edx
0x00000000ffff122f:  mov    %ebx,%eax
0x00000000ffff1231:  out    %eax,(%dx)
0x00000000ffff1232:  and    $0x3,%esi
0x00000000ffff1235:  lea    0xcfc(%esi),%edx
0x00000000ffff123b:  mov    %cl,%al
0x00000000ffff123d:  out    %al,(%dx)
0x00000000ffff123e:  pop    %ebx
0x00000000ffff123f:  pop    %esi
0x00000000ffff1240:  ret    

----------------
IN: 
0x00000000ffff1567:  inc    %ebx
0x00000000ffff1568:  cmp    %ebp,%ebx
0x00000000ffff156a:  jne    0xffff1550

----------------
IN: 
0x00000000ffff1550:  mov    %ebx,%edx
0x00000000ffff1552:  mov    %esi,%eax
0x00000000ffff1554:  call   0xffff1260

----------------
IN: 
0x00000000ffff156c:  mov    %edi,%edx
0x00000000ffff156e:  mov    %esi,%eax
0x00000000ffff1570:  call   0xffff1260

----------------
IN: 
0x00000000ffff1575:  mov    %al,%bl
0x00000000ffff1577:  mov    $0x30,%ecx
0x00000000ffff157c:  mov    %edi,%edx
0x00000000ffff157e:  mov    %esi,%eax
0x00000000ffff1580:  call   0xffff1213

----------------
IN: 
0x00000000ffff1585:  and    $0x10,%bl
0x00000000ffff1588:  jne    0xffff159f

----------------
IN: 
0x00000000ffff158a:  mov    $0xde494,%eax
0x00000000ffff158f:  mov    $0x100000,%ecx
0x00000000ffff1594:  sub    %eax,%ecx
0x00000000ffff1596:  mov    $0xfffde494,%esi
0x00000000ffff159b:  mov    %eax,%edi
0x00000000ffff159d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000ffff159d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000ffff159f:  pop    %ebx
0x00000000ffff15a0:  pop    %esi
0x00000000ffff15a1:  pop    %edi
0x00000000ffff15a2:  pop    %ebp
0x00000000ffff15a3:  ret    

----------------
IN: 
0x00000000000f15c1:  pop    %ebx
0x00000000000f15c2:  pop    %esi
0x00000000000f15c3:  ret    

----------------
IN: 
0x00000000000f2a24:  mov    %ebx,0xf64cc
0x00000000000f2a2a:  jmp    0xf2a3e

----------------
IN: 
0x00000000000f2a3e:  pop    %eax
0x00000000000f2a3f:  pop    %ebx
0x00000000000f2a40:  pop    %esi
0x00000000000f2a41:  ret    

----------------
IN: 
0x00000000000f2f29:  call   0xea2c1

----------------
IN: 
0x00000000000ea2c1:  push   %ebp
0x00000000000ea2c2:  push   %edi
0x00000000000ea2c3:  push   %esi
0x00000000000ea2c4:  push   %ebx
0x00000000000ea2c5:  sub    $0x34,%esp
0x00000000000ea2c8:  mov    $0xcf8,%edx
0x00000000000ea2cd:  mov    $0x80000000,%eax
0x00000000000ea2d2:  out    %eax,(%dx)
0x00000000000ea2d3:  mov    $0xcfc,%ebp
0x00000000000ea2d8:  mov    %ebp,%edx
0x00000000000ea2da:  in     (%dx),%ax
0x00000000000ea2dc:  mov    %eax,%ebx
0x00000000000ea2de:  lea    -0x1(%ebx),%eax
0x00000000000ea2e1:  cmp    $0xfffffffd,%ax
0x00000000000ea2e5:  ja     0xea3d3

----------------
IN: 
0x00000000000ea2eb:  mov    $0x80000000,%eax
0x00000000000ea2f0:  mov    $0xf8,%dl
0x00000000000ea2f2:  out    %eax,(%dx)
0x00000000000ea2f3:  mov    $0xcfe,%esi
0x00000000000ea2f8:  mov    %esi,%edx
0x00000000000ea2fa:  in     (%dx),%ax
0x00000000000ea2fc:  movzwl %ax,%ecx
0x00000000000ea2ff:  mov    $0x8000002c,%edi
0x00000000000ea304:  mov    %edi,%eax
0x00000000000ea306:  mov    $0xf8,%dl
0x00000000000ea308:  out    %eax,(%dx)
0x00000000000ea309:  mov    %ebp,%edx
0x00000000000ea30b:  in     (%dx),%ax
0x00000000000ea30d:  mov    %eax,%ebp
0x00000000000ea30f:  mov    %edi,%eax
0x00000000000ea311:  mov    $0xf8,%dl
0x00000000000ea313:  out    %eax,(%dx)
0x00000000000ea314:  mov    %esi,%edx
0x00000000000ea316:  in     (%dx),%ax
0x00000000000ea318:  cmp    $0x1100,%ax
0x00000000000ea31c:  jne    0xea3d3

----------------
IN: 
0x00000000000ea322:  cmp    $0x1af4,%bp
0x00000000000ea327:  jne    0xea3d3

----------------
IN: 
0x00000000000ea32d:  orl    $0x1,0xf65e0
0x00000000000ea334:  cmp    $0x1237,%cx
0x00000000000ea339:  je     0xea34b

----------------
IN: 
0x00000000000ea34b:  movl   $0xf5693,(%esp)
0x00000000000ea352:  call   0xf1cc0

----------------
IN: 
0x00000000000f1cc0:  lea    0x8(%esp),%ecx
0x00000000000f1cc4:  mov    0x4(%esp),%edx
0x00000000000f1cc8:  mov    $0xf64dc,%eax
0x00000000000f1ccd:  call   0xf1943

----------------
IN: 
0x00000000000f1943:  push   %ebp
0x00000000000f1944:  push   %edi
0x00000000000f1945:  push   %esi
0x00000000000f1946:  push   %ebx
0x00000000000f1947:  sub    $0xc,%esp
0x00000000000f194a:  mov    %eax,0x4(%esp)
0x00000000000f194e:  mov    %edx,%ebp
0x00000000000f1950:  mov    %ecx,%esi
0x00000000000f1952:  movsbl 0x0(%ebp),%edx
0x00000000000f1956:  test   %dl,%dl
0x00000000000f1958:  je     0xf1b27

----------------
IN: 
0x00000000000f195e:  cmp    $0x25,%dl
0x00000000000f1961:  jne    0xf1b10

----------------
IN: 
0x00000000000f1b10:  mov    0x4(%esp),%eax
0x00000000000f1b14:  call   0xf1087

----------------
IN: 
0x00000000000f1087:  mov    %eax,%ecx
0x00000000000f1089:  movsbl %dl,%edx
0x00000000000f108c:  call   *(%ecx)

----------------
IN: 
0x00000000000f107c:  mov    %edx,%eax
0x00000000000f107e:  mov    0xf68fc,%dx
0x00000000000f1085:  out    %al,(%dx)
0x00000000000f1086:  ret    

----------------
IN: 
0x00000000000f108e:  ret    

----------------
IN: 
0x00000000000f1b19:  mov    %ebp,%ebx
0x00000000000f1b1b:  jmp    0xf1b1f

----------------
IN: 
0x00000000000f1b1f:  lea    0x1(%ebx),%ebp
0x00000000000f1b22:  jmp    0xf1952

----------------
IN: 
0x00000000000f1952:  movsbl 0x0(%ebp),%edx
0x00000000000f1956:  test   %dl,%dl
0x00000000000f1958:  je     0xf1b27

----------------
IN: 
0x00000000000f1b27:  add    $0xc,%esp
0x00000000000f1b2a:  pop    %ebx
0x00000000000f1b2b:  pop    %esi
0x00000000000f1b2c:  pop    %edi
0x00000000000f1b2d:  pop    %ebp
0x00000000000f1b2e:  ret    

----------------
IN: 
0x00000000000f1cd2:  ret    

----------------
IN: 
0x00000000000ea357:  jmp    0xea370

----------------
IN: 
0x00000000000ea370:  lea    0x20(%esp),%eax
0x00000000000ea374:  mov    %eax,0x4(%esp)
0x00000000000ea378:  lea    0x1c(%esp),%eax
0x00000000000ea37c:  mov    %eax,(%esp)
0x00000000000ea37f:  lea    0x18(%esp),%ecx
0x00000000000ea383:  lea    0x14(%esp),%edx
0x00000000000ea387:  mov    $0x40000000,%eax
0x00000000000ea38c:  call   0xf1197

----------------
IN: 
0x00000000000f1197:  push   %ebp
0x00000000000f1198:  push   %edi
0x00000000000f1199:  push   %esi
0x00000000000f119a:  push   %ebx
0x00000000000f119b:  mov    %edx,%esi
0x00000000000f119d:  mov    %ecx,%edi
0x00000000000f119f:  mov    0x14(%esp),%ebp
0x00000000000f11a3:  pushf  
0x00000000000f11a4:  pop    %ecx
0x00000000000f11a5:  mov    %ecx,%edx
0x00000000000f11a7:  xor    $0x200000,%edx
0x00000000000f11ad:  push   %edx
0x00000000000f11ae:  popf   

----------------
IN: 
0x00000000000f11af:  pushf  
0x00000000000f11b0:  pop    %edx
0x00000000000f11b1:  push   %ecx
0x00000000000f11b2:  popf   

----------------
IN: 
0x00000000000f11b3:  xor    %ecx,%edx
0x00000000000f11b5:  and    $0x200000,%edx
0x00000000000f11bb:  jne    0xf11dc

----------------
IN: 
0x00000000000f11dc:  cpuid  
0x00000000000f11de:  mov    %eax,(%esi)
0x00000000000f11e0:  mov    %ebx,(%edi)
0x00000000000f11e2:  mov    %ecx,0x0(%ebp)
0x00000000000f11e5:  mov    0x18(%esp),%eax
0x00000000000f11e9:  mov    %edx,(%eax)
0x00000000000f11eb:  pop    %ebx
0x00000000000f11ec:  pop    %esi
0x00000000000f11ed:  pop    %edi
0x00000000000f11ee:  pop    %ebp
0x00000000000f11ef:  ret    

----------------
IN: 
0x00000000000ea391:  mov    0x18(%esp),%eax
0x00000000000ea395:  mov    %eax,0x27(%esp)
0x00000000000ea399:  mov    0x1c(%esp),%eax
0x00000000000ea39d:  mov    %eax,0x2b(%esp)
0x00000000000ea3a1:  mov    0x20(%esp),%eax
0x00000000000ea3a5:  mov    %eax,0x2f(%esp)
0x00000000000ea3a9:  movb   $0x0,0x33(%esp)
0x00000000000ea3ae:  mov    $0xf56ed,%edx
0x00000000000ea3b3:  lea    0x27(%esp),%eax
0x00000000000ea3b7:  call   0xf116c

----------------
IN: 
0x00000000000f116c:  push   %ebx
0x00000000000f116d:  xor    %ecx,%ecx
0x00000000000f116f:  mov    (%eax,%ecx,1),%bl
0x00000000000f1172:  cmp    (%edx,%ecx,1),%bl
0x00000000000f1175:  je     0xf1183

----------------
IN: 
0x00000000000f1177:  setge  %al
0x00000000000f117a:  movzbl %al,%eax
0x00000000000f117d:  lea    -0x1(%eax,%eax,1),%eax
0x00000000000f1181:  jmp    0xf118a

----------------
IN: 
0x00000000000f118a:  pop    %ebx
0x00000000000f118b:  ret    

----------------
IN: 
0x00000000000ea3bc:  test   %eax,%eax
0x00000000000ea3be:  jne    0xea3d3

----------------
IN: 
0x00000000000ea3d3:  testb  $0x2,0xf65e0
0x00000000000ea3da:  je     0xea474

----------------
IN: 
0x00000000000ea474:  mov    $0xb4,%al
0x00000000000ea476:  out    %al,$0x70
0x00000000000ea478:  in     $0x71,%al
0x00000000000ea47a:  mov    %al,%cl
0x00000000000ea47c:  mov    $0xb5,%al
0x00000000000ea47e:  out    %al,$0x70
0x00000000000ea480:  in     $0x71,%al
0x00000000000ea482:  mov    %eax,%edx
0x00000000000ea484:  shl    $0x18,%edx
0x00000000000ea487:  movzbl %cl,%eax
0x00000000000ea48a:  shl    $0x10,%eax
0x00000000000ea48d:  or     %eax,%edx
0x00000000000ea48f:  je     0xea499

----------------
IN: 
0x00000000000ea491:  add    $0x1000000,%edx
0x00000000000ea497:  jmp    0xea4bb

----------------
IN: 
0x00000000000ea4bb:  mov    %edx,0xf1000
0x00000000000ea4c1:  movl   $0x1,0x8(%esp)
0x00000000000ea4c9:  mov    %edx,(%esp)
0x00000000000ea4cc:  movl   $0x0,0x4(%esp)
0x00000000000ea4d4:  xor    %eax,%eax
0x00000000000ea4d6:  xor    %edx,%edx
0x00000000000ea4d8:  call   0xe1f27

----------------
IN: 
0x00000000000e1f27:  push   %edi
0x00000000000e1f28:  push   %esi
0x00000000000e1f29:  push   %ebx
0x00000000000e1f2a:  mov    0x10(%esp),%ebx
0x00000000000e1f2e:  mov    0x14(%esp),%ecx
0x00000000000e1f32:  mov    %ecx,%edi
0x00000000000e1f34:  or     %ebx,%edi
0x00000000000e1f36:  je     0xe1f40

----------------
IN: 
0x00000000000e1f38:  pop    %ebx
0x00000000000e1f39:  pop    %esi
0x00000000000e1f3a:  pop    %edi
0x00000000000e1f3b:  jmp    0xe1d5c

----------------
IN: 
0x00000000000e1d5c:  push   %ebp
0x00000000000e1d5d:  push   %edi
0x00000000000e1d5e:  push   %esi
0x00000000000e1d5f:  push   %ebx
0x00000000000e1d60:  sub    $0x34,%esp
0x00000000000e1d63:  mov    %eax,0x14(%esp)
0x00000000000e1d67:  mov    %edx,0x18(%esp)
0x00000000000e1d6b:  mov    0x48(%esp),%ebx
0x00000000000e1d6f:  mov    0x4c(%esp),%esi
0x00000000000e1d73:  mov    %esi,%edi
0x00000000000e1d75:  mov    %ebx,%esi
0x00000000000e1d77:  mov    %ebx,0x24(%esp)
0x00000000000e1d7b:  mov    %edi,0x28(%esp)
0x00000000000e1d7f:  mov    0x50(%esp),%ebx
0x00000000000e1d83:  mov    %ebx,0x2c(%esp)
0x00000000000e1d87:  add    %esi,%eax
0x00000000000e1d89:  adc    %edi,%edx
0x00000000000e1d8b:  mov    %eax,0xc(%esp)
0x00000000000e1d8f:  mov    %edx,0x10(%esp)
0x00000000000e1d93:  mov    0xf6604,%edx
0x00000000000e1d99:  mov    $0xf6608,%eax
0x00000000000e1d9e:  xor    %esi,%esi
0x00000000000e1da0:  cmp    %edx,%esi
0x00000000000e1da2:  jge    0xe1e75

----------------
IN: 
0x00000000000e1e75:  imul   $0x14,%esi,%ebx
0x00000000000e1e78:  cmp    0xf6604,%esi
0x00000000000e1e7e:  jge    0xe1eec

----------------
IN: 
0x00000000000e1eec:  mov    0x2c(%esp),%eax
0x00000000000e1ef0:  cmp    $0xffffffff,%eax
0x00000000000e1ef3:  je     0xe1f1f

----------------
IN: 
0x00000000000e1ef5:  mov    %eax,0x50(%esp)
0x00000000000e1ef9:  mov    0x24(%esp),%eax
0x00000000000e1efd:  mov    0x28(%esp),%edx
0x00000000000e1f01:  mov    %eax,0x48(%esp)
0x00000000000e1f05:  mov    %edx,0x4c(%esp)
0x00000000000e1f09:  mov    0x14(%esp),%edx
0x00000000000e1f0d:  mov    0x18(%esp),%ecx
0x00000000000e1f11:  mov    %esi,%eax
0x00000000000e1f13:  add    $0x34,%esp
0x00000000000e1f16:  pop    %ebx
0x00000000000e1f17:  pop    %esi
0x00000000000e1f18:  pop    %edi
0x00000000000e1f19:  pop    %ebp
0x00000000000e1f1a:  jmp    0xe1cc8

----------------
IN: 
0x00000000000e1cc8:  push   %ebp
0x00000000000e1cc9:  push   %edi
0x00000000000e1cca:  push   %esi
0x00000000000e1ccb:  push   %ebx
0x00000000000e1ccc:  sub    $0xc,%esp
0x00000000000e1ccf:  mov    %edx,(%esp)
0x00000000000e1cd2:  mov    %ecx,0x4(%esp)
0x00000000000e1cd6:  mov    0x20(%esp),%edi
0x00000000000e1cda:  mov    0x24(%esp),%ebp
0x00000000000e1cde:  mov    0x28(%esp),%esi
0x00000000000e1ce2:  mov    %esi,0x8(%esp)
0x00000000000e1ce6:  mov    0xf6604,%ecx
0x00000000000e1cec:  cmp    $0x1f,%ecx
0x00000000000e1cef:  jle    0xe1d07

----------------
IN: 
0x00000000000e1d07:  imul   $0x14,%eax,%esi
0x00000000000e1d0a:  lea    0xf6608(%esi),%ebx
0x00000000000e1d10:  sub    %eax,%ecx
0x00000000000e1d12:  imul   $0x14,%ecx,%ecx
0x00000000000e1d15:  inc    %eax
0x00000000000e1d16:  imul   $0x14,%eax,%eax
0x00000000000e1d19:  add    $0xf6608,%eax
0x00000000000e1d1e:  mov    %ebx,%edx
0x00000000000e1d20:  call   0xe081a

----------------
IN: 
0x00000000000e081a:  push   %ebp
0x00000000000e081b:  push   %edi
0x00000000000e081c:  push   %esi
0x00000000000e081d:  push   %ebx
0x00000000000e081e:  cmp    %eax,%edx
0x00000000000e0820:  jb     0xe082a

----------------
IN: 
0x00000000000e082a:  lea    -0x1(%ecx),%ebx
0x00000000000e082d:  lea    (%eax,%ebx,1),%ebp
0x00000000000e0830:  add    %ebx,%edx
0x00000000000e0832:  mov    %ecx,%ebx
0x00000000000e0834:  mov    %ecx,%esi
0x00000000000e0836:  neg    %esi
0x00000000000e0838:  add    %esi,%edx
0x00000000000e083a:  dec    %ebx
0x00000000000e083b:  cmp    $0xffffffff,%ebx
0x00000000000e083e:  je     0xe084e

----------------
IN: 
0x00000000000e084e:  mov    %ebp,%eax
0x00000000000e0850:  sub    %ecx,%eax
0x00000000000e0852:  pop    %ebx
0x00000000000e0853:  pop    %esi
0x00000000000e0854:  pop    %edi
0x00000000000e0855:  pop    %ebp
0x00000000000e0856:  ret    

----------------
IN: 
0x00000000000e1d25:  incl   0xf6604
0x00000000000e1d2b:  mov    (%esp),%eax
0x00000000000e1d2e:  mov    0x4(%esp),%edx
0x00000000000e1d32:  mov    %eax,0xf6608(%esi)
0x00000000000e1d38:  mov    %edx,0xf660c(%esi)
0x00000000000e1d3e:  mov    %edi,0xf6610(%esi)
0x00000000000e1d44:  mov    %ebp,0xf6614(%esi)
0x00000000000e1d4a:  mov    0x8(%esp),%eax
0x00000000000e1d4e:  mov    %eax,0xf6618(%esi)
0x00000000000e1d54:  add    $0xc,%esp
0x00000000000e1d57:  pop    %ebx
0x00000000000e1d58:  pop    %esi
0x00000000000e1d59:  pop    %edi
0x00000000000e1d5a:  pop    %ebp
0x00000000000e1d5b:  ret    

----------------
IN: 
0x00000000000ea4dd:  movl   $0x2,0x8(%esp)
0x00000000000ea4e5:  movl   $0x40000,(%esp)
0x00000000000ea4ec:  movl   $0x0,0x4(%esp)
0x00000000000ea4f4:  mov    $0xfffc0000,%eax
0x00000000000ea4f9:  xor    %edx,%edx
0x00000000000ea4fb:  call   0xe1d5c

----------------
IN: 
0x00000000000e1da8:  mov    %eax,0x30(%esp)
0x00000000000e1dac:  mov    (%eax),%ecx
0x00000000000e1dae:  mov    0x4(%eax),%ebx
0x00000000000e1db1:  mov    %ecx,%edi
0x00000000000e1db3:  mov    %ebx,%ebp
0x00000000000e1db5:  add    0x8(%eax),%edi
0x00000000000e1db8:  adc    0xc(%eax),%ebp
0x00000000000e1dbb:  mov    %edi,0x1c(%esp)
0x00000000000e1dbf:  mov    %ebp,0x20(%esp)
0x00000000000e1dc3:  add    $0x14,%eax
0x00000000000e1dc6:  cmp    %ebp,0x18(%esp)
0x00000000000e1dca:  jb     0xe1ddb

----------------
IN: 
0x00000000000e1dcc:  ja     0xe1dd8

----------------
IN: 
0x00000000000e1dce:  mov    0x1c(%esp),%edi
0x00000000000e1dd2:  cmp    %edi,0x14(%esp)
0x00000000000e1dd6:  jbe    0xe1ddb

----------------
IN: 
0x00000000000e1dd8:  inc    %esi
0x00000000000e1dd9:  jmp    0xe1da0

----------------
IN: 
0x00000000000e1da0:  cmp    %edx,%esi
0x00000000000e1da2:  jge    0xe1e75

----------------
IN: 
0x00000000000ea500:  mov    0xf1000,%eax
0x00000000000ea505:  mov    %eax,0x4(%esp)
0x00000000000ea509:  movl   $0xf576c,(%esp)
0x00000000000ea510:  call   0xf1cc0

----------------
IN: 
0x00000000000f1967:  lea    0x1(%ebp),%ebx
0x00000000000f196a:  movb   $0x20,0xb(%esp)
0x00000000000f196f:  xor    %ecx,%ecx
0x00000000000f1971:  movsbl (%ebx),%eax
0x00000000000f1974:  lea    -0x30(%eax),%edx
0x00000000000f1977:  cmp    $0x9,%dl
0x00000000000f197a:  ja     0xf1997

----------------
IN: 
0x00000000000f197c:  cmp    $0x30,%al
0x00000000000f197e:  jne    0xf1984

----------------
IN: 
0x00000000000f1980:  test   %ecx,%ecx
0x00000000000f1982:  je     0xf198d

----------------
IN: 
0x00000000000f198d:  movb   $0x30,0xb(%esp)
0x00000000000f1992:  xor    %ecx,%ecx
0x00000000000f1994:  inc    %ebx
0x00000000000f1995:  jmp    0xf1971

----------------
IN: 
0x00000000000f1971:  movsbl (%ebx),%eax
0x00000000000f1974:  lea    -0x30(%eax),%edx
0x00000000000f1977:  cmp    $0x9,%dl
0x00000000000f197a:  ja     0xf1997

----------------
IN: 
0x00000000000f1984:  imul   $0xa,%ecx,%edx
0x00000000000f1987:  lea    -0x30(%edx,%eax,1),%ecx
0x00000000000f198b:  jmp    0xf1994

----------------
IN: 
0x00000000000f1994:  inc    %ebx
0x00000000000f1995:  jmp    0xf1971

----------------
IN: 
0x00000000000f1997:  mov    %ebx,%edx
0x00000000000f1999:  xor    %edi,%edi
0x00000000000f199b:  cmp    $0x6c,%al
0x00000000000f199d:  jne    0xf19b4

----------------
IN: 
0x00000000000f19b4:  cmp    $0x64,%al
0x00000000000f19b6:  je     0xf1a27

----------------
IN: 
0x00000000000f19b8:  jg     0xf19e5

----------------
IN: 
0x00000000000f19e5:  cmp    $0x73,%al
0x00000000000f19e7:  je     0xf1af2

----------------
IN: 
0x00000000000f19ed:  jg     0xf1a1a

----------------
IN: 
0x00000000000f1a1a:  cmp    $0x75,%al
0x00000000000f1a1c:  je     0xf1a4f

----------------
IN: 
0x00000000000f1a1e:  cmp    $0x78,%al
0x00000000000f1a20:  je     0xf1a6d

----------------
IN: 
0x00000000000f1a6d:  mov    (%esi),%ebp
0x00000000000f1a6f:  mov    %edi,%eax
0x00000000000f1a71:  test   %al,%al
0x00000000000f1a73:  movsbl 0xb(%esp),%eax
0x00000000000f1a78:  je     0xf1aa5

----------------
IN: 
0x00000000000f1aa5:  lea    0x4(%esi),%edi
0x00000000000f1aa8:  mov    %eax,(%esp)
0x00000000000f1aab:  mov    %ebp,%edx
0x00000000000f1aad:  mov    0x4(%esp),%eax
0x00000000000f1ab1:  call   0xf1125

----------------
IN: 
0x00000000000f1125:  push   %ebp
0x00000000000f1126:  push   %edi
0x00000000000f1127:  push   %esi
0x00000000000f1128:  push   %ebx
0x00000000000f1129:  push   %esi
0x00000000000f112a:  mov    %eax,%esi
0x00000000000f112c:  mov    %edx,%edi
0x00000000000f112e:  mov    0x18(%esp),%dl
0x00000000000f1132:  mov    %edi,%eax
0x00000000000f1134:  mov    $0x1,%ebx
0x00000000000f1139:  shr    $0x4,%eax
0x00000000000f113c:  je     0xf1141

----------------
IN: 
0x00000000000f113e:  inc    %ebx
0x00000000000f113f:  jmp    0xf1139

----------------
IN: 
0x00000000000f1139:  shr    $0x4,%eax
0x00000000000f113c:  je     0xf1141

----------------
IN: 
0x00000000000f1141:  sub    %ebx,%ecx
0x00000000000f1143:  mov    %ecx,%ebp
0x00000000000f1145:  movsbl %dl,%eax
0x00000000000f1148:  mov    %eax,(%esp)
0x00000000000f114b:  test   %ebp,%ebp
0x00000000000f114d:  jle    0xf115c

----------------
IN: 
0x00000000000f115c:  mov    %ebx,%ecx
0x00000000000f115e:  mov    %edi,%edx
0x00000000000f1160:  mov    %esi,%eax
0x00000000000f1162:  pop    %ebx
0x00000000000f1163:  pop    %ebx
0x00000000000f1164:  pop    %esi
0x00000000000f1165:  pop    %edi
0x00000000000f1166:  pop    %ebp
0x00000000000f1167:  jmp    0xf10a2

----------------
IN: 
0x00000000000f10a2:  push   %esi
0x00000000000f10a3:  push   %ebx
0x00000000000f10a4:  mov    %eax,%ebx
0x00000000000f10a6:  mov    %edx,%esi
0x00000000000f10a8:  dec    %ecx
0x00000000000f10a9:  cmp    $0x6,%ecx
0x00000000000f10ac:  ja     0xf10b5

----------------
IN: 
0x00000000000f10b5:  shr    $0x1c,%edx
0x00000000000f10b8:  call   0xf108f

----------------
IN: 
0x00000000000f108f:  lea    0x57(%edx),%ecx
0x00000000000f1092:  cmp    $0x9,%edx
0x00000000000f1095:  ja     0xf109a

----------------
IN: 
0x00000000000f1097:  lea    0x30(%edx),%ecx
0x00000000000f109a:  movsbl %cl,%edx
0x00000000000f109d:  jmp    0xf1087

----------------
IN: 
0x00000000000f10bd:  mov    %esi,%edx
0x00000000000f10bf:  shr    $0x18,%edx
0x00000000000f10c2:  and    $0xf,%edx
0x00000000000f10c5:  mov    %ebx,%eax
0x00000000000f10c7:  call   0xf108f

----------------
IN: 
0x00000000000f10cc:  mov    %esi,%edx
0x00000000000f10ce:  shr    $0x14,%edx
0x00000000000f10d1:  and    $0xf,%edx
0x00000000000f10d4:  mov    %ebx,%eax
0x00000000000f10d6:  call   0xf108f

----------------
IN: 
0x00000000000f10db:  mov    %esi,%edx
0x00000000000f10dd:  shr    $0x10,%edx
0x00000000000f10e0:  and    $0xf,%edx
0x00000000000f10e3:  mov    %ebx,%eax
0x00000000000f10e5:  call   0xf108f

----------------
IN: 
0x00000000000f10ea:  mov    %esi,%edx
0x00000000000f10ec:  shr    $0xc,%edx
0x00000000000f10ef:  and    $0xf,%edx
0x00000000000f10f2:  mov    %ebx,%eax
0x00000000000f10f4:  call   0xf108f

----------------
IN: 
0x00000000000f10f9:  mov    %esi,%edx
0x00000000000f10fb:  shr    $0x8,%edx
0x00000000000f10fe:  and    $0xf,%edx
0x00000000000f1101:  mov    %ebx,%eax
0x00000000000f1103:  call   0xf108f

----------------
IN: 
0x00000000000f1108:  mov    %esi,%edx
0x00000000000f110a:  shr    $0x4,%edx
0x00000000000f110d:  and    $0xf,%edx
0x00000000000f1110:  mov    %ebx,%eax
0x00000000000f1112:  call   0xf108f

----------------
IN: 
0x00000000000f1117:  and    $0xf,%esi
0x00000000000f111a:  mov    %esi,%edx
0x00000000000f111c:  mov    %ebx,%eax
0x00000000000f111e:  pop    %ebx
0x00000000000f111f:  pop    %esi
0x00000000000f1120:  jmp    0xf108f

----------------
IN: 
0x00000000000f1ab6:  jmp    0xf1b1d

----------------
IN: 
0x00000000000f1b1d:  mov    %edi,%esi
0x00000000000f1b1f:  lea    0x1(%ebx),%ebp
0x00000000000f1b22:  jmp    0xf1952

----------------
IN: 
0x00000000000ea515:  movl   $0xffffffff,0x8(%esp)
0x00000000000ea51d:  movl   $0x50000,(%esp)
0x00000000000ea524:  movl   $0x0,0x4(%esp)
0x00000000000ea52c:  mov    $0xa0000,%eax
0x00000000000ea531:  xor    %edx,%edx
0x00000000000ea533:  call   0xe1d5c

----------------
IN: 
0x00000000000e1ddb:  cmp    %ebx,0x18(%esp)
0x00000000000e1ddf:  jb     0xe1e75

----------------
IN: 
0x00000000000e1de5:  ja     0xe1df1

----------------
IN: 
0x00000000000e1de7:  cmp    %ecx,0x14(%esp)
0x00000000000e1deb:  jbe    0xe1e75

----------------
IN: 
0x00000000000e1df1:  mov    0x30(%esp),%eax
0x00000000000e1df5:  mov    0x10(%eax),%eax
0x00000000000e1df8:  mov    %eax,%edi
0x00000000000e1dfa:  cmp    %eax,0x2c(%esp)
0x00000000000e1dfe:  jne    0xe1e1e

----------------
IN: 
0x00000000000e1e1e:  mov    0x14(%esp),%eax
0x00000000000e1e22:  mov    0x18(%esp),%edx
0x00000000000e1e26:  sub    %ecx,%eax
0x00000000000e1e28:  sbb    %ebx,%edx
0x00000000000e1e2a:  mov    0x30(%esp),%ebx
0x00000000000e1e2e:  mov    %eax,0x8(%ebx)
0x00000000000e1e31:  mov    %edx,0xc(%ebx)
0x00000000000e1e34:  inc    %esi
0x00000000000e1e35:  mov    0x10(%esp),%eax
0x00000000000e1e39:  cmp    %eax,0x20(%esp)
0x00000000000e1e3d:  jb     0xe1e75

----------------
IN: 
0x00000000000e1e3f:  ja     0xe1e4b

----------------
IN: 
0x00000000000e1e41:  mov    0xc(%esp),%eax
0x00000000000e1e45:  cmp    %eax,0x1c(%esp)
0x00000000000e1e49:  jbe    0xe1e75

----------------
IN: 
0x00000000000e1e4b:  mov    %edi,0x8(%esp)
0x00000000000e1e4f:  mov    0x1c(%esp),%eax
0x00000000000e1e53:  mov    0x20(%esp),%edx
0x00000000000e1e57:  mov    0xc(%esp),%ecx
0x00000000000e1e5b:  mov    0x10(%esp),%ebx
0x00000000000e1e5f:  sub    %ecx,%eax
0x00000000000e1e61:  sbb    %ebx,%edx
0x00000000000e1e63:  mov    %eax,(%esp)
0x00000000000e1e66:  mov    %edx,0x4(%esp)
0x00000000000e1e6a:  mov    %ecx,%edx
0x00000000000e1e6c:  mov    %ebx,%ecx
0x00000000000e1e6e:  mov    %esi,%eax
0x00000000000e1e70:  call   0xe1cc8

----------------
IN: 
0x00000000000e0840:  lea    0x0(%ebp,%esi,1),%edi
0x00000000000e0844:  mov    0x1(%edx,%ebx,1),%al
0x00000000000e0848:  mov    %al,0x1(%edi,%ebx,1)
0x00000000000e084c:  jmp    0xe083a

----------------
IN: 
0x00000000000e083a:  dec    %ebx
0x00000000000e083b:  cmp    $0xffffffff,%ebx
0x00000000000e083e:  je     0xe084e

----------------
IN: 
0x00000000000e1e80:  lea    0xf6608(%ebx),%ecx
0x00000000000e1e86:  mov    0xf6608(%ebx),%eax
0x00000000000e1e8c:  mov    0xf660c(%ebx),%edx
0x00000000000e1e92:  cmp    %edx,0x10(%esp)
0x00000000000e1e96:  jb     0xe1eec

----------------
IN: 
0x00000000000e1e98:  ja     0xe1ea0

----------------
IN: 
0x00000000000e1e9a:  cmp    %eax,0xc(%esp)
0x00000000000e1e9e:  jb     0xe1eec

----------------
IN: 
0x00000000000e1ea0:  add    0x8(%ecx),%eax
0x00000000000e1ea3:  adc    0xc(%ecx),%edx
0x00000000000e1ea6:  cmp    %edx,0x10(%esp)
0x00000000000e1eaa:  jb     0xe1ebd

----------------
IN: 
0x00000000000e1eac:  ja     0xe1eb4

----------------
IN: 
0x00000000000e1eae:  cmp    %eax,0xc(%esp)
0x00000000000e1eb2:  jb     0xe1ebd

----------------
IN: 
0x00000000000e1ebd:  mov    0xc(%esp),%edi
0x00000000000e1ec1:  mov    0x10(%esp),%ebp
0x00000000000e1ec5:  mov    %edi,(%ecx)
0x00000000000e1ec7:  mov    %ebp,0x4(%ecx)
0x00000000000e1eca:  sub    %edi,%eax
0x00000000000e1ecc:  sbb    %ebp,%edx
0x00000000000e1ece:  mov    %eax,0x8(%ecx)
0x00000000000e1ed1:  mov    %edx,0xc(%ecx)
0x00000000000e1ed4:  mov    0x2c(%esp),%ebx
0x00000000000e1ed8:  cmp    0x10(%ecx),%ebx
0x00000000000e1edb:  jne    0xe1eec

----------------
IN: 
0x00000000000e1f1f:  add    $0x34,%esp
0x00000000000e1f22:  pop    %ebx
0x00000000000e1f23:  pop    %esi
0x00000000000e1f24:  pop    %edi
0x00000000000e1f25:  pop    %ebp
0x00000000000e1f26:  ret    

----------------
IN: 
0x00000000000ea538:  movl   $0x2,0x8(%esp)
0x00000000000ea540:  movl   $0x10000,(%esp)
0x00000000000ea547:  movl   $0x0,0x4(%esp)
0x00000000000ea54f:  mov    $0xf0000,%eax
0x00000000000ea554:  xor    %edx,%edx
0x00000000000ea556:  call   0xe1d5c

----------------
IN: 
0x00000000000ea55b:  mov    0xf6604,%esi
0x00000000000ea561:  lea    -0x1(%esi),%eax
0x00000000000ea564:  mov    %eax,0x10(%esp)
0x00000000000ea568:  imul   $0x14,%esi,%esi
0x00000000000ea56b:  add    $0xf6608,%esi
0x00000000000ea571:  xor    %ebx,%ebx
0x00000000000ea573:  cmpl   $0x0,0x10(%esp)
0x00000000000ea578:  js     0xea597

----------------
IN: 
0x00000000000ea57a:  mov    -0x14(%esi),%eax
0x00000000000ea57d:  mov    -0x10(%esi),%edx
0x00000000000ea580:  mov    %eax,%edi
0x00000000000ea582:  mov    %edx,%ebp
0x00000000000ea584:  add    -0xc(%esi),%edi
0x00000000000ea587:  adc    -0x8(%esi),%ebp
0x00000000000ea58a:  cmp    $0x0,%ebp
0x00000000000ea58d:  ja     0xea5e3

----------------
IN: 
0x00000000000ea5e3:  cmpl   $0x1,-0x4(%esi)
0x00000000000ea5e7:  jne    0xea615

----------------
IN: 
0x00000000000ea615:  decl   0x10(%esp)
0x00000000000ea619:  sub    $0x14,%esi
0x00000000000ea61c:  jmp    0xea573

----------------
IN: 
0x00000000000ea573:  cmpl   $0x0,0x10(%esp)
0x00000000000ea578:  js     0xea597

----------------
IN: 
0x00000000000ea58f:  cmp    $0xfffff,%edi
0x00000000000ea595:  ja     0xea5e3

----------------
IN: 
0x00000000000ea5e9:  cmp    $0x0,%ebp
0x00000000000ea5ec:  ja     0xea615

----------------
IN: 
0x00000000000ea5ee:  mov    %eax,%edx
0x00000000000ea5f0:  mov    %edi,%ecx
0x00000000000ea5f2:  test   %ebx,%ebx
0x00000000000ea5f4:  jne    0xea60b

----------------
IN: 
0x00000000000ea5f6:  lea    -0x40000(%edi),%ebp
0x00000000000ea5fc:  and    $0xfffffff0,%ebp
0x00000000000ea5ff:  cmp    %eax,%ebp
0x00000000000ea601:  jb     0xea60b

----------------
IN: 
0x00000000000ea603:  cmp    %edi,%ebp
0x00000000000ea605:  ja     0xea60b

----------------
IN: 
0x00000000000ea607:  mov    %ebp,%ebx
0x00000000000ea609:  mov    %ebp,%ecx
0x00000000000ea60b:  mov    $0xf0f94,%eax
0x00000000000ea610:  call   0xe1fe6

----------------
IN: 
0x00000000000e1fe6:  push   %ebp
0x00000000000e1fe7:  push   %edi
0x00000000000e1fe8:  push   %esi
0x00000000000e1fe9:  push   %ebx
0x00000000000e1fea:  sub    $0x30,%esp
0x00000000000e1fed:  mov    %edx,%ebx
0x00000000000e1fef:  mov    %eax,%edx
0x00000000000e1ff1:  mov    (%eax),%eax
0x00000000000e1ff3:  test   %eax,%eax
0x00000000000e1ff5:  jne    0xe2031

----------------
IN: 
0x00000000000e1ff7:  mov    %ebx,0x24(%esp)
0x00000000000e1ffb:  mov    %ebx,0x20(%esp)
0x00000000000e1fff:  mov    %ecx,0x28(%esp)
0x00000000000e2003:  lea    0x18(%esp),%esi
0x00000000000e2007:  mov    %esi,%eax
0x00000000000e2009:  call   0xdfbef

----------------
IN: 
0x00000000000dfbef:  mov    (%edx),%ecx
0x00000000000dfbf1:  mov    %edx,0x4(%eax)
0x00000000000dfbf4:  mov    %ecx,(%eax)
0x00000000000dfbf6:  test   %ecx,%ecx
0x00000000000dfbf8:  je     0xdfbfd

----------------
IN: 
0x00000000000dfbfd:  mov    %eax,(%edx)
0x00000000000dfbff:  ret    

----------------
IN: 
0x00000000000e200e:  movl   $0x0,(%esp)
0x00000000000e2015:  mov    $0x10,%ecx
0x00000000000e201a:  mov    $0x2c,%edx
0x00000000000e201f:  mov    $0xf0f94,%eax
0x00000000000e2024:  call   0xdff34

----------------
IN: 
0x00000000000dff34:  push   %edi
0x00000000000dff35:  push   %esi
0x00000000000dff36:  push   %ebx
0x00000000000dff37:  mov    0x10(%esp),%edi
0x00000000000dff3b:  mov    (%eax),%esi
0x00000000000dff3d:  neg    %ecx
0x00000000000dff3f:  test   %esi,%esi
0x00000000000dff41:  je     0xdff7b

----------------
IN: 
0x00000000000dff43:  mov    0x10(%esi),%eax
0x00000000000dff46:  mov    %eax,%ebx
0x00000000000dff48:  sub    %edx,%ebx
0x00000000000dff4a:  and    %ecx,%ebx
0x00000000000dff4c:  cmp    %eax,%ebx
0x00000000000dff4e:  ja     0xdff77

----------------
IN: 
0x00000000000dff50:  cmp    0xc(%esi),%ebx
0x00000000000dff53:  jb     0xdff77

----------------
IN: 
0x00000000000dff55:  test   %edi,%edi
0x00000000000dff57:  jne    0xdff5b

----------------
IN: 
0x00000000000dff59:  mov    %ebx,%edi
0x00000000000dff5b:  mov    %ebx,0x8(%edi)
0x00000000000dff5e:  add    %ebx,%edx
0x00000000000dff60:  mov    %edx,0xc(%edi)
0x00000000000dff63:  mov    %eax,0x10(%edi)
0x00000000000dff66:  mov    %ebx,0x10(%esi)
0x00000000000dff69:  mov    0x4(%esi),%edx
0x00000000000dff6c:  mov    %edi,%eax
0x00000000000dff6e:  call   0xdfbef

----------------
IN: 
0x00000000000dfbfa:  mov    %eax,0x4(%ecx)
0x00000000000dfbfd:  mov    %eax,(%edx)
0x00000000000dfbff:  ret    

----------------
IN: 
0x00000000000dff73:  mov    %ebx,%eax
0x00000000000dff75:  jmp    0xdff7d

----------------
IN: 
0x00000000000dff7d:  pop    %ebx
0x00000000000dff7e:  pop    %esi
0x00000000000dff7f:  pop    %edi
0x00000000000dff80:  ret    

----------------
IN: 
0x00000000000e2029:  mov    %eax,%ebx
0x00000000000e202b:  test   %eax,%eax
0x00000000000e202d:  jne    0xe2071

----------------
IN: 
0x00000000000e2071:  mov    0x1c(%esp),%ebp
0x00000000000e2075:  mov    %esi,%eax
0x00000000000e2077:  call   0xdfbe0

----------------
IN: 
0x00000000000dfbe0:  mov    (%eax),%edx
0x00000000000dfbe2:  mov    0x4(%eax),%eax
0x00000000000dfbe5:  mov    %edx,(%eax)
0x00000000000dfbe7:  test   %edx,%edx
0x00000000000dfbe9:  je     0xdfbee

----------------
IN: 
0x00000000000dfbee:  ret    

----------------
IN: 
0x00000000000e207c:  lea    0x14(%ebx),%eax
0x00000000000e207f:  mov    $0x5,%ecx
0x00000000000e2084:  mov    %eax,%edi
0x00000000000e2086:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000e2086:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000e2088:  movl   $0xffffffff,0x28(%ebx)
0x00000000000e208f:  mov    %ebp,%edx
0x00000000000e2091:  call   0xdfbef

----------------
IN: 
0x00000000000e2096:  add    $0x30,%esp
0x00000000000e2099:  pop    %ebx
0x00000000000e209a:  pop    %esi
0x00000000000e209b:  pop    %edi
0x00000000000e209c:  pop    %ebp
0x00000000000e209d:  ret    

----------------
IN: 
0x00000000000ea597:  mov    $0x90000,%ecx
0x00000000000ea59c:  mov    $0x7000,%edx
0x00000000000ea5a1:  mov    $0xf0f98,%eax
0x00000000000ea5a6:  call   0xe1fe6

----------------
IN: 
0x00000000000dff77:  mov    (%esi),%esi
0x00000000000dff79:  jmp    0xdff3f

----------------
IN: 
0x00000000000dff3f:  test   %esi,%esi
0x00000000000dff41:  je     0xdff7b

----------------
IN: 
0x00000000000ea5ab:  test   %ebx,%ebx
0x00000000000ea5ad:  je     0xea621

----------------
IN: 
0x00000000000ea5af:  lea    0x40000(%ebx),%ecx
0x00000000000ea5b5:  mov    %ebx,%edx
0x00000000000ea5b7:  mov    $0xf0fa0,%eax
0x00000000000ea5bc:  call   0xe1fe6

----------------
IN: 
0x00000000000ea5c1:  mov    %ebx,%eax
0x00000000000ea5c3:  xor    %edx,%edx
0x00000000000ea5c5:  movl   $0x2,0x8(%esp)
0x00000000000ea5cd:  movl   $0x40000,(%esp)
0x00000000000ea5d4:  movl   $0x0,0x4(%esp)
0x00000000000ea5dc:  call   0xe1d5c

----------------
IN: 
0x00000000000ea5e1:  jmp    0xea621

----------------
IN: 
0x00000000000ea621:  mov    $0xdfbd9,%esi
0x00000000000ea626:  mov    $0xf1025,%ebx
0x00000000000ea62b:  sub    %esi,%ebx
0x00000000000ea62d:  mov    %ebx,%edx
0x00000000000ea62f:  mov    $0x10,%eax
0x00000000000ea634:  call   0xe0f5c

----------------
IN: 
0x00000000000e0f5c:  push   %esi
0x00000000000e0f5d:  push   %ebx
0x00000000000e0f5e:  mov    %eax,%esi
0x00000000000e0f60:  mov    %edx,%ebx
0x00000000000e0f62:  mov    %eax,%ecx
0x00000000000e0f64:  mov    $0xf0f94,%eax
0x00000000000e0f69:  call   0xdffba

----------------
IN: 
0x00000000000dffba:  push   %ebp
0x00000000000dffbb:  push   %edi
0x00000000000dffbc:  push   %esi
0x00000000000dffbd:  push   %ebx
0x00000000000dffbe:  push   %ebx
0x00000000000dffbf:  mov    %edx,%esi
0x00000000000dffc1:  test   %edx,%edx
0x00000000000dffc3:  jne    0xdffc9

----------------
IN: 
0x00000000000dffc9:  mov    %eax,%edi
0x00000000000dffcb:  mov    %ecx,%ebp
0x00000000000dffcd:  movl   $0x0,(%esp)
0x00000000000dffd4:  mov    $0x10,%ecx
0x00000000000dffd9:  mov    $0x2c,%edx
0x00000000000dffde:  mov    $0xf0f94,%eax
0x00000000000dffe3:  call   0xdff34

----------------
IN: 
0x00000000000dffe8:  mov    %eax,%ebx
0x00000000000dffea:  test   %eax,%eax
0x00000000000dffec:  jne    0xe000f

----------------
IN: 
0x00000000000e000f:  movl   $0xffffffff,0x28(%ebx)
0x00000000000e0016:  lea    0x14(%ebx),%eax
0x00000000000e0019:  mov    %eax,(%esp)
0x00000000000e001c:  mov    %ebp,%ecx
0x00000000000e001e:  mov    %esi,%edx
0x00000000000e0020:  mov    %edi,%eax
0x00000000000e0022:  call   0xdff34

----------------
IN: 
0x00000000000dff5b:  mov    %ebx,0x8(%edi)
0x00000000000dff5e:  add    %ebx,%edx
0x00000000000dff60:  mov    %edx,0xc(%edi)
0x00000000000dff63:  mov    %eax,0x10(%edi)
0x00000000000dff66:  mov    %ebx,0x10(%esi)
0x00000000000dff69:  mov    0x4(%esi),%edx
0x00000000000dff6c:  mov    %edi,%eax
0x00000000000dff6e:  call   0xdfbef

----------------
IN: 
0x00000000000e0027:  mov    %eax,%esi
0x00000000000e0029:  test   %eax,%eax
0x00000000000e002b:  jne    0xe0034

----------------
IN: 
0x00000000000e0034:  mov    %esi,%eax
0x00000000000e0036:  pop    %edx
0x00000000000e0037:  pop    %ebx
0x00000000000e0038:  pop    %esi
0x00000000000e0039:  pop    %edi
0x00000000000e003a:  pop    %ebp
0x00000000000e003b:  ret    

----------------
IN: 
0x00000000000e0f6e:  test   %eax,%eax
0x00000000000e0f70:  jne    0xe0f82

----------------
IN: 
0x00000000000e0f82:  pop    %ebx
0x00000000000e0f83:  pop    %esi
0x00000000000e0f84:  ret    

----------------
IN: 
0x00000000000ea639:  mov    %eax,%ebp
0x00000000000ea63b:  test   %eax,%eax
0x00000000000ea63d:  jne    0xea64b

----------------
IN: 
0x00000000000ea64b:  mov    %ebx,0xc(%esp)
0x00000000000ea64f:  mov    %eax,0x8(%esp)
0x00000000000ea653:  movl   $0xdfbd9,0x4(%esp)
0x00000000000ea65b:  movl   $0xf57a3,(%esp)
0x00000000000ea662:  call   0xf1cc0

----------------
IN: 
0x00000000000f19ef:  cmp    $0x70,%al
0x00000000000f19f1:  jne    0xf1b0b

----------------
IN: 
0x00000000000f19f7:  lea    0x4(%esi),%edi
0x00000000000f19fa:  mov    (%esi),%ebp
0x00000000000f19fc:  mov    $0x30,%edx
0x00000000000f1a01:  mov    0x4(%esp),%esi
0x00000000000f1a05:  mov    %esi,%eax
0x00000000000f1a07:  call   0xf1087

----------------
IN: 
0x00000000000f1a0c:  mov    $0x78,%edx
0x00000000000f1a11:  mov    %esi,%eax
0x00000000000f1a13:  call   0xf1087

----------------
IN: 
0x00000000000f1a18:  jmp    0xf1a95

----------------
IN: 
0x00000000000f1a95:  mov    $0x8,%ecx
0x00000000000f1a9a:  mov    %ebp,%edx
0x00000000000f1a9c:  mov    %esi,%eax
0x00000000000f1a9e:  call   0xf10a2

----------------
IN: 
0x00000000000f109a:  movsbl %cl,%edx
0x00000000000f109d:  jmp    0xf1087

----------------
IN: 
0x00000000000f1aa3:  jmp    0xf1b1d

----------------
IN: 
0x00000000000f1a27:  mov    (%esi),%ebp
0x00000000000f1a29:  mov    %edi,%eax
0x00000000000f1a2b:  test   %al,%al
0x00000000000f1a2d:  jne    0xf1a34

----------------
IN: 
0x00000000000f1a2f:  add    $0x4,%esi
0x00000000000f1a32:  jmp    0xf1a37

----------------
IN: 
0x00000000000f1a37:  test   %ebp,%ebp
0x00000000000f1a39:  jns    0xf1a4b

----------------
IN: 
0x00000000000f1a4b:  mov    %ebp,%edx
0x00000000000f1a4d:  jmp    0xf1a5f

----------------
IN: 
0x00000000000f1a5f:  mov    0x4(%esp),%eax
0x00000000000f1a63:  call   0xf18fa

----------------
IN: 
0x00000000000f18fa:  push   %esi
0x00000000000f18fb:  push   %ebx
0x00000000000f18fc:  sub    $0xc,%esp
0x00000000000f18ff:  mov    %eax,%esi
0x00000000000f1901:  movb   $0x0,0xb(%esp)
0x00000000000f1906:  lea    0xa(%esp),%ebx
0x00000000000f190a:  mov    $0xa,%ecx
0x00000000000f190f:  mov    %edx,%eax
0x00000000000f1911:  xor    %edx,%edx
0x00000000000f1913:  div    %ecx
0x00000000000f1915:  add    $0x30,%edx
0x00000000000f1918:  mov    %dl,(%ebx)
0x00000000000f191a:  mov    %eax,%edx
0x00000000000f191c:  test   %eax,%eax
0x00000000000f191e:  je     0xf1923

----------------
IN: 
0x00000000000f1920:  dec    %ebx
0x00000000000f1921:  jmp    0xf190f

----------------
IN: 
0x00000000000f190f:  mov    %edx,%eax
0x00000000000f1911:  xor    %edx,%edx
0x00000000000f1913:  div    %ecx
0x00000000000f1915:  add    $0x30,%edx
0x00000000000f1918:  mov    %dl,(%ebx)
0x00000000000f191a:  mov    %eax,%edx
0x00000000000f191c:  test   %eax,%eax
0x00000000000f191e:  je     0xf1923

----------------
IN: 
0x00000000000f1923:  test   %ebx,%ebx
0x00000000000f1925:  jne    0xf192c

----------------
IN: 
0x00000000000f192c:  movsbl (%ebx),%edx
0x00000000000f192f:  test   %dl,%dl
0x00000000000f1931:  je     0xf193d

----------------
IN: 
0x00000000000f1933:  mov    %esi,%eax
0x00000000000f1935:  call   0xf1087

----------------
IN: 
0x00000000000f193a:  inc    %ebx
0x00000000000f193b:  jmp    0xf192c

----------------
IN: 
0x00000000000f193d:  add    $0xc,%esp
0x00000000000f1940:  pop    %ebx
0x00000000000f1941:  pop    %esi
0x00000000000f1942:  ret    

----------------
IN: 
0x00000000000f1a68:  jmp    0xf1b1f

----------------
IN: 
0x00000000000ea667:  mov    %ebp,%eax
0x00000000000ea669:  sub    $0xdfbd9,%eax
0x00000000000ea66e:  mov    %ebp,%edi
0x00000000000ea670:  mov    %ebx,%ecx
0x00000000000ea672:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000ea672:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000ea674:  mov    $0xde494,%edx
0x00000000000ea679:  cmp    $0xdeaf4,%edx
0x00000000000ea67f:  jae    0xea68c

----------------
IN: 
0x00000000000ea681:  mov    (%edx),%ecx
0x00000000000ea683:  add    %ebp,%ecx
0x00000000000ea685:  add    %eax,(%ecx)
0x00000000000ea687:  add    $0x4,%edx
0x00000000000ea68a:  jmp    0xea679

----------------
IN: 
0x00000000000ea679:  cmp    $0xdeaf4,%edx
0x00000000000ea67f:  jae    0xea68c

----------------
IN: 
0x00000000000ea68c:  mov    %eax,%ebx
0x00000000000ea68e:  neg    %ebx
0x00000000000ea690:  mov    $0xdeaf4,%edx
0x00000000000ea695:  cmp    $0xdf360,%edx
0x00000000000ea69b:  jae    0xea6a8

----------------
IN: 
0x00000000000ea69d:  mov    (%edx),%ecx
0x00000000000ea69f:  add    %ebp,%ecx
0x00000000000ea6a1:  add    %ebx,(%ecx)
0x00000000000ea6a3:  add    $0x4,%edx
0x00000000000ea6a6:  jmp    0xea695

----------------
IN: 
0x00000000000ea695:  cmp    $0xdf360,%edx
0x00000000000ea69b:  jae    0xea6a8

----------------
IN: 
0x00000000000ea6a8:  mov    $0xdf360,%edx
0x00000000000ea6ad:  cmp    $0xdf370,%edx
0x00000000000ea6b3:  jae    0xea6c2

----------------
IN: 
0x00000000000ea6b5:  mov    (%edx),%ecx
0x00000000000ea6b7:  add    %eax,0xde494(%ecx)
0x00000000000ea6bd:  add    $0x4,%edx
0x00000000000ea6c0:  jmp    0xea6ad

----------------
IN: 
0x00000000000ea6ad:  cmp    $0xdf370,%edx
0x00000000000ea6b3:  jae    0xea6c2

----------------
IN: 
0x00000000000ea6c2:  mov    $0xeb9bc,%edx
0x00000000000ea6c7:  cmp    $0xdfbd9,%edx
0x00000000000ea6cd:  jb     0xea6d9

----------------
IN: 
0x00000000000ea6cf:  cmp    $0xf1025,%edx
0x00000000000ea6d5:  jae    0xea6d9

----------------
IN: 
0x00000000000ea6d7:  add    %eax,%edx
0x00000000000ea6d9:  xor    %eax,%eax
0x00000000000ea6db:  call   *%edx

----------------
IN: 
0x000000003ffba8d3:  xor    %eax,%eax
0x000000003ffba8d5:  mov    0x3ffbfe97(,%eax,4),%ecx
0x000000003ffba8dc:  mov    (%ecx),%edx
0x000000003ffba8de:  test   %edx,%edx
0x000000003ffba8e0:  je     0x3ffba8e5

----------------
IN: 
0x000000003ffba8e2:  mov    %ecx,0x4(%edx)
0x000000003ffba8e5:  inc    %eax
0x000000003ffba8e6:  cmp    $0x5,%eax
0x000000003ffba8e9:  jne    0x3ffba8d5

----------------
IN: 
0x000000003ffba8d5:  mov    0x3ffbfe97(,%eax,4),%ecx
0x000000003ffba8dc:  mov    (%ecx),%edx
0x000000003ffba8de:  test   %edx,%edx
0x000000003ffba8e0:  je     0x3ffba8e5

----------------
IN: 
0x000000003ffba8e5:  inc    %eax
0x000000003ffba8e6:  cmp    $0x5,%eax
0x000000003ffba8e9:  jne    0x3ffba8d5

----------------
IN: 
0x000000003ffba8eb:  push   %ebp
0x000000003ffba8ec:  push   %edi
0x000000003ffba8ed:  push   %esi
0x000000003ffba8ee:  push   %ebx
0x000000003ffba8ef:  sub    $0x190,%esp
0x000000003ffba8f5:  mov    $0xdfbd9,%ecx
0x000000003ffba8fa:  sub    $0xdf370,%ecx
0x000000003ffba900:  mov    $0xdf370,%edx
0x000000003ffba905:  mov    $0xef790,%eax
0x000000003ffba90a:  call   0x3ffaf731

----------------
IN: 
0x000000003ffaf731:  push   %ebp
0x000000003ffaf732:  push   %edi
0x000000003ffaf733:  push   %esi
0x000000003ffaf734:  push   %ebx
0x000000003ffaf735:  cmp    %eax,%edx
0x000000003ffaf737:  jb     0x3ffaf741

----------------
IN: 
0x000000003ffaf741:  lea    -0x1(%ecx),%ebx
0x000000003ffaf744:  lea    (%eax,%ebx,1),%ebp
0x000000003ffaf747:  add    %ebx,%edx
0x000000003ffaf749:  mov    %ecx,%ebx
0x000000003ffaf74b:  mov    %ecx,%esi
0x000000003ffaf74d:  neg    %esi
0x000000003ffaf74f:  add    %esi,%edx
0x000000003ffaf751:  dec    %ebx
0x000000003ffaf752:  cmp    $0xffffffff,%ebx
0x000000003ffaf755:  je     0x3ffaf765

----------------
IN: 
0x000000003ffaf757:  lea    0x0(%ebp,%esi,1),%edi
0x000000003ffaf75b:  mov    0x1(%edx,%ebx,1),%al
0x000000003ffaf75f:  mov    %al,0x1(%edi,%ebx,1)
0x000000003ffaf763:  jmp    0x3ffaf751

----------------
IN: 
0x000000003ffaf751:  dec    %ebx
0x000000003ffaf752:  cmp    $0xffffffff,%ebx
0x000000003ffaf755:  je     0x3ffaf765

----------------
IN: 
0x000000003ffaf765:  mov    %ebp,%eax
0x000000003ffaf767:  sub    %ecx,%eax
0x000000003ffaf769:  pop    %ebx
0x000000003ffaf76a:  pop    %esi
0x000000003ffaf76b:  pop    %edi
0x000000003ffaf76c:  pop    %ebp
0x000000003ffaf76d:  ret    

----------------
IN: 
0x000000003ffba90f:  mov    $0xef790,%ecx
0x000000003ffba914:  mov    $0xe0010,%edx
0x000000003ffba919:  mov    $0x3ffbfebb,%eax
0x000000003ffba91e:  call   0x3ffb0efd

----------------
IN: 
0x000000003ffb0efd:  push   %ebp
0x000000003ffb0efe:  push   %edi
0x000000003ffb0eff:  push   %esi
0x000000003ffb0f00:  push   %ebx
0x000000003ffb0f01:  sub    $0x30,%esp
0x000000003ffb0f04:  mov    %edx,%ebx
0x000000003ffb0f06:  mov    %eax,%edx
0x000000003ffb0f08:  mov    (%eax),%eax
0x000000003ffb0f0a:  test   %eax,%eax
0x000000003ffb0f0c:  jne    0x3ffb0f48

----------------
IN: 
0x000000003ffb0f0e:  mov    %ebx,0x24(%esp)
0x000000003ffb0f12:  mov    %ebx,0x20(%esp)
0x000000003ffb0f16:  mov    %ecx,0x28(%esp)
0x000000003ffb0f1a:  lea    0x18(%esp),%esi
0x000000003ffb0f1e:  mov    %esi,%eax
0x000000003ffb0f20:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffaeb06:  mov    (%edx),%ecx
0x000000003ffaeb08:  mov    %edx,0x4(%eax)
0x000000003ffaeb0b:  mov    %ecx,(%eax)
0x000000003ffaeb0d:  test   %ecx,%ecx
0x000000003ffaeb0f:  je     0x3ffaeb14

----------------
IN: 
0x000000003ffaeb14:  mov    %eax,(%edx)
0x000000003ffaeb16:  ret    

----------------
IN: 
0x000000003ffb0f25:  movl   $0x0,(%esp)
0x000000003ffb0f2c:  mov    $0x10,%ecx
0x000000003ffb0f31:  mov    $0x2c,%edx
0x000000003ffb0f36:  mov    $0x3ffbfeab,%eax
0x000000003ffb0f3b:  call   0x3ffaee4b

----------------
IN: 
0x000000003ffaee4b:  push   %edi
0x000000003ffaee4c:  push   %esi
0x000000003ffaee4d:  push   %ebx
0x000000003ffaee4e:  mov    0x10(%esp),%edi
0x000000003ffaee52:  mov    (%eax),%esi
0x000000003ffaee54:  neg    %ecx
0x000000003ffaee56:  test   %esi,%esi
0x000000003ffaee58:  je     0x3ffaee92

----------------
IN: 
0x000000003ffaee5a:  mov    0x10(%esi),%eax
0x000000003ffaee5d:  mov    %eax,%ebx
0x000000003ffaee5f:  sub    %edx,%ebx
0x000000003ffaee61:  and    %ecx,%ebx
0x000000003ffaee63:  cmp    %eax,%ebx
0x000000003ffaee65:  ja     0x3ffaee8e

----------------
IN: 
0x000000003ffaee67:  cmp    0xc(%esi),%ebx
0x000000003ffaee6a:  jb     0x3ffaee8e

----------------
IN: 
0x000000003ffaee8e:  mov    (%esi),%esi
0x000000003ffaee90:  jmp    0x3ffaee56

----------------
IN: 
0x000000003ffaee56:  test   %esi,%esi
0x000000003ffaee58:  je     0x3ffaee92

----------------
IN: 
0x000000003ffaee6c:  test   %edi,%edi
0x000000003ffaee6e:  jne    0x3ffaee72

----------------
IN: 
0x000000003ffaee70:  mov    %ebx,%edi
0x000000003ffaee72:  mov    %ebx,0x8(%edi)
0x000000003ffaee75:  add    %ebx,%edx
0x000000003ffaee77:  mov    %edx,0xc(%edi)
0x000000003ffaee7a:  mov    %eax,0x10(%edi)
0x000000003ffaee7d:  mov    %ebx,0x10(%esi)
0x000000003ffaee80:  mov    0x4(%esi),%edx
0x000000003ffaee83:  mov    %edi,%eax
0x000000003ffaee85:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffaeb11:  mov    %eax,0x4(%ecx)
0x000000003ffaeb14:  mov    %eax,(%edx)
0x000000003ffaeb16:  ret    

----------------
IN: 
0x000000003ffaee8a:  mov    %ebx,%eax
0x000000003ffaee8c:  jmp    0x3ffaee94

----------------
IN: 
0x000000003ffaee94:  pop    %ebx
0x000000003ffaee95:  pop    %esi
0x000000003ffaee96:  pop    %edi
0x000000003ffaee97:  ret    

----------------
IN: 
0x000000003ffb0f40:  mov    %eax,%ebx
0x000000003ffb0f42:  test   %eax,%eax
0x000000003ffb0f44:  jne    0x3ffb0f88

----------------
IN: 
0x000000003ffb0f88:  mov    0x1c(%esp),%ebp
0x000000003ffb0f8c:  mov    %esi,%eax
0x000000003ffb0f8e:  call   0x3ffaeaf7

----------------
IN: 
0x000000003ffaeaf7:  mov    (%eax),%edx
0x000000003ffaeaf9:  mov    0x4(%eax),%eax
0x000000003ffaeafc:  mov    %edx,(%eax)
0x000000003ffaeafe:  test   %edx,%edx
0x000000003ffaeb00:  je     0x3ffaeb05

----------------
IN: 
0x000000003ffaeb05:  ret    

----------------
IN: 
0x000000003ffb0f93:  lea    0x14(%ebx),%eax
0x000000003ffb0f96:  mov    $0x5,%ecx
0x000000003ffb0f9b:  mov    %eax,%edi
0x000000003ffb0f9d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb0f9d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb0f9f:  movl   $0xffffffff,0x28(%ebx)
0x000000003ffb0fa6:  mov    %ebp,%edx
0x000000003ffb0fa8:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffb0fad:  add    $0x30,%esp
0x000000003ffb0fb0:  pop    %ebx
0x000000003ffb0fb1:  pop    %esi
0x000000003ffb0fb2:  pop    %edi
0x000000003ffb0fb3:  pop    %ebp
0x000000003ffb0fb4:  ret    

----------------
IN: 
0x000000003ffba923:  mov    0x3ffbfebb,%eax
0x000000003ffba928:  xor    %edx,%edx
0x000000003ffba92a:  test   %eax,%eax
0x000000003ffba92c:  je     0x3ffba934

----------------
IN: 
0x000000003ffba92e:  mov    %eax,%edx
0x000000003ffba930:  mov    (%eax),%eax
0x000000003ffba932:  jmp    0x3ffba92a

----------------
IN: 
0x000000003ffba92a:  test   %eax,%eax
0x000000003ffba92c:  je     0x3ffba934

----------------
IN: 
0x000000003ffba934:  mov    %edx,0xf65d0
0x000000003ffba93a:  mov    $0xf1030,%ecx
0x000000003ffba93f:  sub    $0xf0000,%ecx
0x000000003ffba945:  xor    %edx,%edx
0x000000003ffba947:  mov    $0xf0000,%eax
0x000000003ffba94c:  call   0xf118c

----------------
IN: 
0x00000000000f118c:  test   %ecx,%ecx
0x00000000000f118e:  je     0xf1196

----------------
IN: 
0x00000000000f1190:  dec    %ecx
0x00000000000f1191:  mov    %dl,(%eax,%ecx,1)
0x00000000000f1194:  jmp    0xf118c

----------------
IN: 
0x00000000000f1196:  ret    

----------------
IN: 
0x000000003ffba951:  mov    $0xf1030,%ecx
0x000000003ffba956:  mov    $0xf0000,%edx
0x000000003ffba95b:  mov    $0x3ffbfeb3,%eax
0x000000003ffba960:  call   0x3ffb0efd

----------------
IN: 
0x000000003ffba965:  call   0x3ffaf057

----------------
IN: 
0x000000003ffaf057:  push   %esi
0x000000003ffaf058:  push   %ebx
0x000000003ffaf059:  mov    0xf6604,%ecx
0x000000003ffaf05f:  lea    -0x1(%ecx),%ebx
0x000000003ffaf062:  imul   $0x14,%ecx,%ecx
0x000000003ffaf065:  add    $0xf6608,%ecx
0x000000003ffaf06b:  test   %ebx,%ebx
0x000000003ffaf06d:  js     0x3ffaf08f

----------------
IN: 
0x000000003ffaf06f:  mov    -0xc(%ecx),%eax
0x000000003ffaf072:  mov    -0x8(%ecx),%edx
0x000000003ffaf075:  add    -0x14(%ecx),%eax
0x000000003ffaf078:  adc    -0x10(%ecx),%edx
0x000000003ffaf07b:  mov    -0x4(%ecx),%esi
0x000000003ffaf07e:  cmp    $0x0,%edx
0x000000003ffaf081:  ja     0x3ffaf089

----------------
IN: 
0x000000003ffaf089:  dec    %ebx
0x000000003ffaf08a:  sub    $0x14,%ecx
0x000000003ffaf08d:  jmp    0x3ffaf06b

----------------
IN: 
0x000000003ffaf06b:  test   %ebx,%ebx
0x000000003ffaf06d:  js     0x3ffaf08f

----------------
IN: 
0x000000003ffaf083:  and    $0xfffffffd,%esi
0x000000003ffaf086:  dec    %esi
0x000000003ffaf087:  je     0x3ffaf091

----------------
IN: 
0x000000003ffaf091:  cmp    $0x100000,%eax
0x000000003ffaf096:  jae    0x3ffaf09d

----------------
IN: 
0x000000003ffaf09d:  mov    %eax,0xf6600
0x000000003ffaf0a2:  pop    %ebx
0x000000003ffaf0a3:  pop    %esi
0x000000003ffaf0a4:  ret    

----------------
IN: 
0x000000003ffba96a:  mov    $0x510,%edx
0x000000003ffba96f:  xor    %eax,%eax
0x000000003ffba971:  out    %ax,(%dx)
0x000000003ffba973:  mov    $0xf5aa0,%ecx
0x000000003ffba978:  mov    $0x11,%dl
0x000000003ffba97a:  mov    $0x511,%ebx
0x000000003ffba97f:  in     (%dx),%al
0x000000003ffba980:  movzbl %al,%eax
0x000000003ffba983:  movsbl (%ecx),%esi
0x000000003ffba986:  cmp    %esi,%eax
0x000000003ffba988:  jne    0x3ffbaecf

----------------
IN: 
0x000000003ffba98e:  inc    %ecx
0x000000003ffba98f:  cmp    $0xf5aa4,%ecx
0x000000003ffba995:  jne    0x3ffba97a

----------------
IN: 
0x000000003ffba97a:  mov    $0x511,%ebx
0x000000003ffba97f:  in     (%dx),%al
0x000000003ffba980:  movzbl %al,%eax
0x000000003ffba983:  movsbl (%ecx),%esi
0x000000003ffba986:  cmp    %esi,%eax
0x000000003ffba988:  jne    0x3ffbaecf

----------------
IN: 
0x000000003ffba997:  movl   $0xf5d03,(%esp)
0x000000003ffba99e:  call   0xf1cc0

----------------
IN: 
0x000000003ffba9a3:  movl   $0x2,(%esp)
0x000000003ffba9aa:  xor    %ecx,%ecx
0x000000003ffba9ac:  mov    $0xe,%edx
0x000000003ffba9b1:  mov    $0xf5d16,%eax
0x000000003ffba9b6:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffb0a87:  push   %ebp
0x000000003ffb0a88:  push   %edi
0x000000003ffb0a89:  push   %esi
0x000000003ffb0a8a:  push   %ebx
0x000000003ffb0a8b:  push   %ebx
0x000000003ffb0a8c:  mov    %eax,(%esp)
0x000000003ffb0a8f:  mov    %edx,%edi
0x000000003ffb0a91:  mov    %ecx,%esi
0x000000003ffb0a93:  mov    0x18(%esp),%ebp
0x000000003ffb0a97:  mov    $0x94,%eax
0x000000003ffb0a9c:  call   0x3ffafe53

----------------
IN: 
0x000000003ffafe53:  push   %ebx
0x000000003ffafe54:  mov    %eax,%ebx
0x000000003ffafe56:  call   0x3ffaef53

----------------
IN: 
0x000000003ffaef53:  mov    $0x10,%ecx
0x000000003ffaef58:  mov    %eax,%edx
0x000000003ffaef5a:  mov    $0x3ffbfeab,%eax
0x000000003ffaef5f:  jmp    0x3ffaeed1

----------------
IN: 
0x000000003ffaeed1:  push   %ebp
0x000000003ffaeed2:  push   %edi
0x000000003ffaeed3:  push   %esi
0x000000003ffaeed4:  push   %ebx
0x000000003ffaeed5:  push   %ebx
0x000000003ffaeed6:  mov    %edx,%esi
0x000000003ffaeed8:  test   %edx,%edx
0x000000003ffaeeda:  jne    0x3ffaeee0

----------------
IN: 
0x000000003ffaeee0:  mov    %eax,%edi
0x000000003ffaeee2:  mov    %ecx,%ebp
0x000000003ffaeee4:  movl   $0x0,(%esp)
0x000000003ffaeeeb:  mov    $0x10,%ecx
0x000000003ffaeef0:  mov    $0x2c,%edx
0x000000003ffaeef5:  mov    $0x3ffbfeab,%eax
0x000000003ffaeefa:  call   0x3ffaee4b

----------------
IN: 
0x000000003ffaeeff:  mov    %eax,%ebx
0x000000003ffaef01:  test   %eax,%eax
0x000000003ffaef03:  jne    0x3ffaef26

----------------
IN: 
0x000000003ffaef26:  movl   $0xffffffff,0x28(%ebx)
0x000000003ffaef2d:  lea    0x14(%ebx),%eax
0x000000003ffaef30:  mov    %eax,(%esp)
0x000000003ffaef33:  mov    %ebp,%ecx
0x000000003ffaef35:  mov    %esi,%edx
0x000000003ffaef37:  mov    %edi,%eax
0x000000003ffaef39:  call   0x3ffaee4b

----------------
IN: 
0x000000003ffaee72:  mov    %ebx,0x8(%edi)
0x000000003ffaee75:  add    %ebx,%edx
0x000000003ffaee77:  mov    %edx,0xc(%edi)
0x000000003ffaee7a:  mov    %eax,0x10(%edi)
0x000000003ffaee7d:  mov    %ebx,0x10(%esi)
0x000000003ffaee80:  mov    0x4(%esi),%edx
0x000000003ffaee83:  mov    %edi,%eax
0x000000003ffaee85:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffaef3e:  mov    %eax,%esi
0x000000003ffaef40:  test   %eax,%eax
0x000000003ffaef42:  jne    0x3ffaef4b

----------------
IN: 
0x000000003ffaef4b:  mov    %esi,%eax
0x000000003ffaef4d:  pop    %edx
0x000000003ffaef4e:  pop    %ebx
0x000000003ffaef4f:  pop    %esi
0x000000003ffaef50:  pop    %edi
0x000000003ffaef51:  pop    %ebp
0x000000003ffaef52:  ret    

----------------
IN: 
0x000000003ffafe5b:  test   %eax,%eax
0x000000003ffafe5d:  jne    0x3ffafe71

----------------
IN: 
0x000000003ffafe71:  pop    %ebx
0x000000003ffafe72:  ret    

----------------
IN: 
0x000000003ffb0aa1:  mov    %eax,%ebx
0x000000003ffb0aa3:  test   %eax,%eax
0x000000003ffb0aa5:  jne    0x3ffb0abb

----------------
IN: 
0x000000003ffb0abb:  mov    $0x94,%ecx
0x000000003ffb0ac0:  xor    %edx,%edx
0x000000003ffb0ac2:  call   0xf118c

----------------
IN: 
0x000000003ffb0ac7:  lea    0x4(%ebx),%eax
0x000000003ffb0aca:  mov    $0x80,%ecx
0x000000003ffb0acf:  mov    (%esp),%edx
0x000000003ffb0ad2:  call   0x3ffaeb54

----------------
IN: 
0x000000003ffaeb54:  push   %esi
0x000000003ffaeb55:  push   %ebx
0x000000003ffaeb56:  lea    0x1(%edx),%esi
0x000000003ffaeb59:  add    %ecx,%edx
0x000000003ffaeb5b:  mov    %eax,%ebx
0x000000003ffaeb5d:  cmp    %edx,%esi
0x000000003ffaeb5f:  je     0x3ffaeb6f

----------------
IN: 
0x000000003ffaeb61:  inc    %esi
0x000000003ffaeb62:  mov    -0x2(%esi),%cl
0x000000003ffaeb65:  test   %cl,%cl
0x000000003ffaeb67:  je     0x3ffaeb6f

----------------
IN: 
0x000000003ffaeb69:  inc    %ebx
0x000000003ffaeb6a:  mov    %cl,-0x1(%ebx)
0x000000003ffaeb6d:  jmp    0x3ffaeb5d

----------------
IN: 
0x000000003ffaeb5d:  cmp    %edx,%esi
0x000000003ffaeb5f:  je     0x3ffaeb6f

----------------
IN: 
0x000000003ffaeb6f:  movb   $0x0,(%ebx)
0x000000003ffaeb72:  pop    %ebx
0x000000003ffaeb73:  pop    %esi
0x000000003ffaeb74:  ret    

----------------
IN: 
0x000000003ffb0ad7:  mov    %ebp,0x84(%ebx)
0x000000003ffb0add:  mov    %edi,0x8c(%ebx)
0x000000003ffb0ae3:  mov    %esi,0x90(%ebx)
0x000000003ffb0ae9:  movl   $0x3ffb0100,0x88(%ebx)
0x000000003ffb0af3:  mov    0x3ffbfe8f,%eax
0x000000003ffb0af8:  mov    %eax,(%ebx)
0x000000003ffb0afa:  mov    %ebx,0x3ffbfe8f
0x000000003ffb0b00:  pop    %eax
0x000000003ffb0b01:  pop    %ebx
0x000000003ffb0b02:  pop    %esi
0x000000003ffb0b03:  pop    %edi
0x000000003ffb0b04:  pop    %ebp
0x000000003ffb0b05:  ret    

----------------
IN: 
0x000000003ffba9bb:  movl   $0x1,(%esp)
0x000000003ffba9c2:  xor    %ecx,%ecx
0x000000003ffba9c4:  mov    $0x8002,%edx
0x000000003ffba9c9:  mov    $0xf5041,%eax
0x000000003ffba9ce:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffba9d3:  movl   $0x2,(%esp)
0x000000003ffba9da:  xor    %ecx,%ecx
0x000000003ffba9dc:  mov    $0xf,%edx
0x000000003ffba9e1:  mov    $0xf530c,%eax
0x000000003ffba9e6:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffba9eb:  mov    $0x510,%esi
0x000000003ffba9f0:  mov    $0xd,%eax
0x000000003ffba9f5:  mov    %esi,%edx
0x000000003ffba9f7:  out    %ax,(%dx)
0x000000003ffba9f9:  mov    $0x8,%ecx
0x000000003ffba9fe:  lea    0xe8(%esp),%edi
0x000000003ffbaa05:  mov    %ebx,%edx
0x000000003ffbaa07:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbaa07:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbaa09:  xor    %edx,%edx
0x000000003ffbaa0b:  xor    %ecx,%ecx
0x000000003ffbaa0d:  mov    $0xf530c,%eax
0x000000003ffbaa12:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb01ef:  push   %ebp
0x000000003ffb01f0:  mov    %esp,%ebp
0x000000003ffb01f2:  push   %edi
0x000000003ffb01f3:  push   %esi
0x000000003ffb01f4:  push   %ebx
0x000000003ffb01f5:  sub    $0x8,%esp
0x000000003ffb01f8:  mov    %edx,%esi
0x000000003ffb01fa:  mov    %ecx,%edi
0x000000003ffb01fc:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffb01ba:  push   %edi
0x000000003ffb01bb:  push   %esi
0x000000003ffb01bc:  push   %ebx
0x000000003ffb01bd:  mov    %eax,%esi
0x000000003ffb01bf:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffaeb25:  mov    %eax,%edx
0x000000003ffaeb27:  cmpb   $0x0,(%edx)
0x000000003ffaeb2a:  je     0x3ffaeb2f

----------------
IN: 
0x000000003ffaeb2c:  inc    %edx
0x000000003ffaeb2d:  jmp    0x3ffaeb27

----------------
IN: 
0x000000003ffaeb27:  cmpb   $0x0,(%edx)
0x000000003ffaeb2a:  je     0x3ffaeb2f

----------------
IN: 
0x000000003ffaeb2f:  sub    %eax,%edx
0x000000003ffaeb31:  mov    %edx,%eax
0x000000003ffaeb33:  ret    

----------------
IN: 
0x000000003ffb01c4:  lea    0x1(%eax),%edi
0x000000003ffb01c7:  mov    0x3ffbfe8f,%ebx
0x000000003ffb01cd:  test   %ebx,%ebx
0x000000003ffb01cf:  je     0x3ffb01e5

----------------
IN: 
0x000000003ffb01d1:  lea    0x4(%ebx),%edx
0x000000003ffb01d4:  mov    %edi,%ecx
0x000000003ffb01d6:  mov    %esi,%eax
0x000000003ffb01d8:  call   0x3ffaeb34

----------------
IN: 
0x000000003ffaeb34:  push   %esi
0x000000003ffaeb35:  push   %ebx
0x000000003ffaeb36:  mov    %edx,%esi
0x000000003ffaeb38:  xor    %ebx,%ebx
0x000000003ffaeb3a:  cmp    %ecx,%ebx
0x000000003ffaeb3c:  je     0x3ffaeb4f

----------------
IN: 
0x000000003ffaeb3e:  mov    (%eax,%ebx,1),%dl
0x000000003ffaeb41:  inc    %ebx
0x000000003ffaeb42:  cmp    -0x1(%esi,%ebx,1),%dl
0x000000003ffaeb46:  je     0x3ffaeb3a

----------------
IN: 
0x000000003ffaeb3a:  cmp    %ecx,%ebx
0x000000003ffaeb3c:  je     0x3ffaeb4f

----------------
IN: 
0x000000003ffaeb4f:  xor    %eax,%eax
0x000000003ffaeb51:  pop    %ebx
0x000000003ffaeb52:  pop    %esi
0x000000003ffaeb53:  ret    

----------------
IN: 
0x000000003ffb01dd:  test   %eax,%eax
0x000000003ffb01df:  je     0x3ffb01e9

----------------
IN: 
0x000000003ffb01e9:  mov    %ebx,%eax
0x000000003ffb01eb:  pop    %ebx
0x000000003ffb01ec:  pop    %esi
0x000000003ffb01ed:  pop    %edi
0x000000003ffb01ee:  ret    

----------------
IN: 
0x000000003ffb0201:  mov    %eax,%ebx
0x000000003ffb0203:  test   %eax,%eax
0x000000003ffb0205:  jne    0x3ffb020d

----------------
IN: 
0x000000003ffb020d:  mov    0x84(%eax),%eax
0x000000003ffb0213:  lea    -0x1(%eax),%edx
0x000000003ffb0216:  cmp    $0x7,%edx
0x000000003ffb0219:  ja     0x3ffb0207

----------------
IN: 
0x000000003ffb021b:  test   %eax,%edx
0x000000003ffb021d:  jne    0x3ffb0207

----------------
IN: 
0x000000003ffb021f:  movl   $0x0,(%esp)
0x000000003ffb0226:  movl   $0x0,0x4(%esp)
0x000000003ffb022e:  mov    $0x8,%ecx
0x000000003ffb0233:  mov    %esp,%edx
0x000000003ffb0235:  mov    %ebx,%eax
0x000000003ffb0237:  call   *0x88(%ebx)

----------------
IN: 
0x000000003ffb0100:  push   %ebp
0x000000003ffb0101:  push   %edi
0x000000003ffb0102:  push   %esi
0x000000003ffb0103:  push   %ebx
0x000000003ffb0104:  mov    %eax,%ebx
0x000000003ffb0106:  mov    0x84(%eax),%ebp
0x000000003ffb010c:  cmp    %ecx,%ebp
0x000000003ffb010e:  ja     0x3ffb0142

----------------
IN: 
0x000000003ffb0110:  mov    %edx,%edi
0x000000003ffb0112:  movzwl 0x8c(%eax),%eax
0x000000003ffb0119:  mov    $0x510,%edx
0x000000003ffb011e:  out    %ax,(%dx)
0x000000003ffb0120:  mov    0x90(%ebx),%esi
0x000000003ffb0126:  mov    $0x11,%dl
0x000000003ffb0128:  dec    %esi
0x000000003ffb0129:  cmp    $0xffffffff,%esi
0x000000003ffb012c:  je     0x3ffb0131

----------------
IN: 
0x000000003ffb0131:  mov    %ebp,%ecx
0x000000003ffb0133:  mov    $0x511,%edx
0x000000003ffb0138:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffb0138:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffb013a:  mov    0x84(%ebx),%eax
0x000000003ffb0140:  jmp    0x3ffb0145

----------------
IN: 
0x000000003ffb0145:  pop    %ebx
0x000000003ffb0146:  pop    %esi
0x000000003ffb0147:  pop    %edi
0x000000003ffb0148:  pop    %ebp
0x000000003ffb0149:  ret    

----------------
IN: 
0x000000003ffb023d:  test   %eax,%eax
0x000000003ffb023f:  js     0x3ffb0207

----------------
IN: 
0x000000003ffb0241:  mov    (%esp),%eax
0x000000003ffb0244:  mov    0x4(%esp),%edx
0x000000003ffb0248:  pop    %ecx
0x000000003ffb0249:  pop    %ebx
0x000000003ffb024a:  pop    %ebx
0x000000003ffb024b:  pop    %esi
0x000000003ffb024c:  pop    %edi
0x000000003ffb024d:  pop    %ebp
0x000000003ffb024e:  ret    

----------------
IN: 
0x000000003ffbaa17:  lea    0x0(,%eax,8),%edi
0x000000003ffbaa1e:  mov    %edi,(%esp)
0x000000003ffbaa21:  mov    $0x8,%ecx
0x000000003ffbaa26:  mov    $0xd,%edx
0x000000003ffbaa2b:  mov    $0xf5062,%eax
0x000000003ffbaa30:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffbaa35:  lea    0x8(%edi),%ecx
0x000000003ffbaa38:  mov    0xe8(%esp),%eax
0x000000003ffbaa3f:  shl    $0x3,%eax
0x000000003ffbaa42:  mov    %eax,(%esp)
0x000000003ffbaa45:  mov    $0xd,%edx
0x000000003ffbaa4a:  mov    $0xf5053,%eax
0x000000003ffbaa4f:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffbaa54:  mov    $0xffff8000,%eax
0x000000003ffbaa59:  mov    %esi,%edx
0x000000003ffbaa5b:  out    %ax,(%dx)
0x000000003ffbaa5d:  mov    $0x2,%ecx
0x000000003ffbaa62:  lea    0xdc(%esp),%edi
0x000000003ffbaa69:  mov    %ebx,%edx
0x000000003ffbaa6b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbaa6b:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbaa6d:  mov    $0x2,%eax
0x000000003ffbaa72:  xor    %ebx,%ebx
0x000000003ffbaa74:  lea    0x110(%esp),%esi
0x000000003ffbaa7b:  movzwl 0xdc(%esp),%edx
0x000000003ffbaa83:  cmp    %edx,%ebx
0x000000003ffbaa85:  jge    0x3ffbaafa

----------------
IN: 
0x000000003ffbaafa:  mov    $0x510,%edx
0x000000003ffbaaff:  mov    $0xffff8001,%eax
0x000000003ffbab04:  out    %ax,(%dx)
0x000000003ffbab06:  mov    $0x2,%ecx
0x000000003ffbab0b:  lea    0xdc(%esp),%edi
0x000000003ffbab12:  mov    $0x11,%dl
0x000000003ffbab14:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbab14:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbab16:  mov    $0x2,%ebx
0x000000003ffbab1b:  xor    %ebp,%ebp
0x000000003ffbab1d:  lea    0x110(%esp),%esi
0x000000003ffbab24:  movzwl 0xdc(%esp),%eax
0x000000003ffbab2c:  cmp    %eax,%ebp
0x000000003ffbab2e:  jge    0x3ffbabef

----------------
IN: 
0x000000003ffbabef:  mov    $0x510,%edx
0x000000003ffbabf4:  mov    $0x19,%eax
0x000000003ffbabf9:  out    %ax,(%dx)
0x000000003ffbabfb:  mov    $0x4,%ecx
0x000000003ffbac00:  lea    0xdc(%esp),%edi
0x000000003ffbac07:  mov    $0x11,%dl
0x000000003ffbac09:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbac09:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbac0b:  mov    0xdc(%esp),%eax
0x000000003ffbac12:  call   0x3ffafe50

----------------
IN: 
0x000000003ffafe50:  bswap  %eax
0x000000003ffafe52:  ret    

----------------
IN: 
0x000000003ffbac17:  mov    %eax,0xdc(%esp)
0x000000003ffbac1e:  xor    %ebx,%ebx
0x000000003ffbac20:  cmp    0xdc(%esp),%ebx
0x000000003ffbac27:  jae    0x3ffbac68

----------------
IN: 
0x000000003ffbac29:  mov    $0x40,%ecx
0x000000003ffbac2e:  lea    0x110(%esp),%edi
0x000000003ffbac35:  mov    $0x511,%edx
0x000000003ffbac3a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbac3a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000000003ffbac3c:  mov    0x110(%esp),%eax
0x000000003ffbac43:  call   0x3ffafe50

----------------
IN: 
0x000000003ffbac48:  mov    0x114(%esp),%edx
0x000000003ffbac4f:  xchg   %dh,%dl
0x000000003ffbac51:  movzwl %dx,%edx
0x000000003ffbac54:  mov    %eax,(%esp)
0x000000003ffbac57:  xor    %ecx,%ecx
0x000000003ffbac59:  lea    0x118(%esp),%eax
0x000000003ffbac60:  call   0x3ffb0a87

----------------
IN: 
0x000000003ffbac65:  inc    %ebx
0x000000003ffbac66:  jmp    0x3ffbac20

----------------
IN: 
0x000000003ffbac20:  cmp    0xdc(%esp),%ebx
0x000000003ffbac27:  jae    0x3ffbac68

----------------
IN: 
0x000000003ffbac68:  lea    0xe0(%esp),%edx
0x000000003ffbac6f:  mov    $0xf5d48,%eax
0x000000003ffbac74:  call   0x3ffb0721

----------------
IN: 
0x000000003ffb0721:  push   %ebp
0x000000003ffb0722:  push   %edi
0x000000003ffb0723:  push   %esi
0x000000003ffb0724:  push   %ebx
0x000000003ffb0725:  mov    %edx,%ebp
0x000000003ffb0727:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffaeb48:  sbb    %eax,%eax
0x000000003ffaeb4a:  or     $0x1,%eax
0x000000003ffaeb4d:  jmp    0x3ffaeb51

----------------
IN: 
0x000000003ffaeb51:  pop    %ebx
0x000000003ffaeb52:  pop    %esi
0x000000003ffaeb53:  ret    

----------------
IN: 
0x000000003ffb01e1:  mov    (%ebx),%ebx
0x000000003ffb01e3:  jmp    0x3ffb01cd

----------------
IN: 
0x000000003ffb01cd:  test   %ebx,%ebx
0x000000003ffb01cf:  je     0x3ffb01e5

----------------
IN: 
0x000000003ffb072c:  mov    %eax,%edi
0x000000003ffb072e:  test   %eax,%eax
0x000000003ffb0730:  je     0x3ffb0783

----------------
IN: 
0x000000003ffb0732:  mov    0x84(%eax),%esi
0x000000003ffb0738:  test   %esi,%esi
0x000000003ffb073a:  je     0x3ffb0783

----------------
IN: 
0x000000003ffb073c:  lea    0x1(%esi),%eax
0x000000003ffb073f:  call   0x3ffaef53

----------------
IN: 
0x000000003ffb0744:  mov    %eax,%ebx
0x000000003ffb0746:  test   %eax,%eax
0x000000003ffb0748:  jne    0x3ffb075b

----------------
IN: 
0x000000003ffb075b:  mov    %esi,%ecx
0x000000003ffb075d:  mov    %eax,%edx
0x000000003ffb075f:  mov    %edi,%eax
0x000000003ffb0761:  call   *0x88(%edi)

----------------
IN: 
0x000000003ffb0767:  test   %eax,%eax
0x000000003ffb0769:  jns    0x3ffb0774

----------------
IN: 
0x000000003ffb0774:  test   %ebp,%ebp
0x000000003ffb0776:  je     0x3ffb077b

----------------
IN: 
0x000000003ffb0778:  mov    %esi,0x0(%ebp)
0x000000003ffb077b:  movb   $0x0,(%ebx,%esi,1)
0x000000003ffb077f:  mov    %ebx,%eax
0x000000003ffb0781:  jmp    0x3ffb0785

----------------
IN: 
0x000000003ffb0785:  pop    %ebx
0x000000003ffb0786:  pop    %esi
0x000000003ffb0787:  pop    %edi
0x000000003ffb0788:  pop    %ebp
0x000000003ffb0789:  ret    

----------------
IN: 
0x000000003ffbac79:  test   %eax,%eax
0x000000003ffbac7b:  je     0x3ffbad97

----------------
IN: 
0x000000003ffbac81:  mov    %eax,%esi
0x000000003ffbac83:  movl   $0x0,0x30(%esp)
0x000000003ffbac8b:  mov    0xe0(%esp),%eax
0x000000003ffbac92:  mov    $0x14,%ecx
0x000000003ffbac97:  xor    %edx,%edx
0x000000003ffbac99:  div    %ecx
0x000000003ffbac9b:  cmp    %eax,0x30(%esp)
0x000000003ffbac9f:  jae    0x3ffbaea4

----------------
IN: 
0x000000003ffbaca5:  mov    0x10(%esi),%eax
0x000000003ffbaca8:  cmp    $0x1,%eax
0x000000003ffbacab:  je     0x3ffbacbb

----------------
IN: 
0x000000003ffbacbb:  mov    0x8(%esi),%eax
0x000000003ffbacbe:  mov    0xc(%esi),%edx
0x000000003ffbacc1:  mov    %eax,0xc(%esp)
0x000000003ffbacc5:  mov    %edx,0x10(%esp)
0x000000003ffbacc9:  mov    (%esi),%eax
0x000000003ffbaccb:  mov    0x4(%esi),%edx
0x000000003ffbacce:  mov    %eax,0x4(%esp)
0x000000003ffbacd2:  mov    %edx,0x8(%esp)
0x000000003ffbacd6:  movl   $0xf5d51,(%esp)
0x000000003ffbacdd:  call   0xf1cc0

----------------
IN: 
0x00000000000f199f:  mov    0x1(%ebx),%al
0x00000000000f19a2:  cmp    $0x6c,%al
0x00000000000f19a4:  je     0xf19a9

----------------
IN: 
0x00000000000f19a9:  add    $0x2,%ebx
0x00000000000f19ac:  mov    0x2(%edx),%al
0x00000000000f19af:  mov    $0x1,%edi
0x00000000000f19b4:  cmp    $0x64,%al
0x00000000000f19b6:  je     0xf1a27

----------------
IN: 
0x00000000000f1a7a:  lea    0x8(%esi),%edi
0x00000000000f1a7d:  mov    0x4(%esi),%edx
0x00000000000f1a80:  test   %edx,%edx
0x00000000000f1a82:  je     0xf1aa8

----------------
IN: 
0x00000000000f1aa8:  mov    %eax,(%esp)
0x00000000000f1aab:  mov    %ebp,%edx
0x00000000000f1aad:  mov    0x4(%esp),%eax
0x00000000000f1ab1:  call   0xf1125

----------------
IN: 
0x00000000000f114f:  mov    (%esp),%edx
0x00000000000f1152:  mov    %esi,%eax
0x00000000000f1154:  call   0xf1087

----------------
IN: 
0x00000000000f1159:  dec    %ebp
0x00000000000f115a:  jmp    0xf114b

----------------
IN: 
0x00000000000f114b:  test   %ebp,%ebp
0x00000000000f114d:  jle    0xf115c

----------------
IN: 
0x00000000000f10ae:  jmp    *0xf43bc(,%ecx,4)

----------------
IN: 
0x000000003ffbace2:  mov    (%esi),%eax
0x000000003ffbace4:  mov    0x4(%esi),%edx
0x000000003ffbace7:  mov    0x3ffbff17,%edi
0x000000003ffbaced:  xor    %ebp,%ebp
0x000000003ffbacef:  mov    %edi,0x28(%esp)
0x000000003ffbacf3:  mov    %ebp,0x2c(%esp)
0x000000003ffbacf7:  cmp    $0x0,%edx
0x000000003ffbacfa:  ja     0x3ffbad06

----------------
IN: 
0x000000003ffbacfc:  cmp    0x28(%esp),%eax
0x000000003ffbad00:  jb     0x3ffbad8b

----------------
IN: 
0x000000003ffbad8b:  incl   0x30(%esp)
0x000000003ffbad8f:  add    $0x14,%esi
0x000000003ffbad92:  jmp    0x3ffbac8b

----------------
IN: 
0x000000003ffbac8b:  mov    0xe0(%esp),%eax
0x000000003ffbac92:  mov    $0x14,%ecx
0x000000003ffbac97:  xor    %edx,%edx
0x000000003ffbac99:  div    %ecx
0x000000003ffbac9b:  cmp    %eax,0x30(%esp)
0x000000003ffbac9f:  jae    0x3ffbaea4

----------------
IN: 
0x000000003ffbaea4:  mov    $0xf5397,%eax
0x000000003ffbaea9:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffbaeae:  test   %eax,%eax
0x000000003ffbaeb0:  je     0x3ffbaecf

----------------
IN: 
0x000000003ffbaeb2:  movw   $0x600,0xf64d0
0x000000003ffbaebb:  movl   $0x600,0x4(%esp)
0x000000003ffbaec3:  movl   $0xf5da1,(%esp)
0x000000003ffbaeca:  call   0xf1cc0

----------------
IN: 
0x000000003ffbaecf:  movl   $0x1,0xf6c30
0x000000003ffbaed9:  mov    $0x8f,%al
0x000000003ffbaedb:  out    %al,$0x70
0x000000003ffbaedd:  xor    %eax,%eax
0x000000003ffbaedf:  out    %al,$0x71
0x000000003ffbaee1:  xor    %eax,%eax
0x000000003ffbaee3:  mov    $0xfff53,%edx
0x000000003ffbaee8:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaef0:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaefa:  inc    %eax
0x000000003ffbaefb:  cmp    $0x100,%eax
0x000000003ffbaf00:  jne    0x3ffbaee8

----------------
IN: 
0x000000003ffbaee8:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaef0:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaefa:  inc    %eax
0x000000003ffbaefb:  cmp    $0x100,%eax
0x000000003ffbaf00:  jne    0x3ffbaee8

----------------
IN: 
0x000000003ffbaf02:  mov    $0x8,%ax
0x000000003ffbaf06:  mov    $0xfd676,%edx
0x000000003ffbaf0b:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaf13:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaf1d:  inc    %eax
0x000000003ffbaf1e:  cmp    $0x10,%eax
0x000000003ffbaf21:  jne    0x3ffbaf0b

----------------
IN: 
0x000000003ffbaf0b:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaf13:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaf1d:  inc    %eax
0x000000003ffbaf1e:  cmp    $0x10,%eax
0x000000003ffbaf21:  jne    0x3ffbaf0b

----------------
IN: 
0x000000003ffbaf23:  mov    $0x70,%al
0x000000003ffbaf25:  mov    $0xfd67f,%edx
0x000000003ffbaf2a:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaf32:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaf3c:  inc    %eax
0x000000003ffbaf3d:  cmp    $0x78,%eax
0x000000003ffbaf40:  jne    0x3ffbaf2a

----------------
IN: 
0x000000003ffbaf2a:  mov    %dx,0x0(,%eax,4)
0x000000003ffbaf32:  movw   $0xf000,0x2(,%eax,4)
0x000000003ffbaf3c:  inc    %eax
0x000000003ffbaf3d:  cmp    $0x78,%eax
0x000000003ffbaf40:  jne    0x3ffbaf2a

----------------
IN: 
0x000000003ffbaf42:  mov    $0xfe2c3,%eax
0x000000003ffbaf47:  mov    %ax,0x8
0x000000003ffbaf4d:  movw   $0xf000,0xa
0x000000003ffbaf56:  mov    $0xff065,%eax
0x000000003ffbaf5b:  mov    %ax,0x40
0x000000003ffbaf61:  movw   $0xf000,0x42
0x000000003ffbaf6a:  mov    $0xff84d,%eax
0x000000003ffbaf6f:  mov    %ax,0x44
0x000000003ffbaf75:  movw   $0xf000,0x46
0x000000003ffbaf7e:  mov    $0xff841,%eax
0x000000003ffbaf83:  mov    %ax,0x48
0x000000003ffbaf89:  movw   $0xf000,0x4a
0x000000003ffbaf92:  mov    $0xfe3fe,%eax
0x000000003ffbaf97:  mov    %ax,0x4c
0x000000003ffbaf9d:  movw   $0xf000,0x4e
0x000000003ffbafa6:  mov    $0xfe739,%eax
0x000000003ffbafab:  mov    %ax,0x50
0x000000003ffbafb1:  movw   $0xf000,0x52
0x000000003ffbafba:  mov    $0xff859,%eax
0x000000003ffbafbf:  mov    %ax,0x54
0x000000003ffbafc5:  movw   $0xf000,0x56
0x000000003ffbafce:  mov    $0xfe82e,%eax
0x000000003ffbafd3:  mov    %ax,0x58
0x000000003ffbafd9:  movw   $0xf000,0x5a
0x000000003ffbafe2:  mov    $0xfefd2,%eax
0x000000003ffbafe7:  mov    %ax,0x5c
0x000000003ffbafed:  movw   $0xf000,0x5e
0x000000003ffbaff6:  mov    $0xfd69b,%eax
0x000000003ffbaffb:  mov    %ax,0x60
0x000000003ffbb001:  movw   $0xf000,0x62
0x000000003ffbb00a:  mov    $0xfe6f2,%eax
0x000000003ffbb00f:  mov    %ax,0x64
0x000000003ffbb015:  movw   $0xf000,0x66
0x000000003ffbb01e:  mov    $0xffe6e,%eax
0x000000003ffbb023:  mov    %ax,0x68
0x000000003ffbb029:  movw   $0xf000,0x6a
0x000000003ffbb032:  mov    $0xfec59,%eax
0x000000003ffbb037:  mov    %ax,0x100
0x000000003ffbb03d:  movw   $0xf000,0x102
0x000000003ffbb046:  mov    $0x60,%eax
0x000000003ffbb04b:  movw   $0x0,0x0(,%eax,4)
0x000000003ffbb055:  movw   $0x0,0x2(,%eax,4)
0x000000003ffbb05f:  inc    %eax
0x000000003ffbb060:  cmp    $0x67,%eax
0x000000003ffbb063:  jne    0x3ffbb04b

----------------
IN: 
0x000000003ffbb04b:  movw   $0x0,0x0(,%eax,4)
0x000000003ffbb055:  movw   $0x0,0x2(,%eax,4)
0x000000003ffbb05f:  inc    %eax
0x000000003ffbb060:  cmp    $0x67,%eax
0x000000003ffbb063:  jne    0x3ffbb04b

----------------
IN: 
0x000000003ffbb065:  movw   $0x0,0x1e4
0x000000003ffbb06e:  movw   $0x0,0x1e6
0x000000003ffbb077:  mov    $0x100,%ecx
0x000000003ffbb07c:  xor    %edx,%edx
0x000000003ffbb07e:  mov    $0x400,%ax
0x000000003ffbb082:  call   0xf118c

----------------
IN: 
0x000000003ffbb087:  movw   $0x9fc0,0x40e
0x000000003ffbb090:  movw   $0x27f,0x413
0x000000003ffbb099:  mov    $0x121,%ecx
0x000000003ffbb09e:  xor    %edx,%edx
0x000000003ffbb0a0:  mov    $0x9fc00,%eax
0x000000003ffbb0a5:  call   0xf118c

----------------
IN: 
0x000000003ffbb0aa:  movb   $0x1,0x9fc00
0x000000003ffbb0b1:  movl   $0x2,0x8(%esp)
0x000000003ffbb0b9:  movl   $0x400,(%esp)
0x000000003ffbb0c0:  movl   $0x0,0x4(%esp)
0x000000003ffbb0c8:  mov    $0x9fc00,%eax
0x000000003ffbb0cd:  xor    %edx,%edx
0x000000003ffbb0cf:  call   0x3ffb0e3e

----------------
IN: 
0x000000003ffb0e3e:  push   %edi
0x000000003ffb0e3f:  push   %esi
0x000000003ffb0e40:  push   %ebx
0x000000003ffb0e41:  mov    0x10(%esp),%ebx
0x000000003ffb0e45:  mov    0x14(%esp),%ecx
0x000000003ffb0e49:  mov    %ecx,%edi
0x000000003ffb0e4b:  or     %ebx,%edi
0x000000003ffb0e4d:  je     0x3ffb0e57

----------------
IN: 
0x000000003ffb0e4f:  pop    %ebx
0x000000003ffb0e50:  pop    %esi
0x000000003ffb0e51:  pop    %edi
0x000000003ffb0e52:  jmp    0x3ffb0c73

----------------
IN: 
0x000000003ffb0c73:  push   %ebp
0x000000003ffb0c74:  push   %edi
0x000000003ffb0c75:  push   %esi
0x000000003ffb0c76:  push   %ebx
0x000000003ffb0c77:  sub    $0x34,%esp
0x000000003ffb0c7a:  mov    %eax,0x14(%esp)
0x000000003ffb0c7e:  mov    %edx,0x18(%esp)
0x000000003ffb0c82:  mov    0x48(%esp),%ebx
0x000000003ffb0c86:  mov    0x4c(%esp),%esi
0x000000003ffb0c8a:  mov    %esi,%edi
0x000000003ffb0c8c:  mov    %ebx,%esi
0x000000003ffb0c8e:  mov    %ebx,0x24(%esp)
0x000000003ffb0c92:  mov    %edi,0x28(%esp)
0x000000003ffb0c96:  mov    0x50(%esp),%ebx
0x000000003ffb0c9a:  mov    %ebx,0x2c(%esp)
0x000000003ffb0c9e:  add    %esi,%eax
0x000000003ffb0ca0:  adc    %edi,%edx
0x000000003ffb0ca2:  mov    %eax,0xc(%esp)
0x000000003ffb0ca6:  mov    %edx,0x10(%esp)
0x000000003ffb0caa:  mov    0xf6604,%edx
0x000000003ffb0cb0:  mov    $0xf6608,%eax
0x000000003ffb0cb5:  xor    %esi,%esi
0x000000003ffb0cb7:  cmp    %edx,%esi
0x000000003ffb0cb9:  jge    0x3ffb0d8c

----------------
IN: 
0x000000003ffb0cbf:  mov    %eax,0x30(%esp)
0x000000003ffb0cc3:  mov    (%eax),%ecx
0x000000003ffb0cc5:  mov    0x4(%eax),%ebx
0x000000003ffb0cc8:  mov    %ecx,%edi
0x000000003ffb0cca:  mov    %ebx,%ebp
0x000000003ffb0ccc:  add    0x8(%eax),%edi
0x000000003ffb0ccf:  adc    0xc(%eax),%ebp
0x000000003ffb0cd2:  mov    %edi,0x1c(%esp)
0x000000003ffb0cd6:  mov    %ebp,0x20(%esp)
0x000000003ffb0cda:  add    $0x14,%eax
0x000000003ffb0cdd:  cmp    %ebp,0x18(%esp)
0x000000003ffb0ce1:  jb     0x3ffb0cf2

----------------
IN: 
0x000000003ffb0ce3:  ja     0x3ffb0cef

----------------
IN: 
0x000000003ffb0ce5:  mov    0x1c(%esp),%edi
0x000000003ffb0ce9:  cmp    %edi,0x14(%esp)
0x000000003ffb0ced:  jbe    0x3ffb0cf2

----------------
IN: 
0x000000003ffb0cf2:  cmp    %ebx,0x18(%esp)
0x000000003ffb0cf6:  jb     0x3ffb0d8c

----------------
IN: 
0x000000003ffb0cfc:  ja     0x3ffb0d08

----------------
IN: 
0x000000003ffb0cfe:  cmp    %ecx,0x14(%esp)
0x000000003ffb0d02:  jbe    0x3ffb0d8c

----------------
IN: 
0x000000003ffb0d08:  mov    0x30(%esp),%eax
0x000000003ffb0d0c:  mov    0x10(%eax),%eax
0x000000003ffb0d0f:  mov    %eax,%edi
0x000000003ffb0d11:  cmp    %eax,0x2c(%esp)
0x000000003ffb0d15:  jne    0x3ffb0d35

----------------
IN: 
0x000000003ffb0d35:  mov    0x14(%esp),%eax
0x000000003ffb0d39:  mov    0x18(%esp),%edx
0x000000003ffb0d3d:  sub    %ecx,%eax
0x000000003ffb0d3f:  sbb    %ebx,%edx
0x000000003ffb0d41:  mov    0x30(%esp),%ebx
0x000000003ffb0d45:  mov    %eax,0x8(%ebx)
0x000000003ffb0d48:  mov    %edx,0xc(%ebx)
0x000000003ffb0d4b:  inc    %esi
0x000000003ffb0d4c:  mov    0x10(%esp),%eax
0x000000003ffb0d50:  cmp    %eax,0x20(%esp)
0x000000003ffb0d54:  jb     0x3ffb0d8c

----------------
IN: 
0x000000003ffb0d56:  ja     0x3ffb0d62

----------------
IN: 
0x000000003ffb0d58:  mov    0xc(%esp),%eax
0x000000003ffb0d5c:  cmp    %eax,0x1c(%esp)
0x000000003ffb0d60:  jbe    0x3ffb0d8c

----------------
IN: 
0x000000003ffb0d8c:  imul   $0x14,%esi,%ebx
0x000000003ffb0d8f:  cmp    0xf6604,%esi
0x000000003ffb0d95:  jge    0x3ffb0e03

----------------
IN: 
0x000000003ffb0d97:  lea    0xf6608(%ebx),%ecx
0x000000003ffb0d9d:  mov    0xf6608(%ebx),%eax
0x000000003ffb0da3:  mov    0xf660c(%ebx),%edx
0x000000003ffb0da9:  cmp    %edx,0x10(%esp)
0x000000003ffb0dad:  jb     0x3ffb0e03

----------------
IN: 
0x000000003ffb0daf:  ja     0x3ffb0db7

----------------
IN: 
0x000000003ffb0db1:  cmp    %eax,0xc(%esp)
0x000000003ffb0db5:  jb     0x3ffb0e03

----------------
IN: 
0x000000003ffb0e03:  mov    0x2c(%esp),%eax
0x000000003ffb0e07:  cmp    $0xffffffff,%eax
0x000000003ffb0e0a:  je     0x3ffb0e36

----------------
IN: 
0x000000003ffb0e0c:  mov    %eax,0x50(%esp)
0x000000003ffb0e10:  mov    0x24(%esp),%eax
0x000000003ffb0e14:  mov    0x28(%esp),%edx
0x000000003ffb0e18:  mov    %eax,0x48(%esp)
0x000000003ffb0e1c:  mov    %edx,0x4c(%esp)
0x000000003ffb0e20:  mov    0x14(%esp),%edx
0x000000003ffb0e24:  mov    0x18(%esp),%ecx
0x000000003ffb0e28:  mov    %esi,%eax
0x000000003ffb0e2a:  add    $0x34,%esp
0x000000003ffb0e2d:  pop    %ebx
0x000000003ffb0e2e:  pop    %esi
0x000000003ffb0e2f:  pop    %edi
0x000000003ffb0e30:  pop    %ebp
0x000000003ffb0e31:  jmp    0x3ffb0bdf

----------------
IN: 
0x000000003ffb0bdf:  push   %ebp
0x000000003ffb0be0:  push   %edi
0x000000003ffb0be1:  push   %esi
0x000000003ffb0be2:  push   %ebx
0x000000003ffb0be3:  sub    $0xc,%esp
0x000000003ffb0be6:  mov    %edx,(%esp)
0x000000003ffb0be9:  mov    %ecx,0x4(%esp)
0x000000003ffb0bed:  mov    0x20(%esp),%edi
0x000000003ffb0bf1:  mov    0x24(%esp),%ebp
0x000000003ffb0bf5:  mov    0x28(%esp),%esi
0x000000003ffb0bf9:  mov    %esi,0x8(%esp)
0x000000003ffb0bfd:  mov    0xf6604,%ecx
0x000000003ffb0c03:  cmp    $0x1f,%ecx
0x000000003ffb0c06:  jle    0x3ffb0c1e

----------------
IN: 
0x000000003ffb0c1e:  imul   $0x14,%eax,%esi
0x000000003ffb0c21:  lea    0xf6608(%esi),%ebx
0x000000003ffb0c27:  sub    %eax,%ecx
0x000000003ffb0c29:  imul   $0x14,%ecx,%ecx
0x000000003ffb0c2c:  inc    %eax
0x000000003ffb0c2d:  imul   $0x14,%eax,%eax
0x000000003ffb0c30:  add    $0xf6608,%eax
0x000000003ffb0c35:  mov    %ebx,%edx
0x000000003ffb0c37:  call   0x3ffaf731

----------------
IN: 
0x000000003ffb0c3c:  incl   0xf6604
0x000000003ffb0c42:  mov    (%esp),%eax
0x000000003ffb0c45:  mov    0x4(%esp),%edx
0x000000003ffb0c49:  mov    %eax,0xf6608(%esi)
0x000000003ffb0c4f:  mov    %edx,0xf660c(%esi)
0x000000003ffb0c55:  mov    %edi,0xf6610(%esi)
0x000000003ffb0c5b:  mov    %ebp,0xf6614(%esi)
0x000000003ffb0c61:  mov    0x8(%esp),%eax
0x000000003ffb0c65:  mov    %eax,0xf6618(%esi)
0x000000003ffb0c6b:  add    $0xc,%esp
0x000000003ffb0c6e:  pop    %ebx
0x000000003ffb0c6f:  pop    %esi
0x000000003ffb0c70:  pop    %edi
0x000000003ffb0c71:  pop    %ebp
0x000000003ffb0c72:  ret    

----------------
IN: 
0x000000003ffbb0d4:  mov    $0xefff8,%eax
0x000000003ffbb0d9:  sub    $0xe0000,%eax
0x000000003ffbb0de:  mov    %eax,0xef7f0
0x000000003ffbb0e3:  mov    $0x1,%edx
0x000000003ffbb0e8:  xor    %ecx,%ecx
0x000000003ffbb0ea:  mov    $0xf5db9,%eax
0x000000003ffbb0ef:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb01e5:  xor    %eax,%eax
0x000000003ffb01e7:  jmp    0x3ffb01eb

----------------
IN: 
0x000000003ffb01eb:  pop    %ebx
0x000000003ffb01ec:  pop    %esi
0x000000003ffb01ed:  pop    %edi
0x000000003ffb01ee:  ret    

----------------
IN: 
0x000000003ffb0207:  mov    %esi,%eax
0x000000003ffb0209:  mov    %edi,%edx
0x000000003ffb020b:  jmp    0x3ffb0248

----------------
IN: 
0x000000003ffb0248:  pop    %ecx
0x000000003ffb0249:  pop    %ebx
0x000000003ffb024a:  pop    %ebx
0x000000003ffb024b:  pop    %esi
0x000000003ffb024c:  pop    %edi
0x000000003ffb024d:  pop    %ebp
0x000000003ffb024e:  ret    

----------------
IN: 
0x000000003ffbb0f4:  mov    %eax,0xf65d8
0x000000003ffbb0f9:  mov    $0xb8,%al
0x000000003ffbb0fb:  out    %al,$0x70
0x000000003ffbb0fd:  in     $0x71,%al
0x000000003ffbb0ff:  test   $0x1,%al
0x000000003ffbb101:  je     0x3ffbb10d

----------------
IN: 
0x000000003ffbb10d:  mov    $0xbd,%al
0x000000003ffbb10f:  out    %al,$0x70
0x000000003ffbb111:  in     $0x71,%al
0x000000003ffbb113:  movzbl %al,%edx
0x000000003ffbb116:  mov    $0xb8,%al
0x000000003ffbb118:  out    %al,$0x70
0x000000003ffbb11a:  in     $0x71,%al
0x000000003ffbb11c:  mov    %eax,%ecx
0x000000003ffbb11e:  and    $0xf0,%ecx
0x000000003ffbb124:  shl    $0x4,%ecx
0x000000003ffbb127:  or     %edx,%ecx
0x000000003ffbb129:  mov    $0x270f,%edi
0x000000003ffbb12e:  mov    $0x270f,%esi
0x000000003ffbb133:  mov    $0x270f,%ebx
0x000000003ffbb138:  mov    $0x270f,%ebp
0x000000003ffbb13d:  mov    $0x65,%edx
0x000000003ffbb142:  mov    %ecx,%eax
0x000000003ffbb144:  and    $0xf,%eax
0x000000003ffbb147:  shr    $0x4,%ecx
0x000000003ffbb14a:  cmp    $0x2,%eax
0x000000003ffbb14d:  je     0x3ffbb166

----------------
IN: 
0x000000003ffbb166:  mov    %edx,%edi
0x000000003ffbb168:  jmp    0x3ffbb16c

----------------
IN: 
0x000000003ffbb16c:  inc    %edx
0x000000003ffbb16d:  cmp    $0x68,%edx
0x000000003ffbb170:  jne    0x3ffbb142

----------------
IN: 
0x000000003ffbb142:  mov    %ecx,%eax
0x000000003ffbb144:  and    $0xf,%eax
0x000000003ffbb147:  shr    $0x4,%ecx
0x000000003ffbb14a:  cmp    $0x2,%eax
0x000000003ffbb14d:  je     0x3ffbb166

----------------
IN: 
0x000000003ffbb14f:  ja     0x3ffbb158

----------------
IN: 
0x000000003ffbb151:  dec    %eax
0x000000003ffbb152:  jne    0x3ffbb16c

----------------
IN: 
0x000000003ffbb154:  mov    %edx,%ebp
0x000000003ffbb156:  jmp    0x3ffbb16c

----------------
IN: 
0x000000003ffbb158:  cmp    $0x3,%eax
0x000000003ffbb15b:  je     0x3ffbb16a

----------------
IN: 
0x000000003ffbb16a:  mov    %edx,%esi
0x000000003ffbb16c:  inc    %edx
0x000000003ffbb16d:  cmp    $0x68,%edx
0x000000003ffbb170:  jne    0x3ffbb142

----------------
IN: 
0x000000003ffbb172:  mov    %ebp,0x3ffbfe87
0x000000003ffbb178:  mov    %edi,0x3ffbfe7f
0x000000003ffbb17e:  mov    %esi,0x3ffbfe83
0x000000003ffbb184:  mov    %ebx,0x3ffbfe7b
0x000000003ffbb18a:  mov    $0xea60,%edx
0x000000003ffbb18f:  xor    %ecx,%ecx
0x000000003ffbb191:  mov    $0xf5dc5,%eax
0x000000003ffbb196:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffbb19b:  mov    %eax,0xf65bc
0x000000003ffbb1a0:  xor    %edx,%edx
0x000000003ffbb1a2:  mov    $0xf5dd8,%eax
0x000000003ffbb1a7:  call   0x3ffb0721

----------------
IN: 
0x000000003ffb0783:  xor    %eax,%eax
0x000000003ffb0785:  pop    %ebx
0x000000003ffb0786:  pop    %esi
0x000000003ffb0787:  pop    %edi
0x000000003ffb0788:  pop    %ebp
0x000000003ffb0789:  ret    

----------------
IN: 
0x000000003ffbb1ac:  mov    %eax,%ebx
0x000000003ffbb1ae:  mov    %eax,%ecx
0x000000003ffbb1b0:  mov    $0x1,%eax
0x000000003ffbb1b5:  test   %ebx,%ebx
0x000000003ffbb1b7:  je     0x3ffbb259

----------------
IN: 
0x000000003ffbb259:  movl   $0xfd4be,0xf6ac4
0x000000003ffbb263:  mov    0xf6aca,%bl
0x000000003ffbb269:  mov    $0x10,%edx
0x000000003ffbb26e:  mov    $0xf6ac0,%eax
0x000000003ffbb273:  call   0xf152e

----------------
IN: 
0x00000000000f152e:  push   %ebx
0x00000000000f152f:  xor    %ebx,%ebx
0x00000000000f1531:  xor    %ecx,%ecx
0x00000000000f1533:  cmp    %edx,%ecx
0x00000000000f1535:  je     0xf153d

----------------
IN: 
0x00000000000f1537:  add    (%eax,%ecx,1),%bl
0x00000000000f153a:  inc    %ecx
0x00000000000f153b:  jmp    0xf1533

----------------
IN: 
0x00000000000f1533:  cmp    %edx,%ecx
0x00000000000f1535:  je     0xf153d

----------------
IN: 
0x00000000000f153d:  mov    %bl,%al
0x00000000000f153f:  pop    %ebx
0x00000000000f1540:  ret    

----------------
IN: 
0x000000003ffbb278:  sub    %eax,%ebx
0x000000003ffbb27a:  mov    %bl,0xf6aca
0x000000003ffbb280:  mov    $0xfd362,%eax
0x000000003ffbb285:  mov    %ax,0xf65f7
0x000000003ffbb28b:  movw   $0xf000,0xf65f9
0x000000003ffbb294:  mov    0xf65f6,%bl
0x000000003ffbb29a:  mov    $0x10,%edx
0x000000003ffbb29f:  mov    $0xf65f0,%eax
0x000000003ffbb2a4:  call   0xf152e

----------------
IN: 
0x000000003ffbb2a9:  sub    %eax,%ebx
0x000000003ffbb2ab:  mov    %bl,0xf65f6
0x000000003ffbb2b1:  mov    $0xfd3af,%eax
0x000000003ffbb2b6:  mov    %ax,0xf6aed
0x000000003ffbb2bc:  mov    $0xfd3ab,%eax
0x000000003ffbb2c1:  mov    %ax,0xf6af1
0x000000003ffbb2c7:  mov    0xf6ae8,%bl
0x000000003ffbb2cd:  mov    $0x21,%edx
0x000000003ffbb2d2:  mov    $0xf6ae0,%eax
0x000000003ffbb2d7:  call   0xf152e

----------------
IN: 
0x000000003ffbb2dc:  sub    %eax,%ebx
0x000000003ffbb2de:  mov    %bl,0xf6ae8
0x000000003ffbb2e4:  movb   $0x10,0x496
0x000000003ffbb2eb:  movw   $0x1e,0x41a
0x000000003ffbb2f4:  movw   $0x1e,0x41c
0x000000003ffbb2fd:  movw   $0x1e,0x480
0x000000003ffbb306:  movw   $0x3e,0x482
0x000000003ffbb30f:  orw    $0x4,0x410
0x000000003ffbb317:  mov    %cr0,%eax
0x000000003ffbb31a:  and    $0x9fffffff,%eax
0x000000003ffbb31f:  mov    %eax,%cr0

----------------
IN: 
0x000000003ffbb322:  xor    %edx,%edx
0x000000003ffbb324:  mov    %dl,%al
0x000000003ffbb326:  out    %al,$0xd
0x000000003ffbb328:  out    %al,$0xda
0x000000003ffbb32a:  mov    $0xc0,%al
0x000000003ffbb32c:  out    %al,$0xd6
0x000000003ffbb32e:  mov    %dl,%al
0x000000003ffbb330:  out    %al,$0xd4
0x000000003ffbb332:  call   0xf15cb

----------------
IN: 
0x00000000000f15cb:  mov    $0x11,%al
0x00000000000f15cd:  out    %al,$0x20
0x00000000000f15cf:  out    %al,$0xa0
0x00000000000f15d1:  mov    $0x8,%al
0x00000000000f15d3:  out    %al,$0x21
0x00000000000f15d5:  mov    $0x70,%al
0x00000000000f15d7:  out    %al,$0xa1
0x00000000000f15d9:  mov    $0x4,%al
0x00000000000f15db:  out    %al,$0x21
0x00000000000f15dd:  mov    $0x2,%al
0x00000000000f15df:  out    %al,$0xa1
0x00000000000f15e1:  mov    $0x1,%al
0x00000000000f15e3:  out    %al,$0x21
0x00000000000f15e5:  out    %al,$0xa1
0x00000000000f15e7:  mov    $0xfb,%al
0x00000000000f15e9:  out    %al,$0x21
0x00000000000f15eb:  mov    $0xff,%al
0x00000000000f15ed:  out    %al,$0xa1
0x00000000000f15ef:  ret    

----------------
IN: 
0x000000003ffbb337:  orw    $0x2,0x410
0x000000003ffbb33f:  mov    $0x2000,%eax
0x000000003ffbb344:  call   0x3ffafe37

----------------
IN: 
0x000000003ffafe37:  mov    %eax,%ecx
0x000000003ffafe39:  in     $0x21,%al
0x000000003ffafe3b:  mov    %cl,%dl
0x000000003ffafe3d:  not    %edx
0x000000003ffafe3f:  and    %edx,%eax
0x000000003ffafe41:  out    %al,$0x21
0x000000003ffafe43:  in     $0xa1,%al
0x000000003ffafe45:  shr    $0x8,%cx
0x000000003ffafe49:  not    %ecx
0x000000003ffafe4b:  and    %ecx,%eax
0x000000003ffafe4d:  out    %al,$0xa1
0x000000003ffafe4f:  ret    

----------------
IN: 
0x000000003ffbb349:  mov    $0xfd66d,%eax
0x000000003ffbb34e:  mov    %ax,0x1d4
0x000000003ffbb354:  movw   $0xf000,0x1d6
0x000000003ffbb35d:  cmpw   $0x0,0xf6900
0x000000003ffbb365:  jne    0x3ffbb4ad

----------------
IN: 
0x000000003ffbb36b:  movl   $0x0,0x110(%esp)
0x000000003ffbb376:  lea    0xe8(%esp),%eax
0x000000003ffbb37d:  mov    %eax,0x4(%esp)
0x000000003ffbb381:  lea    0xe0(%esp),%ebx
0x000000003ffbb388:  mov    %ebx,(%esp)
0x000000003ffbb38b:  lea    0xdc(%esp),%ecx
0x000000003ffbb392:  lea    0xd8(%esp),%edx
0x000000003ffbb399:  xor    %eax,%eax
0x000000003ffbb39b:  call   0xf1197

----------------
IN: 
0x000000003ffbb3a0:  cmpl   $0x0,0xd8(%esp)
0x000000003ffbb3a8:  je     0x3ffbb3d0

----------------
IN: 
0x000000003ffbb3aa:  lea    0x110(%esp),%eax
0x000000003ffbb3b1:  mov    %eax,0x4(%esp)
0x000000003ffbb3b5:  mov    %ebx,(%esp)
0x000000003ffbb3b8:  lea    0xdc(%esp),%ecx
0x000000003ffbb3bf:  lea    0xd8(%esp),%edx
0x000000003ffbb3c6:  mov    $0x1,%eax
0x000000003ffbb3cb:  call   0xf1197

----------------
IN: 
0x000000003ffbb3d0:  testb  $0x10,0x110(%esp)
0x000000003ffbb3d8:  jne    0x3ffbb3f2

----------------
IN: 
0x000000003ffbb3f2:  in     $0x61,%al
0x000000003ffbb3f4:  mov    %al,%bl
0x000000003ffbb3f6:  and    $0xfffffffc,%eax
0x000000003ffbb3f9:  or     $0x1,%eax
0x000000003ffbb3fc:  out    %al,$0x61
0x000000003ffbb3fe:  mov    $0xb0,%al
0x000000003ffbb400:  out    %al,$0x43
0x000000003ffbb402:  xor    %eax,%eax
0x000000003ffbb404:  out    %al,$0x42
0x000000003ffbb406:  mov    $0x8,%al
0x000000003ffbb408:  out    %al,$0x42
0x000000003ffbb40a:  rdtsc  
0x000000003ffbb40c:  mov    %eax,0x28(%esp)
0x000000003ffbb410:  mov    %edx,0x2c(%esp)
0x000000003ffbb414:  in     $0x61,%al
0x000000003ffbb416:  test   $0x20,%al
0x000000003ffbb418:  je     0x3ffbb414

----------------
IN: 
0x000000003ffbb414:  in     $0x61,%al
0x000000003ffbb416:  test   $0x20,%al
0x000000003ffbb418:  je     0x3ffbb414

----------------
IN: 
0x000000003ffbb41a:  rdtsc  
0x000000003ffbb41c:  mov    %eax,%edi
0x000000003ffbb41e:  mov    %edx,%ebp
0x000000003ffbb420:  mov    %bl,%al
0x000000003ffbb422:  out    %al,$0x61
0x000000003ffbb424:  sub    0x28(%esp),%edi
0x000000003ffbb428:  sbb    0x2c(%esp),%ebp
0x000000003ffbb42c:  imul   $0x369e99,%ebp,%ebx
0x000000003ffbb432:  mov    $0x369e99,%ecx
0x000000003ffbb437:  mov    %edi,%eax
0x000000003ffbb439:  mul    %ecx
0x000000003ffbb43b:  add    %ebx,%edx
0x000000003ffbb43d:  add    $0x7ff,%eax
0x000000003ffbb442:  adc    $0x0,%edx
0x000000003ffbb445:  mov    %eax,%esi
0x000000003ffbb447:  mov    %edx,%edi
0x000000003ffbb449:  shrd   $0xb,%edi,%esi
0x000000003ffbb44d:  shr    $0xb,%edi
0x000000003ffbb450:  mov    0xf68fe,%bl
0x000000003ffbb456:  lea    0x1(%ebx),%eax
0x000000003ffbb459:  cmp    $0x0,%edi
0x000000003ffbb45c:  jbe    0x3ffbb46e

----------------
IN: 
0x000000003ffbb45e:  add    $0x1,%esi
0x000000003ffbb461:  adc    $0x0,%edi
0x000000003ffbb464:  shrd   $0x1,%edi,%esi
0x000000003ffbb468:  shr    %edi
0x000000003ffbb46a:  mov    %al,%bl
0x000000003ffbb46c:  jmp    0x3ffbb456

----------------
IN: 
0x000000003ffbb456:  lea    0x1(%ebx),%eax
0x000000003ffbb459:  cmp    $0x0,%edi
0x000000003ffbb45c:  jbe    0x3ffbb46e

----------------
IN: 
0x000000003ffbb46e:  cmp    $0xffffff,%esi
0x000000003ffbb474:  ja     0x3ffbb45e

----------------
IN: 
0x000000003ffbb476:  mov    %bl,0xf68fe
0x000000003ffbb47c:  lea    0xbb7(%esi),%eax
0x000000003ffbb482:  mov    $0xbb8,%ecx
0x000000003ffbb487:  xor    %edx,%edx
0x000000003ffbb489:  div    %ecx
0x000000003ffbb48b:  mov    %eax,0xf6904
0x000000003ffbb490:  mov    %bl,%cl
0x000000003ffbb492:  shl    %cl,%eax
0x000000003ffbb494:  mov    $0x3e8,%ecx
0x000000003ffbb499:  xor    %edx,%edx
0x000000003ffbb49b:  div    %ecx
0x000000003ffbb49d:  mov    %eax,0x4(%esp)
0x000000003ffbb4a1:  movl   $0xf5df7,(%esp)
0x000000003ffbb4a8:  call   0xf1cc0

----------------
IN: 
0x00000000000f1a4f:  mov    (%esi),%edx
0x00000000000f1a51:  mov    %edi,%eax
0x00000000000f1a53:  test   %al,%al
0x00000000000f1a55:  jne    0xf1a5c

----------------
IN: 
0x00000000000f1a57:  add    $0x4,%esi
0x00000000000f1a5a:  jmp    0xf1a5f

----------------
IN: 
0x000000003ffbb4ad:  mov    $0x34,%al
0x000000003ffbb4af:  out    %al,$0x43
0x000000003ffbb4b1:  xor    %eax,%eax
0x000000003ffbb4b3:  out    %al,$0x40
0x000000003ffbb4b5:  out    %al,$0x40
0x000000003ffbb4b7:  mov    $0x8a,%cl
0x000000003ffbb4b9:  mov    %cl,%al
0x000000003ffbb4bb:  out    %al,$0x70
0x000000003ffbb4bd:  mov    $0x26,%al
0x000000003ffbb4bf:  out    %al,$0x71
0x000000003ffbb4c1:  mov    $0xb,%al
0x000000003ffbb4c3:  out    %al,$0x70
0x000000003ffbb4c5:  in     $0x71,%al
0x000000003ffbb4c7:  and    $0x1,%eax
0x000000003ffbb4ca:  or     $0x2,%eax
0x000000003ffbb4cd:  out    %al,$0x71
0x000000003ffbb4cf:  mov    $0x8c,%al
0x000000003ffbb4d1:  out    %al,$0x70
0x000000003ffbb4d3:  in     $0x71,%al
0x000000003ffbb4d5:  mov    $0x8d,%al
0x000000003ffbb4d7:  out    %al,$0x70
0x000000003ffbb4d9:  in     $0x71,%al
0x000000003ffbb4db:  mov    %cl,%al
0x000000003ffbb4dd:  out    %al,$0x70
0x000000003ffbb4df:  in     $0x71,%al
0x000000003ffbb4e1:  test   %al,%al
0x000000003ffbb4e3:  jns    0x3ffbb50d

----------------
IN: 
0x000000003ffbb50d:  mov    $0x80,%al
0x000000003ffbb50f:  out    %al,$0x70
0x000000003ffbb511:  in     $0x71,%al
0x000000003ffbb513:  mov    %al,%dl
0x000000003ffbb515:  mov    $0x82,%al
0x000000003ffbb517:  out    %al,$0x70
0x000000003ffbb519:  in     $0x71,%al
0x000000003ffbb51b:  mov    %al,%cl
0x000000003ffbb51d:  mov    $0x84,%al
0x000000003ffbb51f:  out    %al,$0x70
0x000000003ffbb521:  in     $0x71,%al
0x000000003ffbb523:  mov    %eax,%ebx
0x000000003ffbb525:  and    $0xf,%ebx
0x000000003ffbb528:  shr    $0x4,%al
0x000000003ffbb52b:  movzbl %al,%eax
0x000000003ffbb52e:  imul   $0xa,%eax,%eax
0x000000003ffbb531:  add    %ebx,%eax
0x000000003ffbb533:  imul   $0x3c,%eax,%eax
0x000000003ffbb536:  mov    %ecx,%ebx
0x000000003ffbb538:  and    $0xf,%ebx
0x000000003ffbb53b:  shr    $0x4,%cl
0x000000003ffbb53e:  movzbl %cl,%ecx
0x000000003ffbb541:  imul   $0xa,%ecx,%ecx
0x000000003ffbb544:  add    %ebx,%ecx
0x000000003ffbb546:  add    %eax,%ecx
0x000000003ffbb548:  imul   $0x3c,%ecx,%ecx
0x000000003ffbb54b:  mov    %edx,%eax
0x000000003ffbb54d:  and    $0xf,%eax
0x000000003ffbb550:  shr    $0x4,%dl
0x000000003ffbb553:  movzbl %dl,%edx
0x000000003ffbb556:  imul   $0xa,%edx,%edx
0x000000003ffbb559:  add    %edx,%eax
0x000000003ffbb55b:  add    %ecx,%eax
0x000000003ffbb55d:  imul   $0x3e8,%eax,%eax
0x000000003ffbb563:  mov    $0x369e99,%edx
0x000000003ffbb568:  mul    %edx

----------------
IN: 
0x000000003ffbb56a:  add    $0xffff,%eax
0x000000003ffbb56f:  adc    $0x0,%edx
0x000000003ffbb572:  shrd   $0x10,%edx,%eax
0x000000003ffbb576:  shr    $0x10,%edx
0x000000003ffbb579:  add    $0xbb7,%eax
0x000000003ffbb57e:  mov    $0xbb8,%ecx
0x000000003ffbb583:  xor    %edx,%edx
0x000000003ffbb585:  div    %ecx
0x000000003ffbb587:  mov    $0x1800b0,%ecx
0x000000003ffbb58c:  xor    %edx,%edx
0x000000003ffbb58e:  div    %ecx
0x000000003ffbb590:  mov    %edx,0x46c
0x000000003ffbb596:  mov    $0xb2,%al
0x000000003ffbb598:  out    %al,$0x70
0x000000003ffbb59a:  in     $0x71,%al
0x000000003ffbb59c:  mov    %al,0xef7ad
0x000000003ffbb5a1:  mov    $0x1,%eax
0x000000003ffbb5a6:  call   0x3ffafe37

----------------
IN: 
0x000000003ffbb5ab:  mov    $0xffea5,%eax
0x000000003ffbb5b0:  mov    %ax,0x20
0x000000003ffbb5b6:  movw   $0xf000,0x22
0x000000003ffbb5bf:  mov    $0x100,%eax
0x000000003ffbb5c4:  call   0x3ffafe37

----------------
IN: 
0x000000003ffbb5c9:  mov    $0xfd65b,%eax
0x000000003ffbb5ce:  mov    %ax,0x1c0
0x000000003ffbb5d4:  movw   $0xf000,0x1c2
0x000000003ffbb5dd:  call   0x3ffb621f

----------------
IN: 
0x000000003ffb621f:  push   %ebp
0x000000003ffb6220:  push   %edi
0x000000003ffb6221:  push   %esi
0x000000003ffb6222:  push   %ebx
0x000000003ffb6223:  sub    $0x98,%esp
0x000000003ffb6229:  mov    0xf65e0,%eax
0x000000003ffb622e:  and    $0x2,%eax
0x000000003ffb6231:  mov    %eax,0x44(%esp)
0x000000003ffb6235:  je     0x3ffb63e6

----------------
IN: 
0x000000003ffb63e6:  movl   $0xf50f6,(%esp)
0x000000003ffb63ed:  call   0xf1cc0

----------------
IN: 
0x000000003ffb63f2:  mov    $0xcf8,%edx
0x000000003ffb63f7:  mov    $0x80000000,%eax
0x000000003ffb63fc:  out    %eax,(%dx)
0x000000003ffb63fd:  in     (%dx),%eax
0x000000003ffb63fe:  cmp    $0x80000000,%eax
0x000000003ffb6403:  je     0x3ffb7f39

----------------
IN: 
0x000000003ffb7f39:  movb   $0x0,0x78(%esp)
0x000000003ffb7f3e:  lea    0x78(%esp),%edx
0x000000003ffb7f42:  xor    %eax,%eax
0x000000003ffb7f44:  call   0x3ffb256c

----------------
IN: 
0x000000003ffb256c:  push   %ebp
0x000000003ffb256d:  push   %edi
0x000000003ffb256e:  push   %esi
0x000000003ffb256f:  push   %ebx
0x000000003ffb2570:  sub    $0x18,%esp
0x000000003ffb2573:  mov    %eax,%ebx
0x000000003ffb2575:  mov    %eax,0xc(%esp)
0x000000003ffb2579:  mov    %edx,%esi
0x000000003ffb257b:  mov    %eax,0x8(%esp)
0x000000003ffb257f:  movl   $0x3ffbe1eb,0x4(%esp)
0x000000003ffb2587:  movl   $0xf47f3,(%esp)
0x000000003ffb258e:  call   0xf1cc0

----------------
IN: 
0x00000000000f1af2:  lea    0x4(%esi),%edi
0x00000000000f1af5:  mov    (%esi),%ebp
0x00000000000f1af7:  movsbl 0x0(%ebp),%edx
0x00000000000f1afb:  test   %dl,%dl
0x00000000000f1afd:  je     0xf1b1d

----------------
IN: 
0x00000000000f1aff:  mov    0x4(%esp),%eax
0x00000000000f1b03:  call   0xf1087

----------------
IN: 
0x00000000000f1b08:  inc    %ebp
0x00000000000f1b09:  jmp    0xf1af7

----------------
IN: 
0x00000000000f1af7:  movsbl 0x0(%ebp),%edx
0x00000000000f1afb:  test   %dl,%dl
0x00000000000f1afd:  je     0xf1b1d

----------------
IN: 
0x000000003ffb2593:  mov    %ebx,%ebp
0x000000003ffb2595:  shl    $0x8,%ebp
0x000000003ffb2598:  movzwl %bp,%ebp
0x000000003ffb259b:  dec    %ebp
0x000000003ffb259c:  mov    %ebx,%edx
0x000000003ffb259e:  mov    %ebp,%eax
0x000000003ffb25a0:  call   0xf15f0

----------------
IN: 
0x00000000000f15f0:  push   %ebp
0x00000000000f15f1:  push   %edi
0x00000000000f15f2:  push   %esi
0x00000000000f15f3:  push   %ebx
0x00000000000f15f4:  mov    %eax,%ebx
0x00000000000f15f6:  mov    %edx,%esi
0x00000000000f15f8:  movzwl %ax,%eax
0x00000000000f15fb:  test   $0x7,%al
0x00000000000f15fd:  jne    0xf1612

----------------
IN: 
0x00000000000f1612:  lea    0x1(%ebx),%ecx
0x00000000000f1615:  mov    $0xcf8,%edi
0x00000000000f161a:  mov    $0xcfc,%ebp
0x00000000000f161f:  movzwl %cx,%ebx
0x00000000000f1622:  mov    %ebx,%eax
0x00000000000f1624:  shr    $0x8,%eax
0x00000000000f1627:  cmp    %esi,%eax
0x00000000000f1629:  jne    0xf1650

----------------
IN: 
0x00000000000f162b:  mov    %ebx,%eax
0x00000000000f162d:  shl    $0x8,%eax
0x00000000000f1630:  or     $0x80000000,%eax
0x00000000000f1635:  mov    %edi,%edx
0x00000000000f1637:  out    %eax,(%dx)
0x00000000000f1638:  mov    %ebp,%edx
0x00000000000f163a:  in     (%dx),%ax
0x00000000000f163c:  dec    %eax
0x00000000000f163d:  cmp    $0xfffffffd,%ax
0x00000000000f1641:  jbe    0xf1655

----------------
IN: 
0x00000000000f1655:  mov    %ecx,%eax
0x00000000000f1657:  pop    %ebx
0x00000000000f1658:  pop    %esi
0x00000000000f1659:  pop    %edi
0x00000000000f165a:  pop    %ebp
0x00000000000f165b:  ret    

----------------
IN: 
0x000000003ffb25a5:  mov    %eax,%ebx
0x000000003ffb25a7:  test   %eax,%eax
0x000000003ffb25a9:  js     0x3ffb25ef

----------------
IN: 
0x000000003ffb25ab:  movzwl %bx,%edi
0x000000003ffb25ae:  mov    %edi,%eax
0x000000003ffb25b0:  shl    $0x8,%eax
0x000000003ffb25b3:  or     $0x80000008,%eax
0x000000003ffb25b8:  mov    $0xcf8,%edx
0x000000003ffb25bd:  out    %eax,(%dx)
0x000000003ffb25be:  mov    $0xfe,%dl
0x000000003ffb25c0:  in     (%dx),%ax
0x000000003ffb25c2:  cmp    $0x604,%ax
0x000000003ffb25c6:  jne    0x3ffb25e7

----------------
IN: 
0x000000003ffb25e7:  mov    0xc(%esp),%edx
0x000000003ffb25eb:  mov    %ebx,%eax
0x000000003ffb25ed:  jmp    0x3ffb25a0

----------------
IN: 
0x000000003ffb25a0:  call   0xf15f0

----------------
IN: 
0x00000000000f15ff:  mov    $0xe,%edx
0x00000000000f1604:  call   0xf1260

----------------
IN: 
0x00000000000f1260:  push   %ebx
0x00000000000f1261:  mov    %edx,%ebx
0x00000000000f1263:  mov    %edx,%ecx
0x00000000000f1265:  and    $0xfc,%ecx
0x00000000000f126b:  or     $0x80000000,%ecx
0x00000000000f1271:  shl    $0x8,%eax
0x00000000000f1274:  or     %eax,%ecx
0x00000000000f1276:  mov    $0xcf8,%edx
0x00000000000f127b:  mov    %ecx,%eax
0x00000000000f127d:  out    %eax,(%dx)
0x00000000000f127e:  and    $0x3,%ebx
0x00000000000f1281:  lea    0xcfc(%ebx),%edx
0x00000000000f1287:  in     (%dx),%al
0x00000000000f1288:  pop    %ebx
0x00000000000f1289:  ret    

----------------
IN: 
0x00000000000f1609:  test   %al,%al
0x00000000000f160b:  js     0xf1612

----------------
IN: 
0x00000000000f160d:  lea    0x8(%ebx),%ecx
0x00000000000f1610:  jmp    0xf1615

----------------
IN: 
0x00000000000f1615:  mov    $0xcf8,%edi
0x00000000000f161a:  mov    $0xcfc,%ebp
0x00000000000f161f:  movzwl %cx,%ebx
0x00000000000f1622:  mov    %ebx,%eax
0x00000000000f1624:  shr    $0x8,%eax
0x00000000000f1627:  cmp    %esi,%eax
0x00000000000f1629:  jne    0xf1650

----------------
IN: 
0x00000000000f1643:  and    $0x7,%bl
0x00000000000f1646:  jne    0xf164d

----------------
IN: 
0x00000000000f164d:  inc    %ecx
0x00000000000f164e:  jmp    0xf161f

----------------
IN: 
0x00000000000f161f:  movzwl %cx,%ebx
0x00000000000f1622:  mov    %ebx,%eax
0x00000000000f1624:  shr    $0x8,%eax
0x00000000000f1627:  cmp    %esi,%eax
0x00000000000f1629:  jne    0xf1650

----------------
IN: 
0x00000000000f1648:  add    $0x8,%ecx
0x00000000000f164b:  jmp    0xf161f

----------------
IN: 
0x00000000000f1650:  or     $0xffffffff,%eax
0x00000000000f1653:  jmp    0xf1657

----------------
IN: 
0x00000000000f1657:  pop    %ebx
0x00000000000f1658:  pop    %esi
0x00000000000f1659:  pop    %edi
0x00000000000f165a:  pop    %ebp
0x00000000000f165b:  ret    

----------------
IN: 
0x000000003ffb25ef:  mov    0xc(%esp),%edi
0x000000003ffb25f3:  mov    %edi,%edx
0x000000003ffb25f5:  mov    %ebp,%eax
0x000000003ffb25f7:  call   0xf15f0

----------------
IN: 
0x000000003ffb25fc:  mov    %eax,%ebp
0x000000003ffb25fe:  mov    %edi,%eax
0x000000003ffb2600:  movzbl %al,%eax
0x000000003ffb2603:  mov    %eax,0x14(%esp)
0x000000003ffb2607:  test   %ebp,%ebp
0x000000003ffb2609:  js     0x3ffb2773

----------------
IN: 
0x000000003ffb260f:  movzwl %bp,%edi
0x000000003ffb2612:  mov    %edi,%eax
0x000000003ffb2614:  shl    $0x8,%eax
0x000000003ffb2617:  or     $0x80000008,%eax
0x000000003ffb261c:  mov    $0xcf8,%edx
0x000000003ffb2621:  out    %eax,(%dx)
0x000000003ffb2622:  mov    $0xfe,%dl
0x000000003ffb2624:  in     (%dx),%ax
0x000000003ffb2626:  cmp    $0x604,%ax
0x000000003ffb262a:  jne    0x3ffb2761

----------------
IN: 
0x000000003ffb2761:  mov    0xc(%esp),%edx
0x000000003ffb2765:  mov    %ebp,%eax
0x000000003ffb2767:  call   0xf15f0

----------------
IN: 
0x000000003ffb276c:  mov    %eax,%ebp
0x000000003ffb276e:  jmp    0x3ffb2607

----------------
IN: 
0x000000003ffb2607:  test   %ebp,%ebp
0x000000003ffb2609:  js     0x3ffb2773

----------------
IN: 
0x000000003ffb2773:  add    $0x18,%esp
0x000000003ffb2776:  pop    %ebx
0x000000003ffb2777:  pop    %esi
0x000000003ffb2778:  pop    %edi
0x000000003ffb2779:  pop    %ebp
0x000000003ffb277a:  ret    

----------------
IN: 
0x000000003ffb7f49:  movl   $0xf53a8,(%esp)
0x000000003ffb7f50:  call   0xf1cc0

----------------
IN: 
0x000000003ffb7f55:  call   0x3ffb18cf

----------------
IN: 
0x000000003ffb18cf:  push   %ebp
0x000000003ffb18d0:  push   %edi
0x000000003ffb18d1:  push   %esi
0x000000003ffb18d2:  push   %ebx
0x000000003ffb18d3:  sub    $0x420,%esp
0x000000003ffb18d9:  mov    $0x400,%ecx
0x000000003ffb18de:  xor    %edx,%edx
0x000000003ffb18e0:  lea    0x20(%esp),%eax
0x000000003ffb18e4:  call   0xf118c

----------------
IN: 
0x000000003ffb18e9:  xor    %edx,%edx
0x000000003ffb18eb:  xor    %ecx,%ecx
0x000000003ffb18ed:  mov    $0xf447f,%eax
0x000000003ffb18f2:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb18f7:  mov    %eax,0x18(%esp)
0x000000003ffb18fb:  movl   $0x0,0x14(%esp)
0x000000003ffb1903:  movl   $0x0,0xc(%esp)
0x000000003ffb190b:  movl   $0x0,0x10(%esp)
0x000000003ffb1913:  or     $0xffffffff,%ebx
0x000000003ffb1916:  mov    $0x3ffbfee3,%ebp
0x000000003ffb191b:  cmp    0xf6908,%ebx
0x000000003ffb1921:  jge    0x3ffb1a5b

----------------
IN: 
0x000000003ffb1927:  inc    %ebx
0x000000003ffb1928:  mov    %ebx,%eax
0x000000003ffb192a:  shl    $0x8,%eax
0x000000003ffb192d:  dec    %eax
0x000000003ffb192e:  mov    %ebx,%edx
0x000000003ffb1930:  call   0xf15f0

----------------
IN: 
0x000000003ffb1935:  mov    %eax,%edi
0x000000003ffb1937:  test   %edi,%edi
0x000000003ffb1939:  js     0x3ffb1a4d

----------------
IN: 
0x000000003ffb193f:  mov    $0x20,%eax
0x000000003ffb1944:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb1949:  mov    %eax,%esi
0x000000003ffb194b:  test   %eax,%eax
0x000000003ffb194d:  jne    0x3ffb1963

----------------
IN: 
0x000000003ffb1963:  mov    $0x20,%ecx
0x000000003ffb1968:  xor    %edx,%edx
0x000000003ffb196a:  call   0xf118c

----------------
IN: 
0x000000003ffb196f:  lea    0x4(%esi),%eax
0x000000003ffb1972:  mov    %eax,0x1c(%esp)
0x000000003ffb1976:  mov    %ebp,%edx
0x000000003ffb1978:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffb197d:  incl   0x14(%esp)
0x000000003ffb1981:  mov    0x20(%esp,%ebx,4),%edx
0x000000003ffb1985:  test   %edx,%edx
0x000000003ffb1987:  jne    0x3ffb19a6

----------------
IN: 
0x000000003ffb1989:  xor    %eax,%eax
0x000000003ffb198b:  cmp    0x10(%esp),%ebx
0x000000003ffb198f:  setne  %al
0x000000003ffb1992:  add    %eax,0xc(%esp)
0x000000003ffb1996:  cmp    0xf6908,%ebx
0x000000003ffb199c:  jle    0x3ffb19ac

----------------
IN: 
0x000000003ffb19ac:  mov    0xc(%esp),%eax
0x000000003ffb19b0:  mov    %ebx,0x10(%esp)
0x000000003ffb19b4:  mov    %di,(%esi)
0x000000003ffb19b7:  mov    %edx,0xc(%esi)
0x000000003ffb19ba:  mov    %al,0x2(%esi)
0x000000003ffb19bd:  movzwl %di,%ebp
0x000000003ffb19c0:  xor    %edx,%edx
0x000000003ffb19c2:  mov    %ebp,%eax
0x000000003ffb19c4:  call   0xf1241

----------------
IN: 
0x00000000000f1241:  mov    %edx,%ecx
0x00000000000f1243:  and    $0xfc,%ecx
0x00000000000f1249:  or     $0x80000000,%ecx
0x00000000000f124f:  shl    $0x8,%eax
0x00000000000f1252:  or     %eax,%ecx
0x00000000000f1254:  mov    $0xcf8,%edx
0x00000000000f1259:  mov    %ecx,%eax
0x00000000000f125b:  out    %eax,(%dx)
0x00000000000f125c:  mov    $0xfc,%dl
0x00000000000f125e:  in     (%dx),%eax
0x00000000000f125f:  ret    

----------------
IN: 
0x000000003ffb19c9:  mov    %ax,0x10(%esi)
0x000000003ffb19cd:  shr    $0x10,%eax
0x000000003ffb19d0:  mov    %ax,0x12(%esi)
0x000000003ffb19d4:  mov    $0x8,%edx
0x000000003ffb19d9:  mov    %ebp,%eax
0x000000003ffb19db:  call   0xf1241

----------------
IN: 
0x000000003ffb19e0:  mov    %eax,%edx
0x000000003ffb19e2:  shr    $0x10,%edx
0x000000003ffb19e5:  mov    %dx,0x14(%esi)
0x000000003ffb19e9:  mov    %eax,%edx
0x000000003ffb19eb:  shr    $0x8,%edx
0x000000003ffb19ee:  mov    %dl,0x16(%esi)
0x000000003ffb19f1:  mov    %al,0x17(%esi)
0x000000003ffb19f4:  mov    $0xe,%edx
0x000000003ffb19f9:  mov    %ebp,%eax
0x000000003ffb19fb:  call   0xf1260

----------------
IN: 
0x000000003ffb1a00:  mov    %al,0x18(%esi)
0x000000003ffb1a03:  and    $0x7f,%eax
0x000000003ffb1a06:  dec    %eax
0x000000003ffb1a07:  cmp    $0x1,%al
0x000000003ffb1a09:  ja     0x3ffb1a39

----------------
IN: 
0x000000003ffb1a39:  mov    %ebx,%edx
0x000000003ffb1a3b:  mov    %edi,%eax
0x000000003ffb1a3d:  call   0xf15f0

----------------
IN: 
0x000000003ffb1a42:  mov    %eax,%edi
0x000000003ffb1a44:  mov    0x1c(%esp),%ebp
0x000000003ffb1a48:  jmp    0x3ffb1937

----------------
IN: 
0x000000003ffb1937:  test   %edi,%edi
0x000000003ffb1939:  js     0x3ffb1a4d

----------------
IN: 
0x000000003ffb1a4d:  cmp    $0xff,%ebx
0x000000003ffb1a53:  jne    0x3ffb191b

----------------
IN: 
0x000000003ffb191b:  cmp    0xf6908,%ebx
0x000000003ffb1921:  jge    0x3ffb1a5b

----------------
IN: 
0x000000003ffb1a5b:  mov    0x18(%esp),%eax
0x000000003ffb1a5f:  cmp    %eax,0xc(%esp)
0x000000003ffb1a63:  jl     0x3ffb1927

----------------
IN: 
0x000000003ffb1a69:  mov    0xf6908,%eax
0x000000003ffb1a6e:  mov    %eax,0x8(%esp)
0x000000003ffb1a72:  mov    0x14(%esp),%eax
0x000000003ffb1a76:  mov    %eax,0x4(%esp)
0x000000003ffb1a7a:  movl   $0xf4493,(%esp)
0x000000003ffb1a81:  call   0xf1cc0

----------------
IN: 
0x000000003ffb1a86:  add    $0x420,%esp
0x000000003ffb1a8c:  pop    %ebx
0x000000003ffb1a8d:  pop    %esi
0x000000003ffb1a8e:  pop    %edi
0x000000003ffb1a8f:  pop    %ebp
0x000000003ffb1a90:  ret    

----------------
IN: 
0x000000003ffb7f5a:  mov    0x3ffbff17,%eax
0x000000003ffb7f5f:  mov    %eax,0x3ffbfe17
0x000000003ffb7f64:  movl   $0x0,0x3ffbfe1b
0x000000003ffb7f6e:  mov    0x3ffbfee3,%eax
0x000000003ffb7f73:  lea    -0x4(%eax),%ebx
0x000000003ffb7f76:  cmp    $0xfffffffc,%ebx
0x000000003ffb7f79:  je     0x3ffb65ab

----------------
IN: 
0x000000003ffb7f7f:  xor    %ecx,%ecx
0x000000003ffb7f81:  mov    %ebx,%edx
0x000000003ffb7f83:  mov    $0x3ffbfa1b,%eax
0x000000003ffb7f88:  call   0x3ffaec0b

----------------
IN: 
0x000000003ffaec0b:  push   %esi
0x000000003ffaec0c:  push   %ebx
0x000000003ffaec0d:  mov    %edx,%ebx
0x000000003ffaec0f:  mov    %ecx,%edx
0x000000003ffaec11:  mov    (%eax),%esi
0x000000003ffaec13:  test   %esi,%esi
0x000000003ffaec15:  je     0x3ffaec52

----------------
IN: 
0x000000003ffaec17:  cmp    $0xffffffff,%esi
0x000000003ffaec1a:  je     0x3ffaec24

----------------
IN: 
0x000000003ffaec1c:  movzwl 0x10(%ebx),%ecx
0x000000003ffaec20:  cmp    %ecx,%esi
0x000000003ffaec22:  jne    0x3ffaec4d

----------------
IN: 
0x000000003ffaec24:  mov    0x4(%eax),%esi
0x000000003ffaec27:  cmp    $0xffffffff,%esi
0x000000003ffaec2a:  je     0x3ffaec34

----------------
IN: 
0x000000003ffaec2c:  movzwl 0x12(%ebx),%ecx
0x000000003ffaec30:  cmp    %ecx,%esi
0x000000003ffaec32:  jne    0x3ffaec4d

----------------
IN: 
0x000000003ffaec34:  movzwl 0x14(%ebx),%esi
0x000000003ffaec38:  xor    0x8(%eax),%esi
0x000000003ffaec3b:  test   %esi,0xc(%eax)
0x000000003ffaec3e:  jne    0x3ffaec4d

----------------
IN: 
0x000000003ffaec40:  mov    0x10(%eax),%esi
0x000000003ffaec43:  test   %esi,%esi
0x000000003ffaec45:  je     0x3ffaec5d

----------------
IN: 
0x000000003ffaec47:  mov    %ebx,%eax
0x000000003ffaec49:  call   *%esi

----------------
IN: 
0x000000003ffaf58c:  mov    0x3ffbff17,%eax
0x000000003ffaf591:  cmp    $0x80000000,%eax
0x000000003ffaf596:  ja     0x3ffaf5a4

----------------
IN: 
0x000000003ffaf598:  movl   $0x80000000,0x3ffbfe17
0x000000003ffaf5a2:  jmp    0x3ffaf5b5

----------------
IN: 
0x000000003ffaf5b5:  movl   $0x0,0x3ffbfe1b
0x000000003ffaf5bf:  movl   $0x3ffaf4c4,0x3ffbfdf7
0x000000003ffaf5c9:  ret    

----------------
IN: 
0x000000003ffaec4b:  jmp    0x3ffaec5d

----------------
IN: 
0x000000003ffaec5d:  xor    %eax,%eax
0x000000003ffaec5f:  pop    %ebx
0x000000003ffaec60:  pop    %esi
0x000000003ffaec61:  ret    

----------------
IN: 
0x000000003ffb7f8d:  mov    0x4(%ebx),%ebx
0x000000003ffb7f90:  sub    $0x4,%ebx
0x000000003ffb7f93:  jmp    0x3ffb7f76

----------------
IN: 
0x000000003ffb7f76:  cmp    $0xfffffffc,%ebx
0x000000003ffb7f79:  je     0x3ffb65ab

----------------
IN: 
0x000000003ffaec4d:  add    $0x14,%eax
0x000000003ffaec50:  jmp    0x3ffaec11

----------------
IN: 
0x000000003ffaec11:  mov    (%eax),%esi
0x000000003ffaec13:  test   %esi,%esi
0x000000003ffaec15:  je     0x3ffaec52

----------------
IN: 
0x000000003ffaec52:  cmpl   $0x0,0xc(%eax)
0x000000003ffaec56:  jne    0x3ffaec1c

----------------
IN: 
0x000000003ffaec58:  or     $0xffffffff,%eax
0x000000003ffaec5b:  jmp    0x3ffaec5f

----------------
IN: 
0x000000003ffaec5f:  pop    %ebx
0x000000003ffaec60:  pop    %esi
0x000000003ffaec61:  ret    

----------------
IN: 
0x000000003ffb65ab:  movl   $0xf512e,(%esp)
0x000000003ffb65b2:  call   0xf1cc0

----------------
IN: 
0x000000003ffb65b7:  mov    0xf6908,%eax
0x000000003ffb65bc:  inc    %eax
0x000000003ffb65bd:  imul   $0x28,%eax,%eax
0x000000003ffb65c0:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb65c5:  mov    %eax,0x18(%esp)
0x000000003ffb65c9:  test   %eax,%eax
0x000000003ffb65cb:  jne    0x3ffb6415

----------------
IN: 
0x000000003ffb6415:  mov    0xf6908,%eax
0x000000003ffb641a:  lea    0x1(%eax),%ecx
0x000000003ffb641d:  imul   $0x28,%ecx,%ecx
0x000000003ffb6420:  xor    %edx,%edx
0x000000003ffb6422:  mov    0x18(%esp),%eax
0x000000003ffb6426:  call   0xf118c

----------------
IN: 
0x000000003ffb642b:  movl   $0xf5152,(%esp)
0x000000003ffb6432:  call   0xf1cc0

----------------
IN: 
0x000000003ffb6437:  mov    0x3ffbfee3,%eax
0x000000003ffb643c:  lea    -0x4(%eax),%ebx
0x000000003ffb643f:  cmp    $0xfffffffc,%ebx
0x000000003ffb6442:  jne    0x3ffb7f95

----------------
IN: 
0x000000003ffb7f95:  cmpw   $0x604,0x14(%ebx)
0x000000003ffb7f9b:  jne    0x3ffb7fac

----------------
IN: 
0x000000003ffb7fac:  mov    (%ebx),%eax
0x000000003ffb7fae:  movzbl %ah,%eax
0x000000003ffb7fb1:  imul   $0x28,%eax,%eax
0x000000003ffb7fb4:  add    0x18(%esp),%eax
0x000000003ffb7fb8:  mov    %eax,0x58(%esp)
0x000000003ffb7fbc:  movl   $0x0,0x1c(%esp)
0x000000003ffb7fc4:  cmpw   $0x604,0x14(%ebx)
0x000000003ffb7fca:  jne    0x3ffb7fdc

----------------
IN: 
0x000000003ffb7fdc:  mov    0x1c(%esp),%eax
0x000000003ffb7fe0:  cmp    $0x6,%eax
0x000000003ffb7fe3:  je     0x3ffb7fee

----------------
IN: 
0x000000003ffb7fe5:  lea    0x10(,%eax,4),%eax
0x000000003ffb7fec:  jmp    0x3ffb8003

----------------
IN: 
0x000000003ffb8003:  mov    %eax,0x24(%esp)
0x000000003ffb8007:  movzwl (%ebx),%eax
0x000000003ffb800a:  mov    %eax,0x2c(%esp)
0x000000003ffb800e:  mov    0x24(%esp),%edx
0x000000003ffb8012:  call   0xf1241

----------------
IN: 
0x000000003ffb8017:  mov    %eax,0x48(%esp)
0x000000003ffb801b:  cmpl   $0x6,0x1c(%esp)
0x000000003ffb8020:  jne    0x3ffb804e

----------------
IN: 
0x000000003ffb804e:  testb  $0x1,0x48(%esp)
0x000000003ffb8053:  jne    0x3ffb8088

----------------
IN: 
0x000000003ffb8055:  mov    0x48(%esp),%ecx
0x000000003ffb8059:  mov    %ecx,%eax
0x000000003ffb805b:  and    $0x8,%eax
0x000000003ffb805e:  cmp    $0x1,%eax
0x000000003ffb8061:  sbb    %eax,%eax
0x000000003ffb8063:  mov    %eax,0x34(%esp)
0x000000003ffb8067:  addl   $0x2,0x34(%esp)
0x000000003ffb806c:  mov    %ecx,%eax
0x000000003ffb806e:  and    $0x6,%eax
0x000000003ffb8071:  cmp    $0x4,%eax
0x000000003ffb8074:  sete   %al
0x000000003ffb8077:  movzbl %al,%eax
0x000000003ffb807a:  mov    %eax,0x3c(%esp)
0x000000003ffb807e:  movl   $0xfffffff0,0x40(%esp)
0x000000003ffb8086:  jmp    0x3ffb80a0

----------------
IN: 
0x000000003ffb80a0:  or     $0xffffffff,%ecx
0x000000003ffb80a3:  mov    0x24(%esp),%edx
0x000000003ffb80a7:  mov    0x2c(%esp),%eax
0x000000003ffb80ab:  call   0xf11f0

----------------
IN: 
0x00000000000f11f0:  push   %ebx
0x00000000000f11f1:  mov    %edx,%ebx
0x00000000000f11f3:  and    $0xfc,%ebx
0x00000000000f11f9:  or     $0x80000000,%ebx
0x00000000000f11ff:  shl    $0x8,%eax
0x00000000000f1202:  or     %eax,%ebx
0x00000000000f1204:  mov    $0xcf8,%edx
0x00000000000f1209:  mov    %ebx,%eax
0x00000000000f120b:  out    %eax,(%dx)
0x00000000000f120c:  mov    $0xfc,%dl
0x00000000000f120e:  mov    %ecx,%eax
0x00000000000f1210:  out    %eax,(%dx)
0x00000000000f1211:  pop    %ebx
0x00000000000f1212:  ret    

----------------
IN: 
0x000000003ffb80b0:  mov    0x24(%esp),%edx
0x000000003ffb80b4:  mov    0x2c(%esp),%ebp
0x000000003ffb80b8:  mov    %ebp,%eax
0x000000003ffb80ba:  call   0xf1241

----------------
IN: 
0x000000003ffb80bf:  mov    %eax,0x4c(%esp)
0x000000003ffb80c3:  mov    0x48(%esp),%ecx
0x000000003ffb80c7:  mov    0x24(%esp),%edx
0x000000003ffb80cb:  mov    %ebp,%eax
0x000000003ffb80cd:  call   0xf11f0

----------------
IN: 
0x000000003ffb80d2:  cmpl   $0x0,0x3c(%esp)
0x000000003ffb80d7:  je     0x3ffb8138

----------------
IN: 
0x000000003ffb8138:  mov    0x4c(%esp),%eax
0x000000003ffb813c:  and    0x40(%esp),%eax
0x000000003ffb8140:  neg    %eax
0x000000003ffb8142:  mov    %eax,%esi
0x000000003ffb8144:  xor    %edi,%edi
0x000000003ffb8146:  mov    %edi,%eax
0x000000003ffb8148:  or     %esi,%eax
0x000000003ffb814a:  je     0x3ffb81a5

----------------
IN: 
0x000000003ffb81a5:  incl   0x1c(%esp)
0x000000003ffb81a9:  cmpl   $0x6,0x1c(%esp)
0x000000003ffb81ae:  jle    0x3ffb7fc4

----------------
IN: 
0x000000003ffb7fc4:  cmpw   $0x604,0x14(%ebx)
0x000000003ffb7fca:  jne    0x3ffb7fdc

----------------
IN: 
0x000000003ffb7fee:  mov    0x18(%ebx),%al
0x000000003ffb7ff1:  and    $0x7f,%eax
0x000000003ffb7ff4:  dec    %al
0x000000003ffb7ff6:  sete   %al
0x000000003ffb7ff9:  movzbl %al,%eax
0x000000003ffb7ffc:  lea    0x30(,%eax,8),%eax
0x000000003ffb8003:  mov    %eax,0x24(%esp)
0x000000003ffb8007:  movzwl (%ebx),%eax
0x000000003ffb800a:  mov    %eax,0x2c(%esp)
0x000000003ffb800e:  mov    0x24(%esp),%edx
0x000000003ffb8012:  call   0xf1241

----------------
IN: 
0x000000003ffb8022:  mov    $0xfffff800,%ecx
0x000000003ffb8027:  mov    0x24(%esp),%edx
0x000000003ffb802b:  mov    0x2c(%esp),%eax
0x000000003ffb802f:  call   0xf11f0

----------------
IN: 
0x000000003ffb8034:  movl   $0xfffff800,0x40(%esp)
0x000000003ffb803c:  movl   $0x1,0x34(%esp)
0x000000003ffb8044:  movl   $0x0,0x3c(%esp)
0x000000003ffb804c:  jmp    0x3ffb80b0

----------------
IN: 
0x000000003ffb81b4:  mov    0x4(%ebx),%eax
0x000000003ffb81b7:  jmp    0x3ffb643c

----------------
IN: 
0x000000003ffb643c:  lea    -0x4(%eax),%ebx
0x000000003ffb643f:  cmp    $0xfffffffc,%ebx
0x000000003ffb6442:  jne    0x3ffb7f95

----------------
IN: 
0x000000003ffb8088:  movl   $0xfffffffc,0x40(%esp)
0x000000003ffb8090:  movl   $0x0,0x34(%esp)
0x000000003ffb8098:  movl   $0x0,0x3c(%esp)
0x000000003ffb80a0:  or     $0xffffffff,%ecx
0x000000003ffb80a3:  mov    0x24(%esp),%edx
0x000000003ffb80a7:  mov    0x2c(%esp),%eax
0x000000003ffb80ab:  call   0xf11f0

----------------
IN: 
0x000000003ffb814c:  cmpl   $0x0,0x34(%esp)
0x000000003ffb8151:  je     0x3ffb8167

----------------
IN: 
0x000000003ffb8167:  mov    0x3c(%esp),%ebp
0x000000003ffb816b:  mov    %ebp,0x14(%esp)
0x000000003ffb816f:  mov    0x34(%esp),%ecx
0x000000003ffb8173:  mov    %ecx,0x10(%esp)
0x000000003ffb8177:  mov    %esi,0x8(%esp)
0x000000003ffb817b:  mov    %edi,0xc(%esp)
0x000000003ffb817f:  mov    %esi,(%esp)
0x000000003ffb8182:  mov    %edi,0x4(%esp)
0x000000003ffb8186:  mov    0x1c(%esp),%ecx
0x000000003ffb818a:  mov    %ebx,%edx
0x000000003ffb818c:  mov    0x58(%esp),%eax
0x000000003ffb8190:  call   0x3ffb0b06

----------------
IN: 
0x000000003ffb0b06:  push   %ebp
0x000000003ffb0b07:  push   %edi
0x000000003ffb0b08:  push   %esi
0x000000003ffb0b09:  push   %ebx
0x000000003ffb0b0a:  sub    $0x10,%esp
0x000000003ffb0b0d:  mov    %eax,%esi
0x000000003ffb0b0f:  mov    %edx,0x8(%esp)
0x000000003ffb0b13:  mov    %ecx,0xc(%esp)
0x000000003ffb0b17:  mov    0x24(%esp),%edi
0x000000003ffb0b1b:  mov    0x28(%esp),%ebp
0x000000003ffb0b1f:  mov    0x2c(%esp),%eax
0x000000003ffb0b23:  mov    %eax,(%esp)
0x000000003ffb0b26:  mov    0x30(%esp),%eax
0x000000003ffb0b2a:  mov    %eax,0x4(%esp)
0x000000003ffb0b2e:  mov    $0x28,%eax
0x000000003ffb0b33:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb0b38:  mov    %eax,%ebx
0x000000003ffb0b3a:  test   %eax,%eax
0x000000003ffb0b3c:  jne    0x3ffb0b54

----------------
IN: 
0x000000003ffb0b54:  mov    $0x28,%ecx
0x000000003ffb0b59:  xor    %edx,%edx
0x000000003ffb0b5b:  call   0xf118c

----------------
IN: 
0x000000003ffb0b60:  mov    0x8(%esp),%eax
0x000000003ffb0b64:  mov    %eax,(%ebx)
0x000000003ffb0b66:  mov    0xc(%esp),%eax
0x000000003ffb0b6a:  mov    %eax,0x4(%ebx)
0x000000003ffb0b6d:  mov    %edi,0x8(%ebx)
0x000000003ffb0b70:  mov    %ebp,0xc(%ebx)
0x000000003ffb0b73:  mov    (%esp),%eax
0x000000003ffb0b76:  mov    %eax,0x10(%ebx)
0x000000003ffb0b79:  mov    0x4(%esp),%eax
0x000000003ffb0b7d:  mov    %eax,0x14(%ebx)
0x000000003ffb0b80:  mov    0x38(%esp),%eax
0x000000003ffb0b84:  mov    %eax,0x18(%ebx)
0x000000003ffb0b87:  mov    0x34(%esp),%eax
0x000000003ffb0b8b:  mov    %eax,0x1c(%ebx)
0x000000003ffb0b8e:  imul   $0xc,%eax,%eax
0x000000003ffb0b91:  lea    0x8(%esi,%eax,1),%edx
0x000000003ffb0b95:  mov    (%edx),%eax
0x000000003ffb0b97:  test   %eax,%eax
0x000000003ffb0b99:  jne    0x3ffb0ba7

----------------
IN: 
0x000000003ffb0b9b:  lea    0x20(%ebx),%eax
0x000000003ffb0b9e:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffb0ba3:  mov    %ebx,%eax
0x000000003ffb0ba5:  jmp    0x3ffb0bd7

----------------
IN: 
0x000000003ffb0bd7:  add    $0x10,%esp
0x000000003ffb0bda:  pop    %ebx
0x000000003ffb0bdb:  pop    %esi
0x000000003ffb0bdc:  pop    %edi
0x000000003ffb0bdd:  pop    %ebp
0x000000003ffb0bde:  ret    

----------------
IN: 
0x000000003ffb8195:  test   %eax,%eax
0x000000003ffb8197:  je     0x3ffb65df

----------------
IN: 
0x000000003ffb819d:  cmp    $0x1,%ebp
0x000000003ffb81a0:  sbbl   $0xffffffff,0x1c(%esp)
0x000000003ffb81a5:  incl   0x1c(%esp)
0x000000003ffb81a9:  cmpl   $0x6,0x1c(%esp)
0x000000003ffb81ae:  jle    0x3ffb7fc4

----------------
IN: 
0x000000003ffb8153:  cmp    $0x0,%edi
0x000000003ffb8156:  ja     0x3ffb8167

----------------
IN: 
0x000000003ffb8158:  cmp    $0xfff,%esi
0x000000003ffb815e:  ja     0x3ffb8167

----------------
IN: 
0x000000003ffb0ba7:  mov    -0x10(%eax),%ecx
0x000000003ffb0baa:  mov    -0xc(%eax),%esi
0x000000003ffb0bad:  cmp    0x4(%esp),%esi
0x000000003ffb0bb1:  jb     0x3ffb0b9b

----------------
IN: 
0x000000003ffb0bb3:  jbe    0x3ffb0bd0

----------------
IN: 
0x000000003ffb0bd0:  cmp    (%esp),%ecx
0x000000003ffb0bd3:  jb     0x3ffb0b9b

----------------
IN: 
0x000000003ffb6448:  mov    0xf6908,%eax
0x000000003ffb644d:  mov    %eax,0x34(%esp)
0x000000003ffb6451:  imul   $0x28,%eax,%eax
0x000000003ffb6454:  add    0x18(%esp),%eax
0x000000003ffb6458:  mov    %eax,0x1c(%esp)
0x000000003ffb645c:  cmpl   $0x0,0x34(%esp)
0x000000003ffb6461:  jg     0x3ffb81bc

----------------
IN: 
0x000000003ffb6467:  movl   $0xf53c4,(%esp)
0x000000003ffb646e:  call   0xf1cc0

----------------
IN: 
0x000000003ffb6473:  mov    0x18(%esp),%eax
0x000000003ffb6477:  call   0x3ffaf5ca

----------------
IN: 
0x000000003ffaf5ca:  push   %ebp
0x000000003ffaf5cb:  mov    %esp,%ebp
0x000000003ffaf5cd:  mov    0x8(%eax),%ecx
0x000000003ffaf5d0:  sub    $0x20,%ecx
0x000000003ffaf5d3:  xor    %eax,%eax
0x000000003ffaf5d5:  xor    %edx,%edx
0x000000003ffaf5d7:  cmp    $0xffffffe0,%ecx
0x000000003ffaf5da:  je     0x3ffaf5ea

----------------
IN: 
0x000000003ffaf5dc:  add    0x8(%ecx),%eax
0x000000003ffaf5df:  adc    0xc(%ecx),%edx
0x000000003ffaf5e2:  mov    0x20(%ecx),%ecx
0x000000003ffaf5e5:  sub    $0x20,%ecx
0x000000003ffaf5e8:  jmp    0x3ffaf5d7

----------------
IN: 
0x000000003ffaf5d7:  cmp    $0xffffffe0,%ecx
0x000000003ffaf5da:  je     0x3ffaf5ea

----------------
IN: 
0x000000003ffaf5ea:  pop    %ebp
0x000000003ffaf5eb:  ret    

----------------
IN: 
0x000000003ffb647c:  cmp    $0x0,%edx
0x000000003ffb647f:  ja     0x3ffb841f

----------------
IN: 
0x000000003ffb6485:  cmp    $0x3fff,%eax
0x000000003ffb648a:  ja     0x3ffb841f

----------------
IN: 
0x000000003ffb6490:  mov    0x18(%esp),%edi
0x000000003ffb6494:  movl   $0xc000,(%edi)
0x000000003ffb649a:  movl   $0x0,0x4(%edi)
0x000000003ffb64a1:  mov    0x18(%esp),%ebp
0x000000003ffb64a5:  mov    0x0(%ebp),%esi
0x000000003ffb64a8:  mov    0x4(%ebp),%edi
0x000000003ffb64ab:  mov    %esi,%ecx
0x000000003ffb64ad:  mov    %edi,%ebx
0x000000003ffb64af:  add    $0xffffffff,%ecx
0x000000003ffb64b2:  adc    $0xffffffff,%ebx
0x000000003ffb64b5:  add    %eax,%ecx
0x000000003ffb64b7:  adc    %edx,%ebx
0x000000003ffb64b9:  mov    %ecx,0xc(%esp)
0x000000003ffb64bd:  mov    %ebx,0x10(%esp)
0x000000003ffb64c1:  mov    %esi,0x4(%esp)
0x000000003ffb64c5:  mov    %edi,0x8(%esp)
0x000000003ffb64c9:  movl   $0xf5191,(%esp)
0x000000003ffb64d0:  call   0xf1cc0

----------------
IN: 
0x000000003ffb64d5:  movl   $0xfec00000,0xc(%esp)
0x000000003ffb64dd:  movl   $0x0,0x10(%esp)
0x000000003ffb64e5:  mov    0x3ffbfe17,%eax
0x000000003ffb64ea:  mov    0x3ffbfe1b,%edx
0x000000003ffb64f0:  mov    %eax,0x4(%esp)
0x000000003ffb64f4:  mov    %edx,0x8(%esp)
0x000000003ffb64f8:  movl   $0xf51a9,(%esp)
0x000000003ffb64ff:  call   0xf1cc0

----------------
IN: 
0x000000003ffb6504:  mov    %ebp,%eax
0x000000003ffb6506:  call   0x3ffaff73

----------------
IN: 
0x000000003ffaff73:  push   %ebp
0x000000003ffaff74:  push   %edi
0x000000003ffaff75:  push   %esi
0x000000003ffaff76:  push   %ebx
0x000000003ffaff77:  sub    $0x10,%esp
0x000000003ffaff7a:  lea    0x18(%eax),%esi
0x000000003ffaff7d:  lea    0xc(%eax),%edi
0x000000003ffaff80:  mov    0x14(%eax),%edx
0x000000003ffaff83:  test   %edx,%edx
0x000000003ffaff85:  je     0x3ffaff8f

----------------
IN: 
0x000000003ffaff87:  mov    -0x10(%edx),%ecx
0x000000003ffaff8a:  mov    -0xc(%edx),%edx
0x000000003ffaff8d:  jmp    0x3ffaff96

----------------
IN: 
0x000000003ffaff96:  mov    0x20(%eax),%eax
0x000000003ffaff99:  test   %eax,%eax
0x000000003ffaff9b:  je     0x3ffaffa9

----------------
IN: 
0x000000003ffaff9d:  mov    -0x10(%eax),%ebx
0x000000003ffaffa0:  mov    -0xc(%eax),%eax
0x000000003ffaffa3:  cmp    %eax,%edx
0x000000003ffaffa5:  jb     0x3ffaffbe

----------------
IN: 
0x000000003ffaffa7:  jmp    0x3ffaffb0

----------------
IN: 
0x000000003ffaffb0:  cmp    %eax,%edx
0x000000003ffaffb2:  ja     0x3ffaffb8

----------------
IN: 
0x000000003ffaffb4:  cmp    %ebx,%ecx
0x000000003ffaffb6:  jb     0x3ffaffbe

----------------
IN: 
0x000000003ffaffbe:  mov    %edi,%eax
0x000000003ffaffc0:  call   0x3ffaf5ca

----------------
IN: 
0x000000003ffaffc5:  mov    0x8(%edi),%ecx
0x000000003ffaffc8:  test   %ecx,%ecx
0x000000003ffaffca:  je     0x3ffaffd4

----------------
IN: 
0x000000003ffaffcc:  mov    -0xc(%ecx),%ebx
0x000000003ffaffcf:  mov    -0x10(%ecx),%ecx
0x000000003ffaffd2:  jmp    0x3ffaffdb

----------------
IN: 
0x000000003ffaffdb:  neg    %ecx
0x000000003ffaffdd:  adc    $0x0,%ebx
0x000000003ffaffe0:  neg    %ebx
0x000000003ffaffe2:  mov    %ecx,0x8(%esp)
0x000000003ffaffe6:  mov    %ebx,0xc(%esp)
0x000000003ffaffea:  mov    $0xfec00000,%ecx
0x000000003ffaffef:  xor    %ebx,%ebx
0x000000003ffafff1:  sub    %eax,%ecx
0x000000003ffafff3:  sbb    %edx,%ebx
0x000000003ffafff5:  mov    0x8(%esp),%eax
0x000000003ffafff9:  mov    0xc(%esp),%edx
0x000000003ffafffd:  mov    %eax,%ebp
0x000000003ffaffff:  and    %ecx,%ebp
0x000000003ffb0001:  mov    %ebp,(%esp)
0x000000003ffb0004:  and    %edx,%ebx
0x000000003ffb0006:  mov    %ebx,0x4(%esp)
0x000000003ffb000a:  mov    (%esp),%eax
0x000000003ffb000d:  mov    0x4(%esp),%edx
0x000000003ffb0011:  mov    %eax,(%edi)
0x000000003ffb0013:  mov    %edx,0x4(%edi)
0x000000003ffb0016:  mov    %esi,%eax
0x000000003ffb0018:  call   0x3ffaf5ca

----------------
IN: 
0x000000003ffb001d:  mov    0x8(%esi),%ecx
0x000000003ffb0020:  test   %ecx,%ecx
0x000000003ffb0022:  je     0x3ffb002c

----------------
IN: 
0x000000003ffb0024:  mov    -0xc(%ecx),%ebx
0x000000003ffb0027:  mov    -0x10(%ecx),%ecx
0x000000003ffb002a:  jmp    0x3ffb0033

----------------
IN: 
0x000000003ffb0033:  neg    %ecx
0x000000003ffb0035:  adc    $0x0,%ebx
0x000000003ffb0038:  neg    %ebx
0x000000003ffb003a:  mov    (%esp),%edi
0x000000003ffb003d:  mov    0x4(%esp),%ebp
0x000000003ffb0041:  sub    %eax,%edi
0x000000003ffb0043:  sbb    %edx,%ebp
0x000000003ffb0045:  mov    %ebp,%edx
0x000000003ffb0047:  and    %edi,%ecx
0x000000003ffb0049:  and    %ebx,%edx
0x000000003ffb004b:  mov    %ecx,(%esi)
0x000000003ffb004d:  mov    %edx,0x4(%esi)
0x000000003ffb0050:  cmp    0x3ffbfe1b,%edx
0x000000003ffb0056:  jb     0x3ffb007b

----------------
IN: 
0x000000003ffb0058:  ja     0x3ffb0062

----------------
IN: 
0x000000003ffb005a:  cmp    0x3ffbfe17,%ecx
0x000000003ffb0060:  jb     0x3ffb007b

----------------
IN: 
0x000000003ffb0062:  mov    $0x1,%eax
0x000000003ffb0067:  cmp    $0x0,%edx
0x000000003ffb006a:  ja     0x3ffb0077

----------------
IN: 
0x000000003ffb006c:  xor    %eax,%eax
0x000000003ffb006e:  cmp    $0xfec00000,%ecx
0x000000003ffb0074:  seta   %al
0x000000003ffb0077:  neg    %eax
0x000000003ffb0079:  jmp    0x3ffb007e

----------------
IN: 
0x000000003ffb007e:  add    $0x10,%esp
0x000000003ffb0081:  pop    %ebx
0x000000003ffb0082:  pop    %esi
0x000000003ffb0083:  pop    %edi
0x000000003ffb0084:  pop    %ebp
0x000000003ffb0085:  ret    

----------------
IN: 
0x000000003ffb650b:  test   %eax,%eax
0x000000003ffb650d:  je     0x3ffb8615

----------------
IN: 
0x000000003ffb8615:  movl   $0x0,0x3ffbfe0f
0x000000003ffb861f:  movl   $0x0,0x3ffbfe13
0x000000003ffb8629:  jmp    0x3ffb860d

----------------
IN: 
0x000000003ffb860d:  mov    0x18(%esp),%ebx
0x000000003ffb8611:  xor    %esi,%esi
0x000000003ffb8613:  jmp    0x3ffb862b

----------------
IN: 
0x000000003ffb862b:  cmp    0xf6908,%esi
0x000000003ffb8631:  jg     0x3ffb6561

----------------
IN: 
0x000000003ffb8637:  mov    %ebx,%edx
0x000000003ffb8639:  mov    0x18(%esp),%edi
0x000000003ffb863d:  mov    %edi,%eax
0x000000003ffb863f:  call   0x3ffb278f

----------------
IN: 
0x000000003ffb278f:  push   %ebp
0x000000003ffb2790:  push   %edi
0x000000003ffb2791:  push   %esi
0x000000003ffb2792:  push   %ebx
0x000000003ffb2793:  sub    $0x48,%esp
0x000000003ffb2796:  mov    %eax,0x44(%esp)
0x000000003ffb279a:  mov    %edx,%ebp
0x000000003ffb279c:  mov    0x8(%edx),%eax
0x000000003ffb279f:  lea    -0x20(%eax),%esi
0x000000003ffb27a2:  cmp    $0xffffffe0,%esi
0x000000003ffb27a5:  je     0x3ffb2a0a

----------------
IN: 
0x000000003ffb27ab:  mov    0x20(%esi),%eax
0x000000003ffb27ae:  mov    %eax,0x38(%esp)
0x000000003ffb27b2:  mov    0x0(%ebp),%eax
0x000000003ffb27b5:  mov    0x4(%ebp),%edx
0x000000003ffb27b8:  mov    %eax,0x28(%esp)
0x000000003ffb27bc:  mov    %edx,0x2c(%esp)
0x000000003ffb27c0:  mov    0x8(%esi),%eax
0x000000003ffb27c3:  mov    0xc(%esi),%edx
0x000000003ffb27c6:  mov    %eax,0x30(%esp)
0x000000003ffb27ca:  mov    %edx,0x34(%esp)
0x000000003ffb27ce:  mov    %eax,%ecx
0x000000003ffb27d0:  mov    %edx,%ebx
0x000000003ffb27d2:  add    0x28(%esp),%ecx
0x000000003ffb27d6:  adc    0x2c(%esp),%ebx
0x000000003ffb27da:  mov    %ecx,0x3c(%esp)
0x000000003ffb27de:  mov    %ebx,0x40(%esp)
0x000000003ffb27e2:  mov    %ecx,0x0(%ebp)
0x000000003ffb27e5:  mov    %ebx,0x4(%ebp)
0x000000003ffb27e8:  mov    0x4(%esi),%eax
0x000000003ffb27eb:  cmp    $0xffffffff,%eax
0x000000003ffb27ee:  jne    0x3ffb2810

----------------
IN: 
0x000000003ffb2810:  mov    (%esi),%edx
0x000000003ffb2812:  movzwl (%edx),%edi
0x000000003ffb2815:  test   %eax,%eax
0x000000003ffb2817:  js     0x3ffb28d1

----------------
IN: 
0x000000003ffb281d:  mov    0x1c(%esi),%edx
0x000000003ffb2820:  mov    0x3ffbfb5f(,%edx,4),%edx
0x000000003ffb2827:  mov    %edx,0x24(%esp)
0x000000003ffb282b:  mov    0x30(%esp),%ecx
0x000000003ffb282f:  mov    0x34(%esp),%ebx
0x000000003ffb2833:  mov    %ecx,0x1c(%esp)
0x000000003ffb2837:  mov    %ebx,0x20(%esp)
0x000000003ffb283b:  mov    0x28(%esp),%edx
0x000000003ffb283f:  mov    0x2c(%esp),%ecx
0x000000003ffb2843:  mov    %edx,0x14(%esp)
0x000000003ffb2847:  mov    %ecx,0x18(%esp)
0x000000003ffb284b:  mov    %eax,0x10(%esp)
0x000000003ffb284f:  mov    %edi,%eax
0x000000003ffb2851:  and    $0x7,%eax
0x000000003ffb2854:  mov    %eax,0xc(%esp)
0x000000003ffb2858:  mov    %edi,%eax
0x000000003ffb285a:  shr    $0x3,%ax
0x000000003ffb285e:  and    $0x1f,%eax
0x000000003ffb2861:  mov    %eax,0x8(%esp)
0x000000003ffb2865:  mov    %edi,%eax
0x000000003ffb2867:  movzbl %ah,%edi
0x000000003ffb286a:  mov    %edi,0x4(%esp)
0x000000003ffb286e:  movl   $0xf4903,(%esp)
0x000000003ffb2875:  call   0xf1cc0

----------------
IN: 
0x000000003ffb287a:  mov    0x18(%esi),%eax
0x000000003ffb287d:  mov    %eax,0x30(%esp)
0x000000003ffb2881:  mov    0x4(%esi),%eax
0x000000003ffb2884:  mov    (%esi),%ebx
0x000000003ffb2886:  cmp    $0x6,%eax
0x000000003ffb2889:  je     0x3ffb2894

----------------
IN: 
0x000000003ffb288b:  lea    0x10(,%eax,4),%edi
0x000000003ffb2892:  jmp    0x3ffb28a9

----------------
IN: 
0x000000003ffb28a9:  movzwl (%ebx),%eax
0x000000003ffb28ac:  mov    0x28(%esp),%ecx
0x000000003ffb28b0:  mov    %edi,%edx
0x000000003ffb28b2:  call   0xf11f0

----------------
IN: 
0x000000003ffb28b7:  cmpl   $0x0,0x30(%esp)
0x000000003ffb28bc:  je     0x3ffb29ef

----------------
IN: 
0x000000003ffb29ef:  lea    0x20(%esi),%eax
0x000000003ffb29f2:  call   0x3ffaeaf7

----------------
IN: 
0x000000003ffaeb02:  mov    %eax,0x4(%edx)
0x000000003ffaeb05:  ret    

----------------
IN: 
0x000000003ffb29f7:  mov    %esi,%eax
0x000000003ffb29f9:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffaefaf:  push   %esi
0x000000003ffaefb0:  push   %ebx
0x000000003ffaefb1:  mov    %eax,%esi
0x000000003ffaefb3:  call   0x3ffaeeb1

----------------
IN: 
0x000000003ffaeeb1:  xor    %ecx,%ecx
0x000000003ffaeeb3:  mov    0x3ffbfe97(,%ecx,4),%edx
0x000000003ffaeeba:  mov    (%edx),%edx
0x000000003ffaeebc:  test   %edx,%edx
0x000000003ffaeebe:  je     0x3ffaeec8

----------------
IN: 
0x000000003ffaeec0:  cmp    %eax,0x8(%edx)
0x000000003ffaeec3:  jne    0x3ffaeeba

----------------
IN: 
0x000000003ffaeeba:  mov    (%edx),%edx
0x000000003ffaeebc:  test   %edx,%edx
0x000000003ffaeebe:  je     0x3ffaeec8

----------------
IN: 
0x000000003ffaeec8:  inc    %ecx
0x000000003ffaeec9:  cmp    $0x5,%ecx
0x000000003ffaeecc:  jne    0x3ffaeeb3

----------------
IN: 
0x000000003ffaeeb3:  mov    0x3ffbfe97(,%ecx,4),%edx
0x000000003ffaeeba:  mov    (%edx),%edx
0x000000003ffaeebc:  test   %edx,%edx
0x000000003ffaeebe:  je     0x3ffaeec8

----------------
IN: 
0x000000003ffaeec5:  mov    %edx,%eax
0x000000003ffaeec7:  ret    

----------------
IN: 
0x000000003ffaefb8:  mov    %eax,%ebx
0x000000003ffaefba:  cmp    %eax,%esi
0x000000003ffaefbc:  je     0x3ffaefd8

----------------
IN: 
0x000000003ffaefbe:  test   %eax,%eax
0x000000003ffaefc0:  je     0x3ffaefd8

----------------
IN: 
0x000000003ffaefc2:  cmp    0xc(%eax),%esi
0x000000003ffaefc5:  je     0x3ffaefd8

----------------
IN: 
0x000000003ffaefc7:  call   0x3ffaee98

----------------
IN: 
0x000000003ffaee98:  mov    (%eax),%edx
0x000000003ffaee9a:  test   %edx,%edx
0x000000003ffaee9c:  je     0x3ffaeeac

----------------
IN: 
0x000000003ffaee9e:  mov    0x8(%eax),%ecx
0x000000003ffaeea1:  cmp    %ecx,0x10(%edx)
0x000000003ffaeea4:  jne    0x3ffaeeac

----------------
IN: 
0x000000003ffaeea6:  mov    0x10(%eax),%ecx
0x000000003ffaeea9:  mov    %ecx,0x10(%edx)
0x000000003ffaeeac:  jmp    0x3ffaeaf7

----------------
IN: 
0x000000003ffaefcc:  lea    -0x14(%ebx),%eax
0x000000003ffaefcf:  call   0x3ffaee98

----------------
IN: 
0x000000003ffaefd4:  xor    %eax,%eax
0x000000003ffaefd6:  jmp    0x3ffaefdb

----------------
IN: 
0x000000003ffaefdb:  pop    %ebx
0x000000003ffaefdc:  pop    %esi
0x000000003ffaefdd:  ret    

----------------
IN: 
0x000000003ffb29fe:  mov    0x38(%esp),%esi
0x000000003ffb2a02:  sub    $0x20,%esi
0x000000003ffb2a05:  jmp    0x3ffb27a2

----------------
IN: 
0x000000003ffb27a2:  cmp    $0xffffffe0,%esi
0x000000003ffb27a5:  je     0x3ffb2a0a

----------------
IN: 
0x000000003ffb2a0a:  add    $0x48,%esp
0x000000003ffb2a0d:  pop    %ebx
0x000000003ffb2a0e:  pop    %esi
0x000000003ffb2a0f:  pop    %edi
0x000000003ffb2a10:  pop    %ebp
0x000000003ffb2a11:  ret    

----------------
IN: 
0x000000003ffb8644:  lea    0xc(%ebx),%edx
0x000000003ffb8647:  mov    %edi,%eax
0x000000003ffb8649:  call   0x3ffb278f

----------------
IN: 
0x000000003ffb2894:  mov    0x18(%ebx),%al
0x000000003ffb2897:  and    $0x7f,%eax
0x000000003ffb289a:  dec    %al
0x000000003ffb289c:  sete   %al
0x000000003ffb289f:  movzbl %al,%eax
0x000000003ffb28a2:  lea    0x30(,%eax,8),%edi
0x000000003ffb28a9:  movzwl (%ebx),%eax
0x000000003ffb28ac:  mov    0x28(%esp),%ecx
0x000000003ffb28b0:  mov    %edi,%edx
0x000000003ffb28b2:  call   0xf11f0

----------------
IN: 
0x000000003ffb864e:  lea    0x18(%ebx),%edx
0x000000003ffb8651:  mov    %edi,%eax
0x000000003ffb8653:  call   0x3ffb278f

----------------
IN: 
0x000000003ffb8658:  inc    %esi
0x000000003ffb8659:  add    $0x28,%ebx
0x000000003ffb865c:  jmp    0x3ffb862b

----------------
IN: 
0x000000003ffb6561:  mov    0x3ffbfee3,%eax
0x000000003ffb6566:  lea    -0x4(%eax),%ebx
0x000000003ffb6569:  cmp    $0xfffffffc,%ebx
0x000000003ffb656c:  jne    0x3ffb865e

----------------
IN: 
0x000000003ffb865e:  movzwl (%ebx),%esi
0x000000003ffb8661:  movzwl 0x12(%ebx),%eax
0x000000003ffb8665:  mov    %eax,0x14(%esp)
0x000000003ffb8669:  movzwl 0x10(%ebx),%eax
0x000000003ffb866d:  mov    %eax,0x10(%esp)
0x000000003ffb8671:  mov    %esi,%eax
0x000000003ffb8673:  and    $0x7,%eax
0x000000003ffb8676:  mov    %eax,0xc(%esp)
0x000000003ffb867a:  mov    %esi,%eax
0x000000003ffb867c:  shr    $0x3,%ax
0x000000003ffb8680:  and    $0x1f,%eax
0x000000003ffb8683:  mov    %eax,0x8(%esp)
0x000000003ffb8687:  mov    %esi,%eax
0x000000003ffb8689:  movzbl %ah,%eax
0x000000003ffb868c:  mov    %eax,0x4(%esp)
0x000000003ffb8690:  movl   $0xf521a,(%esp)
0x000000003ffb8697:  call   0xf1cc0

----------------
IN: 
0x000000003ffb869c:  mov    $0x3d,%edx
0x000000003ffb86a1:  mov    %esi,%eax
0x000000003ffb86a3:  call   0xf1260

----------------
IN: 
0x000000003ffb86a8:  movzbl %al,%edx
0x000000003ffb86ab:  test   %edx,%edx
0x000000003ffb86ad:  je     0x3ffb86c6

----------------
IN: 
0x000000003ffb86c6:  xor    %ecx,%ecx
0x000000003ffb86c8:  mov    %ebx,%edx
0x000000003ffb86ca:  mov    $0x3ffbfa57,%eax
0x000000003ffb86cf:  call   0x3ffaec0b

----------------
IN: 
0x000000003ffb86d4:  mov    $0x103,%ecx
0x000000003ffb86d9:  mov    $0x4,%edx
0x000000003ffb86de:  mov    %esi,%eax
0x000000003ffb86e0:  call   0x3ffafdae

----------------
IN: 
0x000000003ffafdae:  push   %edi
0x000000003ffafdaf:  push   %esi
0x000000003ffafdb0:  push   %ebx
0x000000003ffafdb1:  mov    %edx,%esi
0x000000003ffafdb3:  movzwl %ax,%edi
0x000000003ffafdb6:  mov    %edx,%ebx
0x000000003ffafdb8:  and    $0xfc,%ebx
0x000000003ffafdbe:  or     $0x80000000,%ebx
0x000000003ffafdc4:  mov    %edi,%eax
0x000000003ffafdc6:  shl    $0x8,%eax
0x000000003ffafdc9:  or     %eax,%ebx
0x000000003ffafdcb:  mov    $0xcf8,%edx
0x000000003ffafdd0:  mov    %ebx,%eax
0x000000003ffafdd2:  out    %eax,(%dx)
0x000000003ffafdd3:  mov    %esi,%edx
0x000000003ffafdd5:  and    $0x2,%edx
0x000000003ffafdd8:  add    $0xcfc,%dx
0x000000003ffafddd:  in     (%dx),%ax
0x000000003ffafddf:  or     %ecx,%eax
0x000000003ffafde1:  movzwl %ax,%ecx
0x000000003ffafde4:  mov    %esi,%edx
0x000000003ffafde6:  mov    %edi,%eax
0x000000003ffafde8:  pop    %ebx
0x000000003ffafde9:  pop    %esi
0x000000003ffafdea:  pop    %edi
0x000000003ffafdeb:  jmp    0x3ffaebb7

----------------
IN: 
0x000000003ffaebb7:  push   %esi
0x000000003ffaebb8:  push   %ebx
0x000000003ffaebb9:  mov    %edx,%esi
0x000000003ffaebbb:  mov    %edx,%ebx
0x000000003ffaebbd:  and    $0xfc,%ebx
0x000000003ffaebc3:  or     $0x80000000,%ebx
0x000000003ffaebc9:  shl    $0x8,%eax
0x000000003ffaebcc:  or     %eax,%ebx
0x000000003ffaebce:  mov    $0xcf8,%edx
0x000000003ffaebd3:  mov    %ebx,%eax
0x000000003ffaebd5:  out    %eax,(%dx)
0x000000003ffaebd6:  and    $0x2,%esi
0x000000003ffaebd9:  lea    0xcfc(%esi),%edx
0x000000003ffaebdf:  mov    %ecx,%eax
0x000000003ffaebe1:  out    %ax,(%dx)
0x000000003ffaebe3:  pop    %ebx
0x000000003ffaebe4:  pop    %esi
0x000000003ffaebe5:  ret    

----------------
IN: 
0x000000003ffb86e5:  mov    0x4(%ebx),%ebx
0x000000003ffb86e8:  sub    $0x4,%ebx
0x000000003ffb86eb:  jmp    0x3ffb6569

----------------
IN: 
0x000000003ffb6569:  cmp    $0xfffffffc,%ebx
0x000000003ffb656c:  jne    0x3ffb865e

----------------
IN: 
0x000000003ffb2ad4:  push   %edi
0x000000003ffb2ad5:  push   %esi
0x000000003ffb2ad6:  push   %ebx
0x000000003ffb2ad7:  sub    $0x10,%esp
0x000000003ffb2ada:  mov    %eax,%esi
0x000000003ffb2adc:  movb   $0x0,0xe(%esp)
0x000000003ffb2ae1:  movb   $0x0,0xf(%esp)
0x000000003ffb2ae6:  mov    $0x60,%ebx
0x000000003ffb2aeb:  mov    0x3ffbfafb(%ebx),%dl
0x000000003ffb2af1:  movzbl %dl,%edi
0x000000003ffb2af4:  mov    %edi,%eax
0x000000003ffb2af6:  sar    $0x3,%eax
0x000000003ffb2af9:  mov    %dl,%cl
0x000000003ffb2afb:  and    $0x7,%ecx
0x000000003ffb2afe:  mov    $0x1,%edx
0x000000003ffb2b03:  shl    %cl,%edx
0x000000003ffb2b05:  or     %dl,0xe(%esp,%eax,1)
0x000000003ffb2b09:  movzwl (%esi),%eax
0x000000003ffb2b0c:  mov    %edi,%ecx
0x000000003ffb2b0e:  mov    %ebx,%edx
0x000000003ffb2b10:  call   0xf1213

----------------
IN: 
0x00000000000f1213:  push   %esi
0x00000000000f1214:  push   %ebx
0x00000000000f1215:  mov    %edx,%esi
0x00000000000f1217:  mov    %edx,%ebx
0x00000000000f1219:  and    $0xfc,%ebx
0x00000000000f121f:  or     $0x80000000,%ebx
0x00000000000f1225:  shl    $0x8,%eax
0x00000000000f1228:  or     %eax,%ebx
0x00000000000f122a:  mov    $0xcf8,%edx
0x00000000000f122f:  mov    %ebx,%eax
0x00000000000f1231:  out    %eax,(%dx)
0x00000000000f1232:  and    $0x3,%esi
0x00000000000f1235:  lea    0xcfc(%esi),%edx
0x00000000000f123b:  mov    %cl,%al
0x00000000000f123d:  out    %al,(%dx)
0x00000000000f123e:  pop    %ebx
0x00000000000f123f:  pop    %esi
0x00000000000f1240:  ret    

----------------
IN: 
0x000000003ffb2b15:  inc    %ebx
0x000000003ffb2b16:  cmp    $0x64,%ebx
0x000000003ffb2b19:  jne    0x3ffb2aeb

----------------
IN: 
0x000000003ffb2aeb:  mov    0x3ffbfafb(%ebx),%dl
0x000000003ffb2af1:  movzbl %dl,%edi
0x000000003ffb2af4:  mov    %edi,%eax
0x000000003ffb2af6:  sar    $0x3,%eax
0x000000003ffb2af9:  mov    %dl,%cl
0x000000003ffb2afb:  and    $0x7,%ecx
0x000000003ffb2afe:  mov    $0x1,%edx
0x000000003ffb2b03:  shl    %cl,%edx
0x000000003ffb2b05:  or     %dl,0xe(%esp,%eax,1)
0x000000003ffb2b09:  movzwl (%esi),%eax
0x000000003ffb2b0c:  mov    %edi,%ecx
0x000000003ffb2b0e:  mov    %ebx,%edx
0x000000003ffb2b10:  call   0xf1213

----------------
IN: 
0x000000003ffb2b1b:  movzbl 0xe(%esp),%ecx
0x000000003ffb2b20:  mov    $0x4d0,%edx
0x000000003ffb2b25:  mov    %cl,%al
0x000000003ffb2b27:  out    %al,(%dx)
0x000000003ffb2b28:  movzbl 0xf(%esp),%eax
0x000000003ffb2b2d:  mov    $0xd1,%dl
0x000000003ffb2b2f:  out    %al,(%dx)
0x000000003ffb2b30:  mov    %eax,0x8(%esp)
0x000000003ffb2b34:  mov    %ecx,0x4(%esp)
0x000000003ffb2b38:  movl   $0xf496a,(%esp)
0x000000003ffb2b3f:  call   0xf1cc0

----------------
IN: 
0x000000003ffb2b44:  add    $0x10,%esp
0x000000003ffb2b47:  pop    %ebx
0x000000003ffb2b48:  pop    %esi
0x000000003ffb2b49:  pop    %edi
0x000000003ffb2b4a:  ret    

----------------
IN: 
0x000000003ffaf533:  push   %ebx
0x000000003ffaf534:  movzwl (%eax),%ebx
0x000000003ffaf537:  mov    $0x8000,%ecx
0x000000003ffaf53c:  mov    $0x40,%edx
0x000000003ffaf541:  mov    %ebx,%eax
0x000000003ffaf543:  call   0x3ffaebb7

----------------
IN: 
0x000000003ffaf548:  mov    $0x8000,%ecx
0x000000003ffaf54d:  mov    $0x42,%edx
0x000000003ffaf552:  mov    %ebx,%eax
0x000000003ffaf554:  pop    %ebx
0x000000003ffaf555:  jmp    0x3ffaebb7

----------------
IN: 
0x000000003ffb86af:  mov    %ebx,%eax
0x000000003ffb86b1:  call   *0x3ffbfdf7

----------------
IN: 
0x000000003ffaf4c4:  push   %ebx
0x000000003ffaf4c5:  xor    %ecx,%ecx
0x000000003ffaf4c7:  mov    0xc(%eax),%ebx
0x000000003ffaf4ca:  mov    (%eax),%eax
0x000000003ffaf4cc:  shr    $0x3,%ax
0x000000003ffaf4d0:  and    $0x1f,%eax
0x000000003ffaf4d3:  test   %ebx,%ebx
0x000000003ffaf4d5:  je     0x3ffaf4dd

----------------
IN: 
0x000000003ffaf4dd:  lea    -0x1(%ecx,%eax,1),%eax
0x000000003ffaf4e1:  lea    -0x1(%edx,%eax,1),%eax
0x000000003ffaf4e5:  and    $0x3,%eax
0x000000003ffaf4e8:  movzbl 0x3ffbfb5b(%eax),%eax
0x000000003ffaf4ef:  pop    %ebx
0x000000003ffaf4f0:  ret    

----------------
IN: 
0x000000003ffb86b7:  movzbl %al,%ecx
0x000000003ffb86ba:  mov    $0x3c,%edx
0x000000003ffb86bf:  mov    %esi,%eax
0x000000003ffb86c1:  call   0xf1213

----------------
IN: 
0x000000003ffb1abd:  movzwl (%eax),%eax
0x000000003ffb1ac0:  mov    %eax,0xf64c8
0x000000003ffb1ac5:  call   0xf1455

----------------
IN: 
0x00000000000f1455:  push   %esi
0x00000000000f1456:  push   %ebx
0x00000000000f1457:  movzwl %ax,%ebx
0x00000000000f145a:  mov    $0x9,%ecx
0x00000000000f145f:  mov    $0x3c,%edx
0x00000000000f1464:  mov    %ebx,%eax
0x00000000000f1466:  call   0xf1213

----------------
IN: 
0x00000000000f146b:  movzwl 0xf64d0,%esi
0x00000000000f1472:  mov    %esi,%ecx
0x00000000000f1474:  or     $0x1,%ecx
0x00000000000f1477:  movzwl %cx,%ecx
0x00000000000f147a:  mov    $0x40,%edx
0x00000000000f147f:  mov    %ebx,%eax
0x00000000000f1481:  call   0xf11f0

----------------
IN: 
0x00000000000f1486:  mov    $0x1,%ecx
0x00000000000f148b:  mov    $0x80,%edx
0x00000000000f1490:  mov    %ebx,%eax
0x00000000000f1492:  call   0xf1213

----------------
IN: 
0x00000000000f1497:  lea    0x100(%esi),%ecx
0x00000000000f149d:  or     $0x1,%ecx
0x00000000000f14a0:  mov    $0x90,%edx
0x00000000000f14a5:  mov    %ebx,%eax
0x00000000000f14a7:  call   0xf11f0

----------------
IN: 
0x00000000000f14ac:  mov    $0x9,%ecx
0x00000000000f14b1:  mov    $0xd2,%edx
0x00000000000f14b6:  mov    %ebx,%eax
0x00000000000f14b8:  pop    %ebx
0x00000000000f14b9:  pop    %esi
0x00000000000f14ba:  jmp    0xf1213

----------------
IN: 
0x000000003ffb1aca:  mov    0xf64d0,%ax
0x000000003ffb1ad0:  movzwl %ax,%edx
0x000000003ffb1ad3:  add    $0x4,%edx
0x000000003ffb1ad6:  mov    %edx,0xf65e4
0x000000003ffb1adc:  add    $0x8,%eax
0x000000003ffb1adf:  movzwl %ax,%eax
0x000000003ffb1ae2:  jmp    0x3ffb1a91

----------------
IN: 
0x000000003ffb1a91:  push   %ebx
0x000000003ffb1a92:  sub    $0x8,%esp
0x000000003ffb1a95:  mov    %eax,%ebx
0x000000003ffb1a97:  mov    %eax,0x4(%esp)
0x000000003ffb1a9b:  movl   $0xf44bf,(%esp)
0x000000003ffb1aa2:  call   0xf1cc0

----------------
IN: 
0x000000003ffb1aa7:  mov    %bx,0xf6900
0x000000003ffb1aae:  movl   $0xdfc,0xf6904
0x000000003ffb1ab8:  add    $0x8,%esp
0x000000003ffb1abb:  pop    %ebx
0x000000003ffb1abc:  ret    

----------------
IN: 
0x000000003ffb6572:  mov    0x18(%esp),%eax
0x000000003ffb6576:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb657b:  mov    0x3ffbfee3,%eax
0x000000003ffb6580:  lea    -0x4(%eax),%ebx
0x000000003ffb6583:  cmp    $0xfffffffc,%ebx
0x000000003ffb6586:  jne    0x3ffb86f0

----------------
IN: 
0x000000003ffb86f0:  mov    %ebx,%eax
0x000000003ffb86f2:  call   0x3ffafe9c

----------------
IN: 
0x000000003ffafe9c:  push   %ebx
0x000000003ffafe9d:  mov    %eax,%ebx
0x000000003ffafe9f:  cmpw   $0x300,0x14(%eax)
0x000000003ffafea5:  jne    0x3ffafee8

----------------
IN: 
0x000000003ffafee8:  xor    %ecx,%ecx
0x000000003ffafeea:  mov    %ecx,%eax
0x000000003ffafeec:  pop    %ebx
0x000000003ffafeed:  ret    

----------------
IN: 
0x000000003ffb86f7:  test   %eax,%eax
0x000000003ffb86f9:  je     0x3ffb872b

----------------
IN: 
0x000000003ffb872b:  mov    0x4(%ebx),%ebx
0x000000003ffb872e:  sub    $0x4,%ebx
0x000000003ffb8731:  jmp    0x3ffb6583

----------------
IN: 
0x000000003ffb6583:  cmp    $0xfffffffc,%ebx
0x000000003ffb6586:  jne    0x3ffb86f0

----------------
IN: 
0x000000003ffafea7:  movzwl (%eax),%eax
0x000000003ffafeaa:  shl    $0x8,%eax
0x000000003ffafead:  or     $0x80000004,%eax
0x000000003ffafeb2:  mov    $0xcf8,%edx
0x000000003ffafeb7:  out    %eax,(%dx)
0x000000003ffafeb8:  mov    $0xfc,%dl
0x000000003ffafeba:  in     (%dx),%ax
0x000000003ffafebc:  and    $0x3,%eax
0x000000003ffafebf:  xor    %ecx,%ecx
0x000000003ffafec1:  cmp    $0x3,%ax
0x000000003ffafec5:  jne    0x3ffafeea

----------------
IN: 
0x000000003ffafec7:  mov    0xc(%ebx),%ebx
0x000000003ffafeca:  test   %ebx,%ebx
0x000000003ffafecc:  je     0x3ffafee1

----------------
IN: 
0x000000003ffafee1:  mov    $0x1,%ecx
0x000000003ffafee6:  jmp    0x3ffafeea

----------------
IN: 
0x000000003ffafeea:  mov    %ecx,%eax
0x000000003ffafeec:  pop    %ebx
0x000000003ffafeed:  ret    

----------------
IN: 
0x000000003ffb86fb:  mov    (%ebx),%eax
0x000000003ffb86fd:  mov    %eax,%edx
0x000000003ffb86ff:  and    $0x7,%edx
0x000000003ffb8702:  mov    %edx,0xc(%esp)
0x000000003ffb8706:  mov    %eax,%edx
0x000000003ffb8708:  shr    $0x3,%dx
0x000000003ffb870c:  and    $0x1f,%edx
0x000000003ffb870f:  mov    %edx,0x8(%esp)
0x000000003ffb8713:  movzbl %ah,%eax
0x000000003ffb8716:  mov    %eax,0x4(%esp)
0x000000003ffb871a:  movl   $0xf5243,(%esp)
0x000000003ffb8721:  call   0xf1cc0

----------------
IN: 
0x000000003ffb8726:  jmp    0x3ffb65df

----------------
IN: 
0x000000003ffb65df:  mov    $0x7113,%edx
0x000000003ffb65e4:  mov    $0x8086,%eax
0x000000003ffb65e9:  call   0x3ffaebe6

----------------
IN: 
0x000000003ffaebe6:  mov    0x3ffbfee3,%ecx
0x000000003ffaebec:  sub    $0x4,%ecx
0x000000003ffaebef:  cmp    $0xfffffffc,%ecx
0x000000003ffaebf2:  je     0x3ffaec05

----------------
IN: 
0x000000003ffaebf4:  cmp    %ax,0x10(%ecx)
0x000000003ffaebf8:  jne    0x3ffaec00

----------------
IN: 
0x000000003ffaebfa:  cmp    %dx,0x12(%ecx)
0x000000003ffaebfe:  je     0x3ffaec08

----------------
IN: 
0x000000003ffaec00:  mov    0x4(%ecx),%ecx
0x000000003ffaec03:  jmp    0x3ffaebec

----------------
IN: 
0x000000003ffaebec:  sub    $0x4,%ecx
0x000000003ffaebef:  cmp    $0xfffffffc,%ecx
0x000000003ffaebf2:  je     0x3ffaec05

----------------
IN: 
0x000000003ffaec08:  mov    %ecx,%eax
0x000000003ffaec0a:  ret    

----------------
IN: 
0x000000003ffb65ee:  mov    %eax,%ebx
0x000000003ffb65f0:  mov    $0x1237,%edx
0x000000003ffb65f5:  mov    $0x8086,%eax
0x000000003ffb65fa:  call   0x3ffaebe6

----------------
IN: 
0x000000003ffb65ff:  test   %eax,%eax
0x000000003ffb6601:  je     0x3ffb6607

----------------
IN: 
0x000000003ffb6603:  test   %ebx,%ebx
0x000000003ffb6605:  jne    0x3ffb662f

----------------
IN: 
0x000000003ffb662f:  movzwl (%ebx),%edx
0x000000003ffb6632:  mov    %edx,0xf64c4
0x000000003ffb6638:  movzwl (%eax),%eax
0x000000003ffb663b:  mov    %eax,0xf64c0
0x000000003ffb6640:  call   0xf165c

----------------
IN: 
0x00000000000f165c:  push   %ebp
0x00000000000f165d:  push   %edi
0x00000000000f165e:  push   %esi
0x00000000000f165f:  push   %ebx
0x00000000000f1660:  mov    0xf64c4,%ebx
0x00000000000f1666:  test   %ebx,%ebx
0x00000000000f1668:  js     0xf1737

----------------
IN: 
0x00000000000f166e:  movzwl %bx,%ebx
0x00000000000f1671:  mov    %ebx,%eax
0x00000000000f1673:  shl    $0x8,%eax
0x00000000000f1676:  or     $0x80000000,%eax
0x00000000000f167b:  mov    $0xcf8,%edx
0x00000000000f1680:  out    %eax,(%dx)
0x00000000000f1681:  mov    $0xfe,%dl
0x00000000000f1683:  in     (%dx),%ax
0x00000000000f1685:  cmp    $0x7113,%ax
0x00000000000f1689:  mov    0xf64c0,%ebp
0x00000000000f168f:  jne    0xf16ea

----------------
IN: 
0x00000000000f1691:  mov    $0x58,%edx
0x00000000000f1696:  mov    %ebx,%eax
0x00000000000f1698:  call   0xf1241

----------------
IN: 
0x00000000000f169d:  mov    %eax,%edi
0x00000000000f169f:  test   $0x2000000,%eax
0x00000000000f16a4:  jne    0xf1737

----------------
IN: 
0x00000000000f16aa:  movzwl %bp,%esi
0x00000000000f16ad:  mov    $0x4a,%ecx
0x00000000000f16b2:  mov    $0x72,%edx
0x00000000000f16b7:  mov    %esi,%eax
0x00000000000f16b9:  call   0xf1213

----------------
IN: 
0x00000000000f16be:  call   0xf14bf

----------------
IN: 
0x00000000000f14bf:  push   %edi
0x00000000000f14c0:  push   %esi
0x00000000000f14c1:  mov    $0xa8000,%edx
0x00000000000f14c6:  mov    $0x38000,%eax
0x00000000000f14cb:  mov    $0x2000,%ecx
0x00000000000f14d0:  mov    %edx,%edi
0x00000000000f14d2:  mov    %eax,%esi
0x00000000000f14d4:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f14d4:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f14d6:  mov    $0xf105d,%ecx
0x00000000000f14db:  sub    $0xf1030,%ecx
0x00000000000f14e1:  mov    $0xf1030,%esi
0x00000000000f14e6:  mov    %eax,%edi
0x00000000000f14e8:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f14e8:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f14ea:  pop    %esi
0x00000000000f14eb:  pop    %edi
0x00000000000f14ec:  ret    

----------------
IN: 
0x00000000000f16c3:  or     $0x2000000,%edi
0x00000000000f16c9:  mov    %edi,%ecx
0x00000000000f16cb:  mov    $0x58,%edx
0x00000000000f16d0:  mov    %ebx,%eax
0x00000000000f16d2:  call   0xf11f0

----------------
IN: 
0x00000000000f16d7:  call   0xf14ed

----------------
IN: 
0x00000000000f14ed:  mov    $0x1,%al
0x00000000000f14ef:  out    %al,$0xb3
0x00000000000f14f1:  xor    %eax,%eax
0x00000000000f14f3:  out    %al,$0xb2
0x00000000000f14f5:  in     $0xb3,%al
0x00000000000f14f7:  test   %al,%al
0x00000000000f14f9:  jne    0xf14f5

----------------
IN: 
0x0000000000038000:  mov    $0x3fefc,%ebx
0x0000000000038006:  addr32 mov (%ebx),%al
0x0000000000038009:  cmp    $0x64,%al
0x000000000003800b:  je     0x38015

----------------
IN: 
0x0000000000038015:  mov    $0x3ff00,%ebx
0x000000000003801b:  mov    $0xa0000,%eax
0x0000000000038021:  addr32 mov %eax,(%ebx)
0x0000000000038025:  mov    $0x0,%al
0x0000000000038027:  mov    $0xb3,%dx
0x000000000003802a:  out    %al,(%dx)
0x000000000003802b:  rsm    

----------------
IN: 
0x00000000000f14f5:  in     $0xb3,%al
0x00000000000f14f7:  test   %al,%al
0x00000000000f14f9:  jne    0xf14f5

----------------
IN: 
0x00000000000f14fb:  push   %edi
0x00000000000f14fc:  push   %esi
0x00000000000f14fd:  mov    $0x38000,%edx
0x00000000000f1502:  mov    $0xa8000,%eax
0x00000000000f1507:  mov    $0x2000,%ecx
0x00000000000f150c:  mov    %edx,%edi
0x00000000000f150e:  mov    %eax,%esi
0x00000000000f1510:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f1510:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f1512:  mov    $0xf105f,%ecx
0x00000000000f1517:  sub    $0xf105d,%ecx
0x00000000000f151d:  mov    $0xf105d,%esi
0x00000000000f1522:  mov    %eax,%edi
0x00000000000f1524:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f1524:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000f1526:  wbinvd 
0x00000000000f1528:  pop    %esi
0x00000000000f1529:  pop    %edi
0x00000000000f152a:  ret    

----------------
IN: 
0x00000000000f16dc:  mov    $0xa,%ecx
0x00000000000f16e1:  mov    $0x72,%edx
0x00000000000f16e6:  mov    %esi,%eax
0x00000000000f16e8:  jmp    0xf172e

----------------
IN: 
0x00000000000f172e:  pop    %ebx
0x00000000000f172f:  pop    %esi
0x00000000000f1730:  pop    %edi
0x00000000000f1731:  pop    %ebp
0x00000000000f1732:  jmp    0xf1213

----------------
IN: 
0x000000003ffb6645:  lea    0x6c(%esp),%eax
0x000000003ffb6649:  mov    %eax,0x4(%esp)
0x000000003ffb664d:  lea    0x64(%esp),%eax
0x000000003ffb6651:  mov    %eax,(%esp)
0x000000003ffb6654:  lea    0x60(%esp),%ecx
0x000000003ffb6658:  lea    0x5c(%esp),%edx
0x000000003ffb665c:  mov    $0x1,%eax
0x000000003ffb6661:  call   0xf1197

----------------
IN: 
0x000000003ffb6666:  mov    0x6c(%esp),%eax
0x000000003ffb666a:  and    $0x1020,%eax
0x000000003ffb666f:  cmp    $0x1020,%eax
0x000000003ffb6674:  jne    0x3ffb685f

----------------
IN: 
0x000000003ffb667a:  mov    $0xfe,%ecx
0x000000003ffb667f:  rdmsr  
0x000000003ffb6681:  movzbl %al,%ebp
0x000000003ffb6684:  test   $0x1,%ah
0x000000003ffb6687:  je     0x3ffb685f

----------------
IN: 
0x000000003ffb668d:  test   %ebp,%ebp
0x000000003ffb668f:  je     0x3ffb685f

----------------
IN: 
0x000000003ffb6695:  xor    %edx,%edx
0x000000003ffb6697:  xor    %ecx,%ecx
0x000000003ffb6699:  mov    $0x2ff,%eax
0x000000003ffb669e:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb060e:  push   %edi
0x000000003ffb060f:  push   %esi
0x000000003ffb0610:  push   %ebx
0x000000003ffb0611:  mov    %eax,%edi
0x000000003ffb0613:  mov    %edx,%eax
0x000000003ffb0615:  mov    %ecx,%edx
0x000000003ffb0617:  mov    %edi,%ecx
0x000000003ffb0619:  wrmsr  
0x000000003ffb061b:  mov    0xf6930,%ebx
0x000000003ffb0621:  cmp    $0x1f,%ebx
0x000000003ffb0624:  jbe    0x3ffb0638

----------------
IN: 
0x000000003ffb0638:  imul   $0xc,%ebx,%esi
0x000000003ffb063b:  mov    %edi,0xf6934(%esi)
0x000000003ffb0641:  mov    %eax,0xf6938(%esi)
0x000000003ffb0647:  mov    %edx,0xf693c(%esi)
0x000000003ffb064d:  inc    %ebx
0x000000003ffb064e:  mov    %ebx,0xf6930
0x000000003ffb0654:  pop    %ebx
0x000000003ffb0655:  pop    %esi
0x000000003ffb0656:  pop    %edi
0x000000003ffb0657:  ret    

----------------
IN: 
0x000000003ffb66a3:  movl   $0x0,0x78(%esp)
0x000000003ffb66ab:  movl   $0x0,0x7c(%esp)
0x000000003ffb66b3:  mov    0x3ffbff17,%edx
0x000000003ffb66b9:  xor    %eax,%eax
0x000000003ffb66bb:  inc    %eax
0x000000003ffb66bc:  mov    %eax,%ecx
0x000000003ffb66be:  shl    $0x10,%ecx
0x000000003ffb66c1:  cmp    %ecx,%edx
0x000000003ffb66c3:  jb     0x3ffb66ca

----------------
IN: 
0x000000003ffb66c5:  movb   $0x6,0x77(%esp,%eax,1)
0x000000003ffb66ca:  cmp    $0x8,%eax
0x000000003ffb66cd:  jne    0x3ffb66bb

----------------
IN: 
0x000000003ffb66bb:  inc    %eax
0x000000003ffb66bc:  mov    %eax,%ecx
0x000000003ffb66be:  shl    $0x10,%ecx
0x000000003ffb66c1:  cmp    %ecx,%edx
0x000000003ffb66c3:  jb     0x3ffb66ca

----------------
IN: 
0x000000003ffb66cf:  mov    0x78(%esp),%edx
0x000000003ffb66d3:  mov    0x7c(%esp),%ecx
0x000000003ffb66d7:  mov    $0x250,%ax
0x000000003ffb66db:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb66e0:  movl   $0x0,0x78(%esp)
0x000000003ffb66e8:  movl   $0x0,0x7c(%esp)
0x000000003ffb66f0:  mov    0x3ffbff17,%ecx
0x000000003ffb66f6:  lea    0x78(%esp),%edx
0x000000003ffb66fa:  mov    $0x84000,%eax
0x000000003ffb66ff:  cmp    %eax,%ecx
0x000000003ffb6701:  jb     0x3ffb6706

----------------
IN: 
0x000000003ffb6703:  movb   $0x6,(%edx)
0x000000003ffb6706:  add    $0x4000,%eax
0x000000003ffb670b:  inc    %edx
0x000000003ffb670c:  cmp    $0xa4000,%eax
0x000000003ffb6711:  jne    0x3ffb66ff

----------------
IN: 
0x000000003ffb66ff:  cmp    %eax,%ecx
0x000000003ffb6701:  jb     0x3ffb6706

----------------
IN: 
0x000000003ffb6713:  mov    0x78(%esp),%edx
0x000000003ffb6717:  mov    0x7c(%esp),%ecx
0x000000003ffb671b:  mov    $0x258,%eax
0x000000003ffb6720:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb6725:  xor    %edx,%edx
0x000000003ffb6727:  xor    %ecx,%ecx
0x000000003ffb6729:  mov    $0x259,%eax
0x000000003ffb672e:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb6733:  mov    $0x268,%ebx
0x000000003ffb6738:  movl   $0x0,0x78(%esp)
0x000000003ffb6740:  movl   $0x0,0x7c(%esp)
0x000000003ffb6748:  mov    0x3ffbff17,%ecx
0x000000003ffb674e:  lea    -0x1280(,%ebx,8),%edi
0x000000003ffb6755:  xor    %eax,%eax
0x000000003ffb6757:  inc    %eax
0x000000003ffb6758:  lea    (%edi,%eax,1),%edx
0x000000003ffb675b:  shl    $0xc,%edx
0x000000003ffb675e:  cmp    %edx,%ecx
0x000000003ffb6760:  jb     0x3ffb6767

----------------
IN: 
0x000000003ffb6762:  movb   $0x5,0x77(%esp,%eax,1)
0x000000003ffb6767:  cmp    $0x8,%eax
0x000000003ffb676a:  jne    0x3ffb6757

----------------
IN: 
0x000000003ffb6757:  inc    %eax
0x000000003ffb6758:  lea    (%edi,%eax,1),%edx
0x000000003ffb675b:  shl    $0xc,%edx
0x000000003ffb675e:  cmp    %edx,%ecx
0x000000003ffb6760:  jb     0x3ffb6767

----------------
IN: 
0x000000003ffb676c:  mov    0x78(%esp),%edx
0x000000003ffb6770:  mov    0x7c(%esp),%ecx
0x000000003ffb6774:  mov    %ebx,%eax
0x000000003ffb6776:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb677b:  inc    %ebx
0x000000003ffb677c:  cmp    $0x270,%ebx
0x000000003ffb6782:  jne    0x3ffb6738

----------------
IN: 
0x000000003ffb6738:  movl   $0x0,0x78(%esp)
0x000000003ffb6740:  movl   $0x0,0x7c(%esp)
0x000000003ffb6748:  mov    0x3ffbff17,%ecx
0x000000003ffb674e:  lea    -0x1280(,%ebx,8),%edi
0x000000003ffb6755:  xor    %eax,%eax
0x000000003ffb6757:  inc    %eax
0x000000003ffb6758:  lea    (%edi,%eax,1),%edx
0x000000003ffb675b:  shl    $0xc,%edx
0x000000003ffb675e:  cmp    %edx,%ecx
0x000000003ffb6760:  jb     0x3ffb6767

----------------
IN: 
0x000000003ffb6784:  lea    0x68(%esp),%edi
0x000000003ffb6788:  mov    %edi,0x4(%esp)
0x000000003ffb678c:  lea    0x64(%esp),%ebx
0x000000003ffb6790:  mov    %ebx,(%esp)
0x000000003ffb6793:  lea    0x60(%esp),%ecx
0x000000003ffb6797:  lea    0x5c(%esp),%edx
0x000000003ffb679b:  mov    $0x80000000,%eax
0x000000003ffb67a0:  call   0xf1197

----------------
IN: 
0x000000003ffb67a5:  mov    $0x24,%ecx
0x000000003ffb67aa:  cmpl   $0x80000007,0x5c(%esp)
0x000000003ffb67b2:  jbe    0x3ffb67d2

----------------
IN: 
0x000000003ffb67b4:  mov    %edi,0x4(%esp)
0x000000003ffb67b8:  mov    %ebx,(%esp)
0x000000003ffb67bb:  lea    0x60(%esp),%ecx
0x000000003ffb67bf:  lea    0x5c(%esp),%edx
0x000000003ffb67c3:  mov    $0x80000008,%eax
0x000000003ffb67c8:  call   0xf1197

----------------
IN: 
0x000000003ffb67cd:  movzbl 0x5c(%esp),%ecx
0x000000003ffb67d2:  mov    %ecx,%edi
0x000000003ffb67d4:  shr    $0x5,%edi
0x000000003ffb67d7:  and    $0x1,%edi
0x000000003ffb67da:  mov    %edi,%esi
0x000000003ffb67dc:  xor    $0x1,%esi
0x000000003ffb67df:  shl    %cl,%esi
0x000000003ffb67e1:  shl    %cl,%edi
0x000000003ffb67e3:  add    $0xffffffff,%esi
0x000000003ffb67e6:  adc    $0xffffffff,%edi
0x000000003ffb67e9:  xor    %ebx,%ebx
0x000000003ffb67eb:  lea    0x200(%ebx,%ebx,1),%eax
0x000000003ffb67f2:  xor    %edx,%edx
0x000000003ffb67f4:  xor    %ecx,%ecx
0x000000003ffb67f6:  mov    %eax,0x18(%esp)
0x000000003ffb67fa:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb67ff:  mov    0x18(%esp),%eax
0x000000003ffb6803:  inc    %eax
0x000000003ffb6804:  xor    %edx,%edx
0x000000003ffb6806:  xor    %ecx,%ecx
0x000000003ffb6808:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb680d:  inc    %ebx
0x000000003ffb680e:  cmp    %ebp,%ebx
0x000000003ffb6810:  jl     0x3ffb67eb

----------------
IN: 
0x000000003ffb67eb:  lea    0x200(%ebx,%ebx,1),%eax
0x000000003ffb67f2:  xor    %edx,%edx
0x000000003ffb67f4:  xor    %ecx,%ecx
0x000000003ffb67f6:  mov    %eax,0x18(%esp)
0x000000003ffb67fa:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb6812:  mov    0x3ffbfe17,%edx
0x000000003ffb6818:  mov    0x3ffbfe1b,%ecx
0x000000003ffb681e:  mov    $0x200,%eax
0x000000003ffb6823:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb6828:  mov    0x3ffbfe17,%eax
0x000000003ffb682d:  mov    0x3ffbfe1b,%edx
0x000000003ffb6833:  add    $0x0,%eax
0x000000003ffb6836:  adc    $0xffffffff,%edx
0x000000003ffb6839:  and    %esi,%eax
0x000000003ffb683b:  mov    %edi,%ecx
0x000000003ffb683d:  and    %edx,%ecx
0x000000003ffb683f:  or     $0x8,%ah
0x000000003ffb6842:  mov    %eax,%edx
0x000000003ffb6844:  mov    $0x201,%eax
0x000000003ffb6849:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb684e:  mov    $0xc06,%edx
0x000000003ffb6853:  xor    %ecx,%ecx
0x000000003ffb6855:  mov    $0x2ff,%eax
0x000000003ffb685a:  call   0x3ffb060e

----------------
IN: 
0x000000003ffb685f:  lea    0x78(%esp),%eax
0x000000003ffb6863:  mov    %eax,0x4(%esp)
0x000000003ffb6867:  lea    0x6c(%esp),%eax
0x000000003ffb686b:  mov    %eax,(%esp)
0x000000003ffb686e:  lea    0x68(%esp),%ecx
0x000000003ffb6872:  lea    0x64(%esp),%edx
0x000000003ffb6876:  mov    $0x1,%eax
0x000000003ffb687b:  call   0xf1197

----------------
IN: 
0x000000003ffb6880:  cmpl   $0x0,0x64(%esp)
0x000000003ffb6885:  je     0x3ffb688e

----------------
IN: 
0x000000003ffb6887:  testb  $0x2,0x79(%esp)
0x000000003ffb688c:  jne    0x3ffb68b3

----------------
IN: 
0x000000003ffb68b3:  movzbl 0x6b(%esp),%ecx
0x000000003ffb68b8:  mov    %ecx,%edx
0x000000003ffb68ba:  shr    $0x5,%edx
0x000000003ffb68bd:  mov    $0x1,%eax
0x000000003ffb68c2:  shl    %cl,%eax
0x000000003ffb68c4:  or     %eax,0xf690c(,%edx,4)
0x000000003ffb68cb:  movl   $0x1,0xf692c
0x000000003ffb68d5:  mov    0x10000,%esi
0x000000003ffb68db:  mov    0x10004,%edi
0x000000003ffb68e1:  mov    $0x7490,%eax
0x000000003ffb68e6:  shl    $0x8,%eax
0x000000003ffb68e9:  or     $0xea,%al
0x000000003ffb68eb:  mov    %eax,0x10000
0x000000003ffb68f0:  movl   $0xf0,0x10004
0x000000003ffb68fa:  mov    0xfee000f0,%eax
0x000000003ffb68ff:  or     $0x1,%ah
0x000000003ffb6902:  mov    %eax,0xfee000f0
0x000000003ffb6907:  movl   $0x8700,0xfee00350
0x000000003ffb6911:  movl   $0x8400,0xfee00360
0x000000003ffb691b:  movl   $0xc4500,0xfee00300
0x000000003ffb6925:  movl   $0xc4610,0xfee00300
0x000000003ffb692f:  mov    $0xdf,%al
0x000000003ffb6931:  out    %al,$0x70
0x000000003ffb6933:  in     $0x71,%al
0x000000003ffb6935:  movzbl %al,%eax
0x000000003ffb6938:  lea    0x1(%eax),%ebx
0x000000003ffb693b:  mov    0xf692c,%eax
0x000000003ffb6940:  cmp    %eax,%ebx
0x000000003ffb6942:  je     0x3ffb694b

----------------
IN: 
0x000000003ffb694b:  mov    %esi,0x10000
0x000000003ffb6951:  mov    %edi,0x10004
0x000000003ffb6957:  xor    %edx,%edx
0x000000003ffb6959:  xor    %ecx,%ecx
0x000000003ffb695b:  mov    $0xf530c,%eax
0x000000003ffb6960:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb6965:  mov    %eax,0x3ffbff37
0x000000003ffb696a:  test   %eax,%eax
0x000000003ffb696c:  je     0x3ffb6976

----------------
IN: 
0x000000003ffb696e:  cmp    0xf692c,%eax
0x000000003ffb6974:  jae    0x3ffb6980

----------------
IN: 
0x000000003ffb6980:  mov    0xf692c,%eax
0x000000003ffb6985:  mov    0x3ffbff37,%edx
0x000000003ffb698b:  mov    %edx,0x8(%esp)
0x000000003ffb698f:  mov    %eax,0x4(%esp)
0x000000003ffb6993:  movl   $0xf5319,(%esp)
0x000000003ffb699a:  call   0xf1cc0

----------------
IN: 
0x000000003ffb699f:  movl   $0x52495024,0x3ffbfca7
0x000000003ffb69a9:  mov    0x3ffbfcc6,%bl
0x000000003ffb69af:  mov    $0x80,%edx
0x000000003ffb69b4:  mov    $0x3ffbfca7,%eax
0x000000003ffb69b9:  call   0xf152e

----------------
IN: 
0x000000003ffb69be:  sub    %eax,%ebx
0x000000003ffb69c0:  mov    %bl,0x3ffbfcc6
0x000000003ffb69c6:  mov    $0x3ffbfca7,%eax
0x000000003ffb69cb:  call   0x3ffb3e71

----------------
IN: 
0x000000003ffb3e71:  push   %edi
0x000000003ffb3e72:  push   %esi
0x000000003ffb3e73:  push   %ebx
0x000000003ffb3e74:  sub    $0xc,%esp
0x000000003ffb3e77:  mov    %eax,%esi
0x000000003ffb3e79:  cmpl   $0x52495024,(%eax)
0x000000003ffb3e7f:  jne    0x3ffb3ee3

----------------
IN: 
0x000000003ffb3e81:  cmpl   $0x0,0xf65e8
0x000000003ffb3e88:  jne    0x3ffb3ee3

----------------
IN: 
0x000000003ffb3e8a:  movzwl 0x6(%eax),%ebx
0x000000003ffb3e8e:  cmp    $0x1f,%bx
0x000000003ffb3e92:  jbe    0x3ffb3ee3

----------------
IN: 
0x000000003ffb3e94:  mov    %ebx,%edx
0x000000003ffb3e96:  call   0xf152e

----------------
IN: 
0x000000003ffb3e9b:  test   %al,%al
0x000000003ffb3e9d:  jne    0x3ffb3ee3

----------------
IN: 
0x000000003ffb3e9f:  mov    %ebx,%eax
0x000000003ffb3ea1:  call   0x3ffaef75

----------------
IN: 
0x000000003ffaef75:  mov    $0x10,%ecx
0x000000003ffaef7a:  mov    %eax,%edx
0x000000003ffaef7c:  mov    $0x3ffbfeb3,%eax
0x000000003ffaef81:  jmp    0x3ffaeed1

----------------
IN: 
0x000000003ffb3ea6:  mov    %eax,%ebx
0x000000003ffb3ea8:  test   %eax,%eax
0x000000003ffb3eaa:  jne    0x3ffb3ec1

----------------
IN: 
0x000000003ffb3ec1:  mov    %eax,0x8(%esp)
0x000000003ffb3ec5:  mov    %esi,0x4(%esp)
0x000000003ffb3ec9:  movl   $0xf4b3f,(%esp)
0x000000003ffb3ed0:  call   0xf1cc0

----------------
IN: 
0x000000003ffb3ed5:  movzwl 0x6(%esi),%ecx
0x000000003ffb3ed9:  mov    %ebx,%edi
0x000000003ffb3edb:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3edb:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3edd:  mov    %ebx,0xf65e8
0x000000003ffb3ee3:  add    $0xc,%esp
0x000000003ffb3ee6:  pop    %ebx
0x000000003ffb3ee7:  pop    %esi
0x000000003ffb3ee8:  pop    %edi
0x000000003ffb3ee9:  ret    

----------------
IN: 
0x000000003ffb69d0:  mov    $0x8000,%eax
0x000000003ffb69d5:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb69da:  mov    %eax,%ebp
0x000000003ffb69dc:  test   %eax,%eax
0x000000003ffb69de:  jne    0x3ffb69f4

----------------
IN: 
0x000000003ffb69f4:  mov    $0x2c,%ecx
0x000000003ffb69f9:  xor    %edx,%edx
0x000000003ffb69fb:  call   0xf118c

----------------
IN: 
0x000000003ffb6a00:  movl   $0x504d4350,0x0(%ebp)
0x000000003ffb6a07:  movb   $0x4,0x6(%ebp)
0x000000003ffb6a0b:  movl   $0x48434f42,0x8(%ebp)
0x000000003ffb6a12:  movl   $0x55504353,0xc(%ebp)
0x000000003ffb6a19:  lea    0x10(%ebp),%eax
0x000000003ffb6a1c:  mov    $0xf5342,%esi
0x000000003ffb6a21:  mov    $0x3,%ecx
0x000000003ffb6a26:  mov    %eax,%edi
0x000000003ffb6a28:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6a28:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6a2a:  movl   $0xfee00000,0x24(%ebp)
0x000000003ffb6a31:  lea    0x6c(%esp),%eax
0x000000003ffb6a35:  mov    %eax,0x4(%esp)
0x000000003ffb6a39:  lea    0x68(%esp),%eax
0x000000003ffb6a3d:  mov    %eax,(%esp)
0x000000003ffb6a40:  lea    0x64(%esp),%ecx
0x000000003ffb6a44:  lea    0x60(%esp),%edx
0x000000003ffb6a48:  mov    $0x1,%eax
0x000000003ffb6a4d:  call   0xf1197

----------------
IN: 
0x000000003ffb6a52:  cmpl   $0x0,0x60(%esp)
0x000000003ffb6a57:  jne    0x3ffb6a69

----------------
IN: 
0x000000003ffb6a69:  mov    $0x1,%edi
0x000000003ffb6a6e:  testb  $0x10,0x6f(%esp)
0x000000003ffb6a73:  je     0x3ffb6a81

----------------
IN: 
0x000000003ffb6a81:  mov    0xfee00030,%eax
0x000000003ffb6a86:  mov    %al,0x18(%esp)
0x000000003ffb6a8a:  lea    0x2c(%ebp),%eax
0x000000003ffb6a8d:  mov    %eax,0x1c(%esp)
0x000000003ffb6a91:  mov    %eax,%ebx
0x000000003ffb6a93:  xor    %esi,%esi
0x000000003ffb6a95:  cmp    0x3ffbff37,%esi
0x000000003ffb6a9b:  jae    0x3ffb6aeb

----------------
IN: 
0x000000003ffb6a9d:  mov    $0x14,%ecx
0x000000003ffb6aa2:  xor    %edx,%edx
0x000000003ffb6aa4:  mov    %ebx,%eax
0x000000003ffb6aa6:  call   0xf118c

----------------
IN: 
0x000000003ffb6aab:  movb   $0x0,(%ebx)
0x000000003ffb6aae:  mov    %esi,%eax
0x000000003ffb6ab0:  mov    %al,0x1(%ebx)
0x000000003ffb6ab3:  mov    0x18(%esp),%al
0x000000003ffb6ab7:  mov    %al,0x2(%ebx)
0x000000003ffb6aba:  mov    %esi,%eax
0x000000003ffb6abc:  movzbl %al,%eax
0x000000003ffb6abf:  call   0x3ffaeba0

----------------
IN: 
0x000000003ffaeba0:  mov    %eax,%edx
0x000000003ffaeba2:  shr    $0x5,%edx
0x000000003ffaeba5:  mov    %al,%cl
0x000000003ffaeba7:  and    $0x1f,%ecx
0x000000003ffaebaa:  mov    0xf690c(,%edx,4),%eax
0x000000003ffaebb1:  shr    %cl,%eax
0x000000003ffaebb3:  and    $0x1,%eax
0x000000003ffaebb6:  ret    

----------------
IN: 
0x000000003ffb6ac4:  test   %eax,%eax
0x000000003ffb6ac6:  setne  %dl
0x000000003ffb6ac9:  cmp    $0x1,%esi
0x000000003ffb6acc:  sbb    %eax,%eax
0x000000003ffb6ace:  and    $0x2,%eax
0x000000003ffb6ad1:  or     %edx,%eax
0x000000003ffb6ad3:  mov    %al,0x3(%ebx)
0x000000003ffb6ad6:  mov    0x60(%esp),%eax
0x000000003ffb6ada:  mov    %eax,0x4(%ebx)
0x000000003ffb6add:  mov    0x6c(%esp),%eax
0x000000003ffb6ae1:  mov    %eax,0x8(%ebx)
0x000000003ffb6ae4:  add    $0x14,%ebx
0x000000003ffb6ae7:  add    %edi,%esi
0x000000003ffb6ae9:  jmp    0x3ffb6a95

----------------
IN: 
0x000000003ffb6a95:  cmp    0x3ffbff37,%esi
0x000000003ffb6a9b:  jae    0x3ffb6aeb

----------------
IN: 
0x000000003ffb6aeb:  mov    %ebx,%esi
0x000000003ffb6aed:  mov    %ebx,%edi
0x000000003ffb6aef:  sub    0x1c(%esp),%edi
0x000000003ffb6af3:  sar    $0x2,%edi
0x000000003ffb6af6:  imul   $0xcccccccd,%edi,%edi
0x000000003ffb6afc:  cmpl   $0x0,0x3ffbfee3
0x000000003ffb6b03:  je     0x3ffb6b2b

----------------
IN: 
0x000000003ffb6b05:  mov    $0x8,%ecx
0x000000003ffb6b0a:  xor    %edx,%edx
0x000000003ffb6b0c:  mov    %ebx,%eax
0x000000003ffb6b0e:  call   0xf118c

----------------
IN: 
0x000000003ffb6b13:  movb   $0x1,(%ebx)
0x000000003ffb6b16:  movb   $0x0,0x1(%ebx)
0x000000003ffb6b1a:  movl   $0x20494350,0x2(%ebx)
0x000000003ffb6b21:  movw   $0x2020,0x6(%ebx)
0x000000003ffb6b27:  add    $0x8,%ebx
0x000000003ffb6b2a:  inc    %edi
0x000000003ffb6b2b:  mov    $0x8,%ecx
0x000000003ffb6b30:  xor    %edx,%edx
0x000000003ffb6b32:  mov    %ebx,%eax
0x000000003ffb6b34:  call   0xf118c

----------------
IN: 
0x000000003ffb6b39:  movb   $0x1,(%ebx)
0x000000003ffb6b3c:  mov    %ebx,%eax
0x000000003ffb6b3e:  sub    %esi,%eax
0x000000003ffb6b40:  mov    %eax,0x2c(%esp)
0x000000003ffb6b44:  sarl   $0x3,0x2c(%esp)
0x000000003ffb6b49:  mov    0x2c(%esp),%esi
0x000000003ffb6b4d:  mov    %esi,%eax
0x000000003ffb6b4f:  mov    %al,0x34(%esp)
0x000000003ffb6b53:  mov    %al,0x1(%ebx)
0x000000003ffb6b56:  movl   $0x20415349,0x2(%ebx)
0x000000003ffb6b5d:  movw   $0x2020,0x6(%ebx)
0x000000003ffb6b63:  lea    0x8(%ebx),%eax
0x000000003ffb6b66:  mov    $0x8,%ecx
0x000000003ffb6b6b:  xor    %edx,%edx
0x000000003ffb6b6d:  call   0xf118c

----------------
IN: 
0x000000003ffb6b72:  movb   $0x2,0x8(%ebx)
0x000000003ffb6b76:  movb   $0x0,0x9(%ebx)
0x000000003ffb6b7a:  movb   $0x11,0xa(%ebx)
0x000000003ffb6b7e:  movb   $0x1,0xb(%ebx)
0x000000003ffb6b82:  movl   $0xfec00000,0xc(%ebx)
0x000000003ffb6b89:  lea    0x2(%edi),%eax
0x000000003ffb6b8c:  mov    %eax,0x3c(%esp)
0x000000003ffb6b90:  lea    0x10(%ebx),%eax
0x000000003ffb6b93:  mov    %eax,0x40(%esp)
0x000000003ffb6b97:  mov    0x3ffbfee3,%edi
0x000000003ffb6b9d:  lea    -0x4(%edi),%esi
0x000000003ffb6ba0:  mov    %eax,%ebx
0x000000003ffb6ba2:  movw   $0x0,0x24(%esp)
0x000000003ffb6ba9:  or     $0xffffffff,%ecx
0x000000003ffb6bac:  cmp    $0xfffffffc,%esi
0x000000003ffb6baf:  je     0x3ffb6bbe

----------------
IN: 
0x000000003ffb6bb1:  mov    (%esi),%eax
0x000000003ffb6bb3:  mov    %ax,0x18(%esp)
0x000000003ffb6bb8:  shr    $0x8,%ax
0x000000003ffb6bbc:  je     0x3ffb6bd5

----------------
IN: 
0x000000003ffb6bd5:  mov    %ecx,0x50(%esp)
0x000000003ffb6bd9:  movzwl 0x18(%esp),%edi
0x000000003ffb6bde:  mov    $0x3d,%edx
0x000000003ffb6be3:  mov    %edi,%eax
0x000000003ffb6be5:  call   0xf1260

----------------
IN: 
0x000000003ffb6bea:  mov    %al,0x1c(%esp)
0x000000003ffb6bee:  movzbl %al,%eax
0x000000003ffb6bf1:  mov    %eax,0x48(%esp)
0x000000003ffb6bf5:  mov    $0x3c,%edx
0x000000003ffb6bfa:  mov    %edi,%eax
0x000000003ffb6bfc:  call   0xf1260

----------------
IN: 
0x000000003ffb6c01:  mov    %al,0x4c(%esp)
0x000000003ffb6c05:  mov    0x50(%esp),%ecx
0x000000003ffb6c09:  mov    %ecx,%edi
0x000000003ffb6c0b:  cmpl   $0x0,0x48(%esp)
0x000000003ffb6c10:  je     0x3ffb6c8f

----------------
IN: 
0x000000003ffb6c8f:  mov    0x4(%esi),%eax
0x000000003ffb6c92:  lea    -0x4(%eax),%esi
0x000000003ffb6c95:  mov    %edi,%ecx
0x000000003ffb6c97:  jmp    0x3ffb6bac

----------------
IN: 
0x000000003ffb6bac:  cmp    $0xfffffffc,%esi
0x000000003ffb6baf:  je     0x3ffb6bbe

----------------
IN: 
0x000000003ffb6c12:  mov    0x18(%esp),%edi
0x000000003ffb6c16:  and    $0xfff8,%edi
0x000000003ffb6c1c:  xor    %eax,%eax
0x000000003ffb6c1e:  cmp    %edi,%ecx
0x000000003ffb6c20:  sete   %al
0x000000003ffb6c23:  neg    %eax
0x000000003ffb6c25:  and    %ax,0x24(%esp)
0x000000003ffb6c2a:  movzwl 0x24(%esp),%eax
0x000000003ffb6c2f:  mov    0x1c(%esp),%ecx
0x000000003ffb6c33:  bt     %ecx,%eax
0x000000003ffb6c36:  jb     0x3ffb6c8f

----------------
IN: 
0x000000003ffb6c38:  mov    $0x1,%eax
0x000000003ffb6c3d:  mov    0x1c(%esp),%cl
0x000000003ffb6c41:  shl    %cl,%eax
0x000000003ffb6c43:  or     %ax,0x24(%esp)
0x000000003ffb6c48:  mov    $0x8,%ecx
0x000000003ffb6c4d:  xor    %edx,%edx
0x000000003ffb6c4f:  mov    %ebx,%eax
0x000000003ffb6c51:  call   0xf118c

----------------
IN: 
0x000000003ffb6c56:  movb   $0x3,(%ebx)
0x000000003ffb6c59:  movb   $0x0,0x1(%ebx)
0x000000003ffb6c5d:  movw   $0x1,0x2(%ebx)
0x000000003ffb6c63:  movb   $0x0,0x4(%ebx)
0x000000003ffb6c67:  mov    0x1c(%esp),%cl
0x000000003ffb6c6b:  lea    -0x1(%ecx),%eax
0x000000003ffb6c6e:  mov    0x18(%esp),%edx
0x000000003ffb6c72:  shr    $0x3,%dx
0x000000003ffb6c76:  and    $0x1f,%edx
0x000000003ffb6c79:  shl    $0x2,%edx
0x000000003ffb6c7c:  or     %edx,%eax
0x000000003ffb6c7e:  mov    %al,0x5(%ebx)
0x000000003ffb6c81:  movb   $0x0,0x6(%ebx)
0x000000003ffb6c85:  mov    0x4c(%esp),%al
0x000000003ffb6c89:  mov    %al,0x7(%ebx)
0x000000003ffb6c8c:  add    $0x8,%ebx
0x000000003ffb6c8f:  mov    0x4(%esi),%eax
0x000000003ffb6c92:  lea    -0x4(%eax),%esi
0x000000003ffb6c95:  mov    %edi,%ecx
0x000000003ffb6c97:  jmp    0x3ffb6bac

----------------
IN: 
0x000000003ffb6bbe:  xor    %edx,%edx
0x000000003ffb6bc0:  xor    %ecx,%ecx
0x000000003ffb6bc2:  mov    $0xf5041,%eax
0x000000003ffb6bc7:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb6bcc:  mov    %eax,%edi
0x000000003ffb6bce:  xor    %esi,%esi
0x000000003ffb6bd0:  jmp    0x3ffb6c9c

----------------
IN: 
0x000000003ffb6c9c:  mov    $0x8,%ecx
0x000000003ffb6ca1:  xor    %edx,%edx
0x000000003ffb6ca3:  mov    %ebx,%eax
0x000000003ffb6ca5:  call   0xf118c

----------------
IN: 
0x000000003ffb6caa:  mov    $0xe20,%eax
0x000000003ffb6caf:  bt     %esi,%eax
0x000000003ffb6cb2:  jb     0x3ffb6ced

----------------
IN: 
0x000000003ffb6cb4:  movb   $0x3,(%ebx)
0x000000003ffb6cb7:  movb   $0x0,0x1(%ebx)
0x000000003ffb6cbb:  movw   $0x0,0x2(%ebx)
0x000000003ffb6cc1:  mov    0x34(%esp),%al
0x000000003ffb6cc5:  mov    %al,0x4(%ebx)
0x000000003ffb6cc8:  mov    %esi,%eax
0x000000003ffb6cca:  mov    %al,0x5(%ebx)
0x000000003ffb6ccd:  movb   $0x0,0x6(%ebx)
0x000000003ffb6cd1:  mov    %al,0x7(%ebx)
0x000000003ffb6cd4:  test   %edi,%edi
0x000000003ffb6cd6:  je     0x3ffb6cea

----------------
IN: 
0x000000003ffb6cd8:  test   %esi,%esi
0x000000003ffb6cda:  jne    0x3ffb6ce2

----------------
IN: 
0x000000003ffb6cdc:  movb   $0x2,0x7(%ebx)
0x000000003ffb6ce0:  jmp    0x3ffb6cea

----------------
IN: 
0x000000003ffb6cea:  add    $0x8,%ebx
0x000000003ffb6ced:  inc    %esi
0x000000003ffb6cee:  cmp    $0x10,%esi
0x000000003ffb6cf1:  jne    0x3ffb6c9c

----------------
IN: 
0x000000003ffb6ce2:  cmp    $0x2,%esi
0x000000003ffb6ce5:  jne    0x3ffb6cea

----------------
IN: 
0x000000003ffb6ce7:  sub    $0x8,%ebx
0x000000003ffb6cea:  add    $0x8,%ebx
0x000000003ffb6ced:  inc    %esi
0x000000003ffb6cee:  cmp    $0x10,%esi
0x000000003ffb6cf1:  jne    0x3ffb6c9c

----------------
IN: 
0x000000003ffb6ced:  inc    %esi
0x000000003ffb6cee:  cmp    $0x10,%esi
0x000000003ffb6cf1:  jne    0x3ffb6c9c

----------------
IN: 
0x000000003ffb6cf3:  movb   $0x4,(%ebx)
0x000000003ffb6cf6:  movb   $0x3,0x1(%ebx)
0x000000003ffb6cfa:  movw   $0x0,0x2(%ebx)
0x000000003ffb6d00:  mov    0x2c(%esp),%edi
0x000000003ffb6d04:  mov    %edi,%eax
0x000000003ffb6d06:  mov    %al,0x4(%ebx)
0x000000003ffb6d09:  movb   $0x0,0x5(%ebx)
0x000000003ffb6d0d:  movb   $0x0,0x6(%ebx)
0x000000003ffb6d11:  movb   $0x0,0x7(%ebx)
0x000000003ffb6d15:  movb   $0x4,0x8(%ebx)
0x000000003ffb6d19:  movb   $0x1,0x9(%ebx)
0x000000003ffb6d1d:  movw   $0x0,0xa(%ebx)
0x000000003ffb6d23:  mov    %al,0xc(%ebx)
0x000000003ffb6d26:  movb   $0x0,0xd(%ebx)
0x000000003ffb6d2a:  movb   $0xff,0xe(%ebx)
0x000000003ffb6d2e:  movb   $0x1,0xf(%ebx)
0x000000003ffb6d32:  add    $0x10,%ebx
0x000000003ffb6d35:  mov    %ebx,%edx
0x000000003ffb6d37:  sub    %ebp,%edx
0x000000003ffb6d39:  sub    0x40(%esp),%ebx
0x000000003ffb6d3d:  sar    $0x3,%ebx
0x000000003ffb6d40:  add    0x3c(%esp),%ebx
0x000000003ffb6d44:  mov    %bx,0x22(%ebp)
0x000000003ffb6d48:  mov    %dx,0x4(%ebp)
0x000000003ffb6d4c:  mov    %ebp,%eax
0x000000003ffb6d4e:  call   0xf152e

----------------
IN: 
0x000000003ffb6d53:  sub    %al,0x7(%ebp)
0x000000003ffb6d56:  mov    $0x10,%ecx
0x000000003ffb6d5b:  xor    %edx,%edx
0x000000003ffb6d5d:  lea    0x78(%esp),%eax
0x000000003ffb6d61:  call   0xf118c

----------------
IN: 
0x000000003ffb6d66:  movl   $0x5f504d5f,0x78(%esp)
0x000000003ffb6d6e:  mov    %ebp,0x7c(%esp)
0x000000003ffb6d72:  movb   $0x1,0x80(%esp)
0x000000003ffb6d7a:  movb   $0x4,0x81(%esp)
0x000000003ffb6d82:  mov    0x82(%esp),%bl
0x000000003ffb6d89:  mov    $0x10,%edx
0x000000003ffb6d8e:  lea    0x78(%esp),%eax
0x000000003ffb6d92:  call   0xf152e

----------------
IN: 
0x000000003ffb6d97:  sub    %eax,%ebx
0x000000003ffb6d99:  mov    %bl,0x82(%esp)
0x000000003ffb6da0:  lea    0x78(%esp),%eax
0x000000003ffb6da4:  call   0x3ffb3eea

----------------
IN: 
0x000000003ffb3eea:  push   %ebp
0x000000003ffb3eeb:  push   %edi
0x000000003ffb3eec:  push   %esi
0x000000003ffb3eed:  push   %ebx
0x000000003ffb3eee:  sub    $0x18,%esp
0x000000003ffb3ef1:  mov    %eax,%ebx
0x000000003ffb3ef3:  mov    0x4(%eax),%esi
0x000000003ffb3ef6:  test   %esi,%esi
0x000000003ffb3ef8:  je     0x3ffb3f8a

----------------
IN: 
0x000000003ffb3efe:  mov    $0x10,%edx
0x000000003ffb3f03:  call   0xf152e

----------------
IN: 
0x000000003ffb3f08:  test   %al,%al
0x000000003ffb3f0a:  jne    0x3ffb3f8a

----------------
IN: 
0x000000003ffb3f0c:  movzbl 0x8(%ebx),%ecx
0x000000003ffb3f10:  shl    $0x4,%ecx
0x000000003ffb3f13:  movzwl 0x4(%esi),%eax
0x000000003ffb3f17:  mov    %eax,0x10(%esp)
0x000000003ffb3f1b:  add    %ecx,%eax
0x000000003ffb3f1d:  mov    %ecx,0x14(%esp)
0x000000003ffb3f21:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb3f26:  mov    %eax,%ebp
0x000000003ffb3f28:  test   %eax,%eax
0x000000003ffb3f2a:  mov    0x14(%esp),%ecx
0x000000003ffb3f2e:  jne    0x3ffb3f46

----------------
IN: 
0x000000003ffb3f46:  mov    %ecx,0x14(%esp)
0x000000003ffb3f4a:  mov    %eax,0xc(%esp)
0x000000003ffb3f4e:  mov    0x4(%ebx),%eax
0x000000003ffb3f51:  mov    %eax,0x8(%esp)
0x000000003ffb3f55:  mov    %ebx,0x4(%esp)
0x000000003ffb3f59:  movl   $0xf4b5a,(%esp)
0x000000003ffb3f60:  call   0xf1cc0

----------------
IN: 
0x000000003ffb3f65:  mov    %ebp,%edi
0x000000003ffb3f67:  mov    %ebx,%esi
0x000000003ffb3f69:  mov    0x14(%esp),%ecx
0x000000003ffb3f6d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3f6d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3f6f:  mov    %edi,0x4(%ebp)
0x000000003ffb3f72:  mov    $0x10,%edx
0x000000003ffb3f77:  mov    %ebp,%eax
0x000000003ffb3f79:  call   0xf152e

----------------
IN: 
0x000000003ffb3f7e:  sub    %al,0xa(%ebp)
0x000000003ffb3f81:  mov    0x4(%ebx),%esi
0x000000003ffb3f84:  mov    0x10(%esp),%ecx
0x000000003ffb3f88:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3f88:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb3f8a:  add    $0x18,%esp
0x000000003ffb3f8d:  pop    %ebx
0x000000003ffb3f8e:  pop    %esi
0x000000003ffb3f8f:  pop    %edi
0x000000003ffb3f90:  pop    %ebp
0x000000003ffb3f91:  ret    

----------------
IN: 
0x000000003ffb6da9:  mov    %ebp,%eax
0x000000003ffb6dab:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb6db0:  mov    $0xf534f,%eax
0x000000003ffb6db5:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffb6dba:  mov    %eax,%edi
0x000000003ffb6dbc:  mov    $0xf5368,%eax
0x000000003ffb6dc1:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffb6dc6:  mov    %eax,%ebx
0x000000003ffb6dc8:  test   %eax,%eax
0x000000003ffb6dca:  je     0x3ffb7065

----------------
IN: 
0x000000003ffb6dd0:  test   %edi,%edi
0x000000003ffb6dd2:  je     0x3ffb7065

----------------
IN: 
0x000000003ffb6dd8:  cmpl   $0x1f,0x84(%edi)
0x000000003ffb6ddf:  jne    0x3ffb7065

----------------
IN: 
0x000000003ffb6de5:  lea    0x78(%esp),%esi
0x000000003ffb6de9:  mov    $0x1f,%ecx
0x000000003ffb6dee:  mov    %esi,%edx
0x000000003ffb6df0:  mov    %edi,%eax
0x000000003ffb6df2:  call   *0x88(%edi)

----------------
IN: 
0x000000003ffb6df8:  mov    0x84(%ebx),%eax
0x000000003ffb6dfe:  movzwl 0x8e(%esp),%edx
0x000000003ffb6e06:  cmp    %edx,%eax
0x000000003ffb6e08:  jne    0x3ffb7065

----------------
IN: 
0x000000003ffb6e0e:  call   0x3ffaef53

----------------
IN: 
0x000000003ffb6e13:  mov    %eax,0x1c(%esp)
0x000000003ffb6e17:  test   %eax,%eax
0x000000003ffb6e19:  jne    0x3ffb6e2e

----------------
IN: 
0x000000003ffb6e2e:  mov    0x84(%ebx),%ecx
0x000000003ffb6e34:  mov    0x1c(%esp),%edi
0x000000003ffb6e38:  mov    %edi,%edx
0x000000003ffb6e3a:  mov    %ebx,%eax
0x000000003ffb6e3c:  call   *0x88(%ebx)

----------------
IN: 
0x000000003ffb6e42:  mov    %edi,0x90(%esp)
0x000000003ffb6e49:  xor    %edx,%edx
0x000000003ffb6e4b:  mov    %esi,%eax
0x000000003ffb6e4d:  call   0x3ffaf466

----------------
IN: 
0x000000003ffaf466:  test   %eax,%eax
0x000000003ffaf468:  je     0x3ffaf4bd

----------------
IN: 
0x000000003ffaf46a:  push   %ebx
0x000000003ffaf46b:  mov    0x18(%eax),%ecx
0x000000003ffaf46e:  movzwl 0x16(%eax),%ebx
0x000000003ffaf472:  add    %ecx,%ebx
0x000000003ffaf474:  test   %edx,%edx
0x000000003ffaf476:  je     0x3ffaf49c

----------------
IN: 
0x000000003ffaf49c:  xor    %eax,%eax
0x000000003ffaf49e:  cmp    %ebx,%ecx
0x000000003ffaf4a0:  jae    0x3ffaf4c2

----------------
IN: 
0x000000003ffaf4a2:  lea    0x4(%ecx),%eax
0x000000003ffaf4a5:  cmp    %eax,%ebx
0x000000003ffaf4a7:  jbe    0x3ffaf4c0

----------------
IN: 
0x000000003ffaf4a9:  movzbl 0x1(%ecx),%eax
0x000000003ffaf4ad:  add    %ecx,%eax
0x000000003ffaf4af:  cmp    %eax,%ebx
0x000000003ffaf4b1:  seta   %al
0x000000003ffaf4b4:  movzbl %al,%eax
0x000000003ffaf4b7:  neg    %eax
0x000000003ffaf4b9:  and    %ecx,%eax
0x000000003ffaf4bb:  jmp    0x3ffaf4c2

----------------
IN: 
0x000000003ffaf4c2:  pop    %ebx
0x000000003ffaf4c3:  ret    

----------------
IN: 
0x000000003ffb6e52:  test   %eax,%eax
0x000000003ffb6e54:  je     0x3ffb6e5f

----------------
IN: 
0x000000003ffb6e56:  cmpb   $0x0,(%eax)
0x000000003ffb6e59:  je     0x3ffb6e66

----------------
IN: 
0x000000003ffb6e5b:  mov    %eax,%edx
0x000000003ffb6e5d:  jmp    0x3ffb6e4b

----------------
IN: 
0x000000003ffb6e4b:  mov    %esi,%eax
0x000000003ffb6e4d:  call   0x3ffaf466

----------------
IN: 
0x000000003ffaf478:  lea    0x4(%edx),%eax
0x000000003ffaf47b:  cmp    %eax,%ebx
0x000000003ffaf47d:  jb     0x3ffaf4c0

----------------
IN: 
0x000000003ffaf47f:  movzbl 0x1(%edx),%eax
0x000000003ffaf483:  lea    0x2(%edx,%eax,1),%ecx
0x000000003ffaf487:  cmp    %ebx,%ecx
0x000000003ffaf489:  jae    0x3ffaf4c0

----------------
IN: 
0x000000003ffaf48b:  cmpb   $0x0,-0x1(%ecx)
0x000000003ffaf48f:  je     0x3ffaf494

----------------
IN: 
0x000000003ffaf491:  inc    %ecx
0x000000003ffaf492:  jmp    0x3ffaf487

----------------
IN: 
0x000000003ffaf487:  cmp    %ebx,%ecx
0x000000003ffaf489:  jae    0x3ffaf4c0

----------------
IN: 
0x000000003ffaf494:  cmpb   $0x0,-0x2(%ecx)
0x000000003ffaf498:  jne    0x3ffaf491

----------------
IN: 
0x000000003ffaf49a:  jmp    0x3ffaf4a2

----------------
IN: 
0x000000003ffaf4c0:  xor    %eax,%eax
0x000000003ffaf4c2:  pop    %ebx
0x000000003ffaf4c3:  ret    

----------------
IN: 
0x000000003ffb6e5f:  mov    $0x1,%esi
0x000000003ffb6e64:  jmp    0x3ffb6e68

----------------
IN: 
0x000000003ffb6e68:  mov    0x8e(%esp),%ax
0x000000003ffb6e70:  mov    %ax,0x24(%esp)
0x000000003ffb6e75:  test   %si,%si
0x000000003ffb6e78:  je     0x3ffb6ecb

----------------
IN: 
0x000000003ffb6e7a:  mov    $0xf570d,%eax
0x000000003ffb6e7f:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6e84:  mov    %eax,%edi
0x000000003ffb6e86:  mov    $0xf64e0,%eax
0x000000003ffb6e8b:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6e90:  mov    %eax,%ebx
0x000000003ffb6e92:  mov    $0xf5381,%eax
0x000000003ffb6e97:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6e9c:  lea    0x1c(%edi,%ebx,1),%ebx
0x000000003ffb6ea0:  add    %ebx,%eax
0x000000003ffb6ea2:  mov    0x24(%esp),%edi
0x000000003ffb6ea6:  lea    (%eax,%edi,1),%edx
0x000000003ffb6ea9:  mov    %dx,0x8e(%esp)
0x000000003ffb6eb1:  cmp    0x80(%esp),%ax
0x000000003ffb6eb9:  jbe    0x3ffb6ec3

----------------
IN: 
0x000000003ffb6ec3:  incw   0x94(%esp)
0x000000003ffb6ecb:  movzwl 0x8e(%esp),%eax
0x000000003ffb6ed3:  cmp    $0x258,%ax
0x000000003ffb6ed7:  jbe    0x3ffb6ee0

----------------
IN: 
0x000000003ffb6ee0:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb6ee5:  mov    %eax,%ebx
0x000000003ffb6ee7:  test   %eax,%eax
0x000000003ffb6ee9:  jne    0x3ffb6f08

----------------
IN: 
0x000000003ffb6f08:  mov    %eax,0x90(%esp)
0x000000003ffb6f0f:  test   %si,%si
0x000000003ffb6f12:  je     0x3ffb7005

----------------
IN: 
0x000000003ffb6f18:  lea    0x18(%eax),%ebp
0x000000003ffb6f1b:  movb   $0x0,(%eax)
0x000000003ffb6f1e:  movb   $0x18,0x1(%eax)
0x000000003ffb6f22:  movw   $0x0,0x2(%eax)
0x000000003ffb6f28:  mov    $0xf570d,%eax
0x000000003ffb6f2d:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6f32:  lea    0x1(%eax),%ecx
0x000000003ffb6f35:  cmp    $0x1,%ecx
0x000000003ffb6f38:  jle    0x3ffb6f53

----------------
IN: 
0x000000003ffb6f3a:  mov    $0xf570d,%esi
0x000000003ffb6f3f:  mov    %ebp,%edi
0x000000003ffb6f41:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6f41:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6f43:  mov    %edi,%ebp
0x000000003ffb6f45:  movb   $0x1,0x4(%ebx)
0x000000003ffb6f49:  movl   $0x1,0x18(%esp)
0x000000003ffb6f51:  jmp    0x3ffb6f5f

----------------
IN: 
0x000000003ffb6f5f:  mov    $0xf64e0,%eax
0x000000003ffb6f64:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6f69:  lea    0x1(%eax),%ecx
0x000000003ffb6f6c:  cmp    $0x1,%ecx
0x000000003ffb6f6f:  jle    0x3ffb6f89

----------------
IN: 
0x000000003ffb6f71:  mov    $0xf64e0,%esi
0x000000003ffb6f76:  mov    %ebp,%edi
0x000000003ffb6f78:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6f78:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6f7a:  mov    %edi,%ebp
0x000000003ffb6f7c:  incl   0x18(%esp)
0x000000003ffb6f80:  mov    0x18(%esp),%al
0x000000003ffb6f84:  mov    %al,0x5(%ebx)
0x000000003ffb6f87:  jmp    0x3ffb6f8d

----------------
IN: 
0x000000003ffb6f8d:  movw   $0xe800,0x6(%ebx)
0x000000003ffb6f93:  mov    $0xf5381,%eax
0x000000003ffb6f98:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffb6f9d:  lea    0x1(%eax),%ecx
0x000000003ffb6fa0:  cmp    $0x1,%ecx
0x000000003ffb6fa3:  jle    0x3ffb6fbd

----------------
IN: 
0x000000003ffb6fa5:  mov    $0xf5381,%esi
0x000000003ffb6faa:  mov    %ebp,%edi
0x000000003ffb6fac:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6fac:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb6fae:  mov    %edi,%ebp
0x000000003ffb6fb0:  incl   0x18(%esp)
0x000000003ffb6fb4:  mov    0x18(%esp),%al
0x000000003ffb6fb8:  mov    %al,0x8(%ebx)
0x000000003ffb6fbb:  jmp    0x3ffb6fc1

----------------
IN: 
0x000000003ffb6fc1:  movb   $0x0,0x9(%ebx)
0x000000003ffb6fc5:  lea    0xa(%ebx),%eax
0x000000003ffb6fc8:  mov    $0x8,%ecx
0x000000003ffb6fcd:  xor    %edx,%edx
0x000000003ffb6fcf:  call   0xf118c

----------------
IN: 
0x000000003ffb6fd4:  movb   $0x8,0xa(%ebx)
0x000000003ffb6fd8:  movb   $0x0,0x12(%ebx)
0x000000003ffb6fdc:  movb   $0x4,0x13(%ebx)
0x000000003ffb6fe0:  movb   $0x0,0x14(%ebx)
0x000000003ffb6fe4:  movb   $0x0,0x15(%ebx)
0x000000003ffb6fe8:  movb   $0xff,0x16(%ebx)
0x000000003ffb6fec:  movb   $0xff,0x17(%ebx)
0x000000003ffb6ff0:  movb   $0x0,0x0(%ebp)
0x000000003ffb6ff4:  lea    0x1(%ebp),%ebx
0x000000003ffb6ff7:  cmpl   $0x0,0x18(%esp)
0x000000003ffb6ffc:  jne    0x3ffb7005

----------------
IN: 
0x000000003ffb7005:  movzwl 0x24(%esp),%ecx
0x000000003ffb700a:  mov    %ebx,%edi
0x000000003ffb700c:  mov    0x1c(%esp),%esi
0x000000003ffb7010:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7010:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7012:  mov    0x1c(%esp),%eax
0x000000003ffb7016:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb701b:  mov    0x7c(%esp),%bl
0x000000003ffb701f:  mov    $0x10,%edx
0x000000003ffb7024:  lea    0x78(%esp),%eax
0x000000003ffb7028:  call   0xf152e

----------------
IN: 
0x000000003ffb702d:  sub    %eax,%ebx
0x000000003ffb702f:  mov    %bl,0x7c(%esp)
0x000000003ffb7033:  mov    0x8d(%esp),%bl
0x000000003ffb703a:  movzbl 0x7d(%esp),%edx
0x000000003ffb703f:  sub    $0x10,%edx
0x000000003ffb7042:  lea    0x88(%esp),%eax
0x000000003ffb7049:  call   0xf152e

----------------
IN: 
0x000000003ffb704e:  sub    %eax,%ebx
0x000000003ffb7050:  mov    %bl,0x8d(%esp)
0x000000003ffb7057:  lea    0x78(%esp),%eax
0x000000003ffb705b:  call   0x3ffb3ffb

----------------
IN: 
0x000000003ffb3ffb:  cmpl   $0x0,0x3ffbff1b
0x000000003ffb4002:  jne    0x3ffb40a7

----------------
IN: 
0x000000003ffb4008:  push   %edi
0x000000003ffb4009:  push   %esi
0x000000003ffb400a:  push   %ebx
0x000000003ffb400b:  sub    $0xc,%esp
0x000000003ffb400e:  mov    %eax,%esi
0x000000003ffb4010:  mov    $0x4,%ecx
0x000000003ffb4015:  mov    $0xf4b9d,%edx
0x000000003ffb401a:  call   0x3ffaeb34

----------------
IN: 
0x000000003ffb401f:  test   %eax,%eax
0x000000003ffb4021:  jne    0x3ffb40a1

----------------
IN: 
0x000000003ffb4023:  mov    $0x10,%edx
0x000000003ffb4028:  mov    %esi,%eax
0x000000003ffb402a:  call   0xf152e

----------------
IN: 
0x000000003ffb402f:  test   %al,%al
0x000000003ffb4031:  jne    0x3ffb40a1

----------------
IN: 
0x000000003ffb4033:  lea    0x10(%esi),%ebx
0x000000003ffb4036:  mov    $0x5,%ecx
0x000000003ffb403b:  mov    $0xf4ba2,%edx
0x000000003ffb4040:  mov    %ebx,%eax
0x000000003ffb4042:  call   0x3ffaeb34

----------------
IN: 
0x000000003ffb4047:  test   %eax,%eax
0x000000003ffb4049:  jne    0x3ffb40a1

----------------
IN: 
0x000000003ffb404b:  movzbl 0x5(%esi),%edi
0x000000003ffb404f:  lea    -0x10(%edi),%edx
0x000000003ffb4052:  mov    %ebx,%eax
0x000000003ffb4054:  call   0xf152e

----------------
IN: 
0x000000003ffb4059:  test   %al,%al
0x000000003ffb405b:  jne    0x3ffb40a1

----------------
IN: 
0x000000003ffb405d:  mov    %edi,%eax
0x000000003ffb405f:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb4064:  mov    %eax,%ebx
0x000000003ffb4066:  test   %eax,%eax
0x000000003ffb4068:  jne    0x3ffb407f

----------------
IN: 
0x000000003ffb407f:  mov    %eax,0x8(%esp)
0x000000003ffb4083:  mov    %esi,0x4(%esp)
0x000000003ffb4087:  movl   $0xf4ba8,(%esp)
0x000000003ffb408e:  call   0xf1cc0

----------------
IN: 
0x000000003ffb4093:  movzbl 0x5(%esi),%ecx
0x000000003ffb4097:  mov    %ebx,%edi
0x000000003ffb4099:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb4099:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb409b:  mov    %ebx,0x3ffbff1b
0x000000003ffb40a1:  add    $0xc,%esp
0x000000003ffb40a4:  pop    %ebx
0x000000003ffb40a5:  pop    %esi
0x000000003ffb40a6:  pop    %edi
0x000000003ffb40a7:  ret    

----------------
IN: 
0x000000003ffb7060:  jmp    0x3ffb7c0e

----------------
IN: 
0x000000003ffb7c0e:  lea    0x6c(%esp),%edx
0x000000003ffb7c12:  mov    $0xf5397,%eax
0x000000003ffb7c17:  call   0x3ffb0721

----------------
IN: 
0x000000003ffb7c1c:  mov    %eax,0x1c(%esp)
0x000000003ffb7c20:  test   %eax,%eax
0x000000003ffb7c22:  je     0x3ffb7eca

----------------
IN: 
0x000000003ffb7c28:  mov    0x6c(%esp),%eax
0x000000003ffb7c2c:  test   $0x7f,%al
0x000000003ffb7c2e:  je     0x3ffb7c51

----------------
IN: 
0x000000003ffb7c51:  shr    $0x7,%eax
0x000000003ffb7c54:  lea    0x4(,%eax,8),%eax
0x000000003ffb7c5b:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb7c60:  mov    %eax,0x18(%esp)
0x000000003ffb7c64:  test   %eax,%eax
0x000000003ffb7c66:  jne    0x3ffb7c79

----------------
IN: 
0x000000003ffb7c79:  mov    0x18(%esp),%eax
0x000000003ffb7c7d:  movl   $0x0,(%eax)
0x000000003ffb7c83:  mov    0x1c(%esp),%eax
0x000000003ffb7c87:  lea    0x4(%eax),%ebp
0x000000003ffb7c8a:  movl   $0x0,0x24(%esp)
0x000000003ffb7c92:  mov    0x24(%esp),%eax
0x000000003ffb7c96:  cmp    0x6c(%esp),%eax
0x000000003ffb7c9a:  jge    0x3ffb7ead

----------------
IN: 
0x000000003ffb7ca0:  mov    -0x4(%ebp),%eax
0x000000003ffb7ca3:  cmp    $0x2,%eax
0x000000003ffb7ca6:  je     0x3ffb7d9c

----------------
IN: 
0x000000003ffb7cac:  cmp    $0x3,%eax
0x000000003ffb7caf:  je     0x3ffb7e3f

----------------
IN: 
0x000000003ffb7cb5:  dec    %eax
0x000000003ffb7cb6:  jne    0x3ffb7ea0

----------------
IN: 
0x000000003ffb7cbc:  mov    0x18(%esp),%eax
0x000000003ffb7cc0:  mov    (%eax),%edx
0x000000003ffb7cc2:  mov    0x38(%ebp),%edi
0x000000003ffb7cc5:  lea    -0x1(%edi),%eax
0x000000003ffb7cc8:  test   %edi,%eax
0x000000003ffb7cca:  jne    0x3ffb7d87

----------------
IN: 
0x000000003ffb7cd0:  mov    0x3c(%ebp),%al
0x000000003ffb7cd3:  cmp    $0x1,%al
0x000000003ffb7cd5:  je     0x3ffb7ce6

----------------
IN: 
0x000000003ffb7cd7:  cmp    $0x2,%al
0x000000003ffb7cd9:  jne    0x3ffb7d87

----------------
IN: 
0x000000003ffb7cdf:  mov    $0x3ffbfeb3,%ebx
0x000000003ffb7ce4:  jmp    0x3ffb7ceb

----------------
IN: 
0x000000003ffb7ceb:  cmp    $0xf,%edi
0x000000003ffb7cee:  ja     0x3ffb7cf5

----------------
IN: 
0x000000003ffb7cf5:  cmpb   $0x0,0x37(%ebp)
0x000000003ffb7cf9:  jne    0x3ffb7d87

----------------
IN: 
0x000000003ffb7cff:  mov    0x18(%esp),%eax
0x000000003ffb7d03:  lea    (%eax,%edx,8),%esi
0x000000003ffb7d06:  lea    0x4(%esi),%eax
0x000000003ffb7d09:  mov    %eax,0x2c(%esp)
0x000000003ffb7d0d:  mov    %ebp,%eax
0x000000003ffb7d0f:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffb7d14:  mov    %eax,0x4(%esi)
0x000000003ffb7d17:  test   %eax,%eax
0x000000003ffb7d19:  je     0x3ffb7ea0

----------------
IN: 
0x000000003ffb7d1f:  mov    0x84(%eax),%edx
0x000000003ffb7d25:  test   %edx,%edx
0x000000003ffb7d27:  je     0x3ffb7ea0

----------------
IN: 
0x000000003ffb7d2d:  mov    %edi,%ecx
0x000000003ffb7d2f:  mov    %ebx,%eax
0x000000003ffb7d31:  call   0x3ffaeed1

----------------
IN: 
0x000000003ffb7d36:  mov    %eax,%ebx
0x000000003ffb7d38:  test   %eax,%eax
0x000000003ffb7d3a:  jne    0x3ffb7d50

----------------
IN: 
0x000000003ffb7d50:  mov    0x4(%esi),%edi
0x000000003ffb7d53:  mov    0x84(%edi),%ecx
0x000000003ffb7d59:  mov    %eax,%edx
0x000000003ffb7d5b:  mov    %edi,%eax
0x000000003ffb7d5d:  call   *0x88(%edi)

----------------
IN: 
0x000000003ffb7d63:  mov    0x4(%esi),%edx
0x000000003ffb7d66:  cmp    0x84(%edx),%eax
0x000000003ffb7d6c:  jne    0x3ffb7d80

----------------
IN: 
0x000000003ffb7d6e:  mov    0x2c(%esp),%eax
0x000000003ffb7d72:  mov    %ebx,0x4(%eax)
0x000000003ffb7d75:  mov    0x18(%esp),%eax
0x000000003ffb7d79:  incl   (%eax)
0x000000003ffb7d7b:  jmp    0x3ffb7ea0

----------------
IN: 
0x000000003ffb7ea0:  subl   $0xffffff80,0x24(%esp)
0x000000003ffb7ea5:  sub    $0xffffff80,%ebp
0x000000003ffb7ea8:  jmp    0x3ffb7c92

----------------
IN: 
0x000000003ffb7c92:  mov    0x24(%esp),%eax
0x000000003ffb7c96:  cmp    0x6c(%esp),%eax
0x000000003ffb7c9a:  jge    0x3ffb7ead

----------------
IN: 
0x000000003ffb7ce6:  mov    $0x3ffbfeb7,%ebx
0x000000003ffb7ceb:  cmp    $0xf,%edi
0x000000003ffb7cee:  ja     0x3ffb7cf5

----------------
IN: 
0x000000003ffb7e3f:  mov    0x38(%ebp),%edi
0x000000003ffb7e42:  mov    0x3c(%ebp),%esi
0x000000003ffb7e45:  mov    0x40(%ebp),%ebx
0x000000003ffb7e48:  mov    0x18(%esp),%edx
0x000000003ffb7e4c:  mov    %ebp,%eax
0x000000003ffb7e4e:  call   0x3ffaf6f9

----------------
IN: 
0x000000003ffaf6f9:  push   %ebp
0x000000003ffaf6fa:  push   %edi
0x000000003ffaf6fb:  push   %esi
0x000000003ffaf6fc:  push   %ebx
0x000000003ffaf6fd:  mov    %eax,%edi
0x000000003ffaf6ff:  cmpb   $0x0,0x37(%eax)
0x000000003ffaf703:  jne    0x3ffaf72a

----------------
IN: 
0x000000003ffaf705:  mov    %edx,%esi
0x000000003ffaf707:  mov    (%edx),%ebp
0x000000003ffaf709:  xor    %ebx,%ebx
0x000000003ffaf70b:  cmp    %ebp,%ebx
0x000000003ffaf70d:  jge    0x3ffaf72a

----------------
IN: 
0x000000003ffaf70f:  mov    0x4(%esi,%ebx,8),%eax
0x000000003ffaf713:  add    $0x4,%eax
0x000000003ffaf716:  mov    %edi,%edx
0x000000003ffaf718:  call   0xf116c

----------------
IN: 
0x00000000000f1183:  inc    %ecx
0x00000000000f1184:  test   %bl,%bl
0x00000000000f1186:  jne    0xf116f

----------------
IN: 
0x00000000000f116f:  mov    (%eax,%ecx,1),%bl
0x00000000000f1172:  cmp    (%edx,%ecx,1),%bl
0x00000000000f1175:  je     0xf1183

----------------
IN: 
0x000000003ffaf71d:  test   %eax,%eax
0x000000003ffaf71f:  jne    0x3ffaf727

----------------
IN: 
0x000000003ffaf727:  inc    %ebx
0x000000003ffaf728:  jmp    0x3ffaf70b

----------------
IN: 
0x000000003ffaf70b:  cmp    %ebp,%ebx
0x000000003ffaf70d:  jge    0x3ffaf72a

----------------
IN: 
0x00000000000f1188:  xor    %eax,%eax
0x00000000000f118a:  pop    %ebx
0x00000000000f118b:  ret    

----------------
IN: 
0x000000003ffaf721:  lea    0x4(%esi,%ebx,8),%eax
0x000000003ffaf725:  jmp    0x3ffaf72c

----------------
IN: 
0x000000003ffaf72c:  pop    %ebx
0x000000003ffaf72d:  pop    %esi
0x000000003ffaf72e:  pop    %edi
0x000000003ffaf72f:  pop    %ebp
0x000000003ffaf730:  ret    

----------------
IN: 
0x000000003ffb7e53:  test   %eax,%eax
0x000000003ffb7e55:  je     0x3ffb7e84

----------------
IN: 
0x000000003ffb7e57:  mov    0x4(%eax),%edx
0x000000003ffb7e5a:  test   %edx,%edx
0x000000003ffb7e5c:  je     0x3ffb7e84

----------------
IN: 
0x000000003ffb7e5e:  mov    (%eax),%eax
0x000000003ffb7e60:  mov    0x84(%eax),%eax
0x000000003ffb7e66:  cmp    %eax,%edi
0x000000003ffb7e68:  jae    0x3ffb7e84

----------------
IN: 
0x000000003ffb7e6a:  mov    %ebx,%ecx
0x000000003ffb7e6c:  add    %esi,%ecx
0x000000003ffb7e6e:  jb     0x3ffb7e84

----------------
IN: 
0x000000003ffb7e70:  cmp    %eax,%ecx
0x000000003ffb7e72:  ja     0x3ffb7e84

----------------
IN: 
0x000000003ffb7e74:  add    %edx,%edi
0x000000003ffb7e76:  lea    (%edx,%esi,1),%eax
0x000000003ffb7e79:  mov    %ebx,%edx
0x000000003ffb7e7b:  call   0xf152e

----------------
IN: 
0x000000003ffb7e80:  sub    %al,(%edi)
0x000000003ffb7e82:  jmp    0x3ffb7ea0

----------------
IN: 
0x000000003ffb7d9c:  mov    0x70(%ebp),%edi
0x000000003ffb7d9f:  movl   $0x0,0x78(%esp)
0x000000003ffb7da7:  movl   $0x0,0x7c(%esp)
0x000000003ffb7daf:  mov    0x18(%esp),%ebx
0x000000003ffb7db3:  mov    %ebx,%edx
0x000000003ffb7db5:  mov    %ebp,%eax
0x000000003ffb7db7:  call   0x3ffaf6f9

----------------
IN: 
0x000000003ffb7dbc:  mov    %eax,%esi
0x000000003ffb7dbe:  lea    0x38(%ebp),%eax
0x000000003ffb7dc1:  mov    %ebx,%edx
0x000000003ffb7dc3:  call   0x3ffaf6f9

----------------
IN: 
0x000000003ffb7dc8:  test   %eax,%eax
0x000000003ffb7dca:  je     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7dcc:  test   %esi,%esi
0x000000003ffb7dce:  je     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7dd0:  mov    0x4(%esi),%ecx
0x000000003ffb7dd3:  test   %ecx,%ecx
0x000000003ffb7dd5:  je     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7dd7:  mov    0x4(%eax),%ebx
0x000000003ffb7dda:  test   %ebx,%ebx
0x000000003ffb7ddc:  je     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7dde:  mov    0x74(%ebp),%al
0x000000003ffb7de1:  mov    %al,0x2c(%esp)
0x000000003ffb7de5:  movzbl %al,%edx
0x000000003ffb7de8:  mov    %edx,%eax
0x000000003ffb7dea:  add    %edi,%eax
0x000000003ffb7dec:  jb     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7dee:  mov    (%esi),%esi
0x000000003ffb7df0:  cmp    0x84(%esi),%eax
0x000000003ffb7df6:  ja     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7df8:  mov    0x2c(%esp),%al
0x000000003ffb7dfc:  dec    %eax
0x000000003ffb7dfd:  cmp    $0x7,%al
0x000000003ffb7dff:  ja     0x3ffb7e2d

----------------
IN: 
0x000000003ffb7e01:  lea    -0x1(%edx),%eax
0x000000003ffb7e04:  test   %edx,%eax
0x000000003ffb7e06:  jne    0x3ffb7e2d

----------------
IN: 
0x000000003ffb7e08:  lea    (%ecx,%edi,1),%eax
0x000000003ffb7e0b:  lea    0x78(%esp),%edi
0x000000003ffb7e0f:  mov    %eax,%esi
0x000000003ffb7e11:  mov    %edx,%ecx
0x000000003ffb7e13:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7e13:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7e15:  mov    %ebx,%ecx
0x000000003ffb7e17:  xor    %ebx,%ebx
0x000000003ffb7e19:  add    %ecx,0x78(%esp)
0x000000003ffb7e1d:  adc    %ebx,0x7c(%esp)
0x000000003ffb7e21:  mov    %eax,%edi
0x000000003ffb7e23:  lea    0x78(%esp),%esi
0x000000003ffb7e27:  mov    %edx,%ecx
0x000000003ffb7e29:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7e29:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb7e2b:  jmp    0x3ffb7ea0

----------------
IN: 
0x000000003ffb7ead:  mov    0x18(%esp),%eax
0x000000003ffb7eb1:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb7eb6:  mov    0x1c(%esp),%eax
0x000000003ffb7eba:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb7ebf:  jmp    0x3ffb7ed2

----------------
IN: 
0x000000003ffb7ed2:  mov    $0xf1030,%esi
0x000000003ffb7ed7:  mov    $0xf000f,%ebx
0x000000003ffb7edc:  and    $0xfffffff0,%ebx
0x000000003ffb7edf:  mov    %esi,%edi
0x000000003ffb7ee1:  and    $0xfffffff0,%edi
0x000000003ffb7ee4:  cmp    %edi,%ebx
0x000000003ffb7ee6:  ja     0x3ffb7efc

----------------
IN: 
0x000000003ffb7ee8:  mov    %esi,%edx
0x000000003ffb7eea:  sub    %ebx,%edx
0x000000003ffb7eec:  mov    %ebx,%eax
0x000000003ffb7eee:  call   0x3ffaf79b

----------------
IN: 
0x000000003ffaf79b:  push   %edi
0x000000003ffaf79c:  push   %esi
0x000000003ffaf79d:  push   %ebx
0x000000003ffaf79e:  mov    %eax,%ebx
0x000000003ffaf7a0:  cmpl   $0x20525450,0x4(%eax)
0x000000003ffaf7a7:  jne    0x3ffaf7eb

----------------
IN: 
0x000000003ffaf7eb:  or     $0xffffffff,%eax
0x000000003ffaf7ee:  pop    %ebx
0x000000003ffaf7ef:  pop    %esi
0x000000003ffaf7f0:  pop    %edi
0x000000003ffaf7f1:  ret    

----------------
IN: 
0x000000003ffb7ef3:  test   %eax,%eax
0x000000003ffb7ef5:  jns    0x3ffb7efe

----------------
IN: 
0x000000003ffb7ef7:  add    $0x10,%ebx
0x000000003ffb7efa:  jmp    0x3ffb7ee4

----------------
IN: 
0x000000003ffb7ee4:  cmp    %edi,%ebx
0x000000003ffb7ee6:  ja     0x3ffb7efc

----------------
IN: 
0x000000003ffaf7a9:  cmpl   $0x20445352,(%eax)
0x000000003ffaf7af:  jne    0x3ffaf7eb

----------------
IN: 
0x000000003ffaf7b1:  mov    %edx,%edi
0x000000003ffaf7b3:  cmp    $0x13,%edx
0x000000003ffaf7b6:  jbe    0x3ffaf7eb

----------------
IN: 
0x000000003ffaf7b8:  mov    $0x14,%edx
0x000000003ffaf7bd:  call   0xf152e

----------------
IN: 
0x000000003ffaf7c2:  test   %al,%al
0x000000003ffaf7c4:  jne    0x3ffaf7eb

----------------
IN: 
0x000000003ffaf7c6:  cmpb   $0x1,0xf(%ebx)
0x000000003ffaf7ca:  jbe    0x3ffaf7e2

----------------
IN: 
0x000000003ffaf7e2:  mov    $0x14,%esi
0x000000003ffaf7e7:  mov    %esi,%eax
0x000000003ffaf7e9:  jmp    0x3ffaf7ee

----------------
IN: 
0x000000003ffaf7ee:  pop    %ebx
0x000000003ffaf7ef:  pop    %esi
0x000000003ffaf7f0:  pop    %edi
0x000000003ffaf7f1:  ret    

----------------
IN: 
0x000000003ffb7efe:  mov    %ebx,0xf6514
0x000000003ffb7f04:  test   %ebx,%ebx
0x000000003ffb7f06:  jne    0x3ffb87e4

----------------
IN: 
0x000000003ffb87e4:  add    $0x98,%esp
0x000000003ffb87ea:  pop    %ebx
0x000000003ffb87eb:  pop    %esi
0x000000003ffb87ec:  pop    %edi
0x000000003ffb87ed:  pop    %ebp
0x000000003ffb87ee:  ret    

----------------
IN: 
0x000000003ffbb5e2:  cmpl   $0x2,0xf65d8
0x000000003ffbb5e9:  jne    0x3ffbb5f0

----------------
IN: 
0x000000003ffbb5f0:  movl   $0xf5e03,(%esp)
0x000000003ffbb5f7:  call   0xf1cc0

----------------
IN: 
0x000000003ffbb5fc:  mov    $0x1,%edx
0x000000003ffbb601:  xor    %ecx,%ecx
0x000000003ffbb603:  mov    $0xf5e1c,%eax
0x000000003ffbb608:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffbb60d:  mov    %eax,0xf65cc
0x000000003ffbb612:  mov    $0x1,%edx
0x000000003ffbb617:  xor    %ecx,%ecx
0x000000003ffbb619:  mov    $0xf5e34,%eax
0x000000003ffbb61e:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffbb623:  mov    %eax,0xf65c8
0x000000003ffbb628:  mov    $0x1,%edx
0x000000003ffbb62d:  xor    %ecx,%ecx
0x000000003ffbb62f:  mov    $0xf5e4b,%eax
0x000000003ffbb634:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffbb639:  mov    %eax,0xf65c4
0x000000003ffbb63e:  call   0xf12e6

----------------
IN: 
0x00000000000f12e6:  mov    0xf65d0,%eax
0x00000000000f12eb:  mov    0x10(%eax),%eax
0x00000000000f12ee:  sub    $0x10,%eax
0x00000000000f12f1:  and    $0xfffff800,%eax
0x00000000000f12f6:  ret    

----------------
IN: 
0x000000003ffbb643:  lea    -0xc0000(%eax),%ecx
0x000000003ffbb649:  xor    %edx,%edx
0x000000003ffbb64b:  mov    $0xc0000,%eax
0x000000003ffbb650:  call   0xf118c

----------------
IN: 
0x000000003ffbb655:  mov    0x3ffbfee3,%eax
0x000000003ffbb65a:  lea    -0x4(%eax),%ebx
0x000000003ffbb65d:  cmp    $0xfffffffc,%ebx
0x000000003ffbb660:  je     0x3ffbb87c

----------------
IN: 
0x000000003ffbb666:  mov    %ebx,%eax
0x000000003ffbb668:  call   0x3ffafe9c

----------------
IN: 
0x000000003ffbb66d:  test   %eax,%eax
0x000000003ffbb66f:  jne    0x3ffbb679

----------------
IN: 
0x000000003ffbb671:  mov    0x4(%ebx),%ebx
0x000000003ffbb674:  sub    $0x4,%ebx
0x000000003ffbb677:  jmp    0x3ffbb65d

----------------
IN: 
0x000000003ffbb65d:  cmp    $0xfffffffc,%ebx
0x000000003ffbb660:  je     0x3ffbb87c

----------------
IN: 
0x000000003ffbb679:  mov    $0xf5e60,%edx
0x000000003ffbb67e:  mov    $0xf5cc0,%eax
0x000000003ffbb683:  call   0xf116c

----------------
IN: 
0x000000003ffbb688:  test   %eax,%eax
0x000000003ffbb68a:  jne    0x3ffbb6b5

----------------
IN: 
0x000000003ffbb6b5:  mov    $0xf5e71,%edx
0x000000003ffbb6ba:  mov    $0xf5cc0,%eax
0x000000003ffbb6bf:  call   0xf116c

----------------
IN: 
0x000000003ffbb6c4:  test   %eax,%eax
0x000000003ffbb6c6:  jne    0x3ffbb6df

----------------
IN: 
0x000000003ffbb6df:  mov    $0xf5e7c,%edx
0x000000003ffbb6e4:  mov    $0xf5cc0,%eax
0x000000003ffbb6e9:  call   0xf116c

----------------
IN: 
0x000000003ffbb6ee:  test   %eax,%eax
0x000000003ffbb6f0:  jne    0x3ffbb71b

----------------
IN: 
0x000000003ffbb71b:  mov    $0xf5e89,%edx
0x000000003ffbb720:  mov    $0xf5cc0,%eax
0x000000003ffbb725:  call   0xf116c

----------------
IN: 
0x000000003ffbb72a:  test   %eax,%eax
0x000000003ffbb72c:  jne    0x3ffbb757

----------------
IN: 
0x000000003ffbb757:  mov    0x10(%ebx),%ax
0x000000003ffbb75b:  cmp    $0x1106,%ax
0x000000003ffbb75f:  jne    0x3ffbb850

----------------
IN: 
0x000000003ffbb850:  cmp    $0x8086,%ax
0x000000003ffbb854:  jne    0x3ffbb86e

----------------
IN: 
0x000000003ffbb86e:  xor    %ecx,%ecx
0x000000003ffbb870:  mov    $0x1,%edx
0x000000003ffbb875:  mov    %ebx,%eax
0x000000003ffbb877:  call   0x3ffb46f3

----------------
IN: 
0x000000003ffb46f3:  push   %ebp
0x000000003ffb46f4:  push   %edi
0x000000003ffb46f5:  push   %esi
0x000000003ffb46f6:  push   %ebx
0x000000003ffb46f7:  sub    $0x40,%esp
0x000000003ffb46fa:  mov    %eax,%ebx
0x000000003ffb46fc:  mov    %edx,0x1c(%esp)
0x000000003ffb4700:  mov    %ecx,0x20(%esp)
0x000000003ffb4704:  mov    (%eax),%eax
0x000000003ffb4706:  mov    %ax,0x1a(%esp)
0x000000003ffb470b:  movzwl 0x12(%ebx),%eax
0x000000003ffb470f:  mov    %eax,0x10(%esp)
0x000000003ffb4713:  movzwl 0x10(%ebx),%eax
0x000000003ffb4717:  mov    %eax,0xc(%esp)
0x000000003ffb471b:  movl   $0xf4ddd,0x8(%esp)
0x000000003ffb4723:  movl   $0x11,0x4(%esp)
0x000000003ffb472b:  lea    0x2f(%esp),%esi
0x000000003ffb472f:  mov    %esi,(%esp)
0x000000003ffb4732:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb46a8:  push   %ebx
0x000000003ffb46a9:  sub    $0xc,%esp
0x000000003ffb46ac:  mov    0x14(%esp),%ebx
0x000000003ffb46b0:  mov    0x18(%esp),%edx
0x000000003ffb46b4:  xor    %eax,%eax
0x000000003ffb46b6:  test   %edx,%edx
0x000000003ffb46b8:  je     0x3ffb46ee

----------------
IN: 
0x000000003ffb46ba:  movl   $0x3ffaeb17,(%esp)
0x000000003ffb46c1:  mov    %ebx,0x4(%esp)
0x000000003ffb46c5:  add    %ebx,%edx
0x000000003ffb46c7:  mov    %edx,0x8(%esp)
0x000000003ffb46cb:  lea    0x20(%esp),%ecx
0x000000003ffb46cf:  mov    0x1c(%esp),%edx
0x000000003ffb46d3:  mov    %esp,%eax
0x000000003ffb46d5:  call   0xf1943

----------------
IN: 
0x000000003ffaeb17:  mov    0x4(%eax),%ecx
0x000000003ffaeb1a:  cmp    0x8(%eax),%ecx
0x000000003ffaeb1d:  jae    0x3ffaeb24

----------------
IN: 
0x000000003ffaeb1f:  mov    %dl,(%ecx)
0x000000003ffaeb21:  incl   0x4(%eax)
0x000000003ffaeb24:  ret    

----------------
IN: 
0x000000003ffb46da:  mov    0x4(%esp),%eax
0x000000003ffb46de:  mov    0x8(%esp),%edx
0x000000003ffb46e2:  cmp    %edx,%eax
0x000000003ffb46e4:  jb     0x3ffb46e9

----------------
IN: 
0x000000003ffb46e9:  movb   $0x0,(%eax)
0x000000003ffb46ec:  sub    %ebx,%eax
0x000000003ffb46ee:  add    $0xc,%esp
0x000000003ffb46f1:  pop    %ebx
0x000000003ffb46f2:  ret    

----------------
IN: 
0x000000003ffb4737:  mov    %esi,%eax
0x000000003ffb4739:  call   0x3ffb01ba

----------------
IN: 
0x000000003ffb473e:  test   %eax,%eax
0x000000003ffb4740:  je     0x3ffb4753

----------------
IN: 
0x000000003ffb4753:  xor    %edi,%edi
0x000000003ffb4755:  movzwl (%ebx),%eax
0x000000003ffb4758:  testb  $0x7f,0x18(%ebx)
0x000000003ffb475c:  jne    0x3ffb48d8

----------------
IN: 
0x000000003ffb4762:  mov    %eax,%ebp
0x000000003ffb4764:  mov    %eax,0x14(%esp)
0x000000003ffb4768:  mov    $0x30,%edx
0x000000003ffb476d:  call   0xf1241

----------------
IN: 
0x000000003ffb4772:  mov    %eax,%esi
0x000000003ffb4774:  mov    $0xfffffffe,%ecx
0x000000003ffb4779:  mov    $0x30,%edx
0x000000003ffb477e:  mov    %ebp,%eax
0x000000003ffb4780:  call   0xf11f0

----------------
IN: 
0x000000003ffb4785:  mov    $0x30,%edx
0x000000003ffb478a:  mov    %ebp,%eax
0x000000003ffb478c:  call   0xf1241

----------------
IN: 
0x000000003ffb4791:  and    $0xfffffffe,%esi
0x000000003ffb4794:  lea    -0x1(%eax),%edx
0x000000003ffb4797:  cmp    $0xfffffffd,%edx
0x000000003ffb479a:  ja     0x3ffb4898

----------------
IN: 
0x000000003ffb47a0:  cmp    %eax,%esi
0x000000003ffb47a2:  je     0x3ffb4898

----------------
IN: 
0x000000003ffb47a8:  lea    0x400000(%esi),%eax
0x000000003ffb47ae:  cmp    $0x13fffff,%eax
0x000000003ffb47b3:  jbe    0x3ffb4898

----------------
IN: 
0x000000003ffb47b9:  mov    %esi,%ecx
0x000000003ffb47bb:  or     $0x1,%ecx
0x000000003ffb47be:  mov    $0x30,%edx
0x000000003ffb47c3:  mov    %ebp,%eax
0x000000003ffb47c5:  call   0xf11f0

----------------
IN: 
0x000000003ffb47ca:  mov    %esi,%edx
0x000000003ffb47cc:  cmpw   $0xaa55,(%edx)
0x000000003ffb47d1:  jne    0x3ffb4898

----------------
IN: 
0x000000003ffb47d7:  mov    0x18(%edx),%ax
0x000000003ffb47db:  movzwl %ax,%ebp
0x000000003ffb47de:  add    %edx,%ebp
0x000000003ffb47e0:  cmpl   $0x52494350,0x0(%ebp)
0x000000003ffb47e7:  jne    0x3ffb4898

----------------
IN: 
0x000000003ffb47ed:  test   $0x3,%al
0x000000003ffb47ef:  je     0x3ffb4815

----------------
IN: 
0x000000003ffb4815:  test   %ebp,%ebp
0x000000003ffb4817:  je     0x3ffb4898

----------------
IN: 
0x000000003ffb4819:  mov    0x10(%ebx),%eax
0x000000003ffb481c:  cmp    %ax,0x4(%ebp)
0x000000003ffb4820:  jne    0x3ffb4832

----------------
IN: 
0x000000003ffb4822:  mov    0x12(%ebx),%ax
0x000000003ffb4826:  cmp    %ax,0x6(%ebp)
0x000000003ffb482a:  jne    0x3ffb4832

----------------
IN: 
0x000000003ffb482c:  cmpb   $0x0,0x14(%ebp)
0x000000003ffb4830:  je     0x3ffb4843

----------------
IN: 
0x000000003ffb4843:  movzbl 0x2(%edx),%ecx
0x000000003ffb4847:  mov    %edx,0x28(%esp)
0x000000003ffb484b:  shl    $0x9,%ecx
0x000000003ffb484e:  mov    %ecx,%eax
0x000000003ffb4850:  mov    %ecx,0x24(%esp)
0x000000003ffb4854:  call   0x3ffaf015

----------------
IN: 
0x000000003ffaf015:  push   %esi
0x000000003ffaf016:  push   %ebx
0x000000003ffaf017:  mov    0x3ffbfe93,%esi
0x000000003ffaf01d:  lea    0x7ff(%esi,%eax,1),%ebx
0x000000003ffaf024:  and    $0xfffff800,%ebx
0x000000003ffaf02a:  call   0xf12e6

----------------
IN: 
0x000000003ffaf02f:  cmp    %eax,%ebx
0x000000003ffaf031:  ja     0x3ffaf052

----------------
IN: 
0x000000003ffaf033:  mov    0xf65d0,%eax
0x000000003ffaf038:  cmp    $0xe0000,%ebx
0x000000003ffaf03e:  jae    0x3ffaf045

----------------
IN: 
0x000000003ffaf040:  mov    $0xe0000,%ebx
0x000000003ffaf045:  add    $0x10,%ebx
0x000000003ffaf048:  mov    %ebx,0xc(%eax)
0x000000003ffaf04b:  mov    %ebx,0x8(%eax)
0x000000003ffaf04e:  mov    %esi,%eax
0x000000003ffaf050:  jmp    0x3ffaf054

----------------
IN: 
0x000000003ffaf054:  pop    %ebx
0x000000003ffaf055:  pop    %esi
0x000000003ffaf056:  ret    

----------------
IN: 
0x000000003ffb4859:  mov    %eax,%ebp
0x000000003ffb485b:  test   %eax,%eax
0x000000003ffb485d:  mov    0x24(%esp),%ecx
0x000000003ffb4861:  mov    0x28(%esp),%edx
0x000000003ffb4865:  jne    0x3ffb4878

----------------
IN: 
0x000000003ffb4878:  call   0x3ffb0431

----------------
IN: 
0x000000003ffb0431:  push   %ebp
0x000000003ffb0432:  push   %edi
0x000000003ffb0433:  push   %esi
0x000000003ffb0434:  push   %ebx
0x000000003ffb0435:  mov    %eax,%ebp
0x000000003ffb0437:  mov    %edx,%esi
0x000000003ffb0439:  mov    %ecx,%ebx
0x000000003ffb043b:  call   0xf1b80

----------------
IN: 
0x00000000000f1b80:  mov    %esp,%eax
0x00000000000f1b82:  cmp    $0x100000,%eax
0x00000000000f1b87:  jbe    0xf1b95

----------------
IN: 
0x00000000000f1b95:  mov    $0xf77f4,%ecx
0x00000000000f1b9a:  xor    %edx,%edx
0x00000000000f1b9c:  xor    %eax,%eax
0x00000000000f1b9e:  call   0xf1b45

----------------
IN: 
0x00000000000f1b45:  push   %ebx
0x00000000000f1b46:  push   %ebx
0x00000000000f1b47:  mov    %esp,%ebx
0x00000000000f1b49:  cmp    $0x100000,%ebx
0x00000000000f1b4f:  jbe    0xf1b5d

----------------
IN: 
0x00000000000f1b5d:  sub    $0xf0000,%ecx
0x00000000000f1b63:  pop    %ebx
0x00000000000f1b64:  pop    %ebx
0x00000000000f1b65:  jmp    0xfd265

----------------
IN: 
0x00000000000fd265:  push   %edx
0x00000000000fd266:  push   %ecx
0x00000000000fd267:  mov    $0xd271,%edx
0x00000000000fd26c:  jmp    0xfd21b

----------------
IN: 
0x00000000000fd21b:  mov    %eax,%ecx
0x00000000000fd21d:  mov    $0x30,%eax
0x00000000000fd222:  mov    %eax,%ds

----------------
IN: 
0x00000000000fd224:  mov    %eax,%es

----------------
IN: 
0x00000000000fd226:  mov    %eax,%ss

----------------
IN: 
0x00000000000fd228:  mov    %eax,%fs

----------------
IN: 
0x00000000000fd22a:  mov    %eax,%gs
0x00000000000fd22c:  ljmpw  $0x28,$0xd232

----------------
IN: 
0x00000000000fd232:  mov    %cr0,%eax
0x00000000000fd235:  and    $0xfffffffe,%eax
0x00000000000fd239:  mov    %eax,%cr0

----------------
IN: 
0x00000000000fd23c:  ljmp   $0xf000,$0xd241

----------------
IN: 
0x00000000000fd241:  lidtw  %cs:0x6c28
0x00000000000fd247:  xor    %ax,%ax
0x00000000000fd249:  mov    %ax,%fs
0x00000000000fd24b:  mov    %ax,%gs
0x00000000000fd24d:  mov    %ax,%es
0x00000000000fd24f:  mov    %ax,%ds
0x00000000000fd251:  mov    %ax,%ss

----------------
IN: 
0x00000000000fd253:  mov    %ecx,%eax

----------------
IN: 
0x00000000000fd256:  jmpl   *%edx

----------------
IN: 
0x00000000000fd271:  mov    $0xe000,%edx
0x00000000000fd277:  mov    %dx,%ds
0x00000000000fd279:  movzwl -0x814,%edx
0x00000000000fd27f:  mov    %edx,%ecx
0x00000000000fd282:  shl    $0x4,%ecx
0x00000000000fd286:  mov    %dx,%ss

----------------
IN: 
0x00000000000fd288:  sub    %ecx,%esp

----------------
IN: 
0x00000000000fd28b:  mov    %dx,%ds
0x00000000000fd28d:  pop    %ecx
0x00000000000fd28f:  pop    %edx
0x00000000000fd291:  calll  *%ecx

----------------
IN: 
0x00000000000f77f4:  calll  0xf74e1

----------------
IN: 
0x00000000000f74e1:  mov    %ss,%dx
0x00000000000f74e3:  movzwl %dx,%edx
0x00000000000f74e7:  xor    %eax,%eax
0x00000000000f74ea:  cmp    $0xe000,%edx
0x00000000000f74f1:  jne    0xf7503

----------------
IN: 
0x00000000000f7503:  retl   

----------------
IN: 
0x00000000000f77fa:  test   %eax,%eax
0x00000000000f77fd:  je     0xf780e

----------------
IN: 
0x00000000000f780e:  sti    

----------------
IN: 
0x00000000000f780f:  nop    

Servicing hardware INT=0x08
----------------
IN: 
0x00000000000ffea5:  pushl  $0xe990
0x00000000000ffeab:  jmp    0xfd540

----------------
IN: 
0x00000000000fd540:  cli    
0x00000000000fd541:  cld    
0x00000000000fd542:  push   %ds
0x00000000000fd543:  push   %eax
0x00000000000fd545:  mov    $0xe000,%eax
0x00000000000fd54b:  mov    %ax,%ds
0x00000000000fd54d:  mov    0xf7f0,%eax
0x00000000000fd551:  sub    $0x18,%eax
0x00000000000fd555:  addr32 popl (%eax)
0x00000000000fd559:  addr32 popw 0x4(%eax)
0x00000000000fd55d:  addr32 mov %es,0x6(%eax)
0x00000000000fd561:  addr32 mov %ecx,0x8(%eax)
0x00000000000fd566:  pop    %ecx
0x00000000000fd568:  addr32 mov %edx,0xc(%eax)
0x00000000000fd56d:  addr32 mov %esp,0x10(%eax)
0x00000000000fd572:  addr32 mov %ss,0x14(%eax)
0x00000000000fd576:  mov    %ds,%dx
0x00000000000fd578:  mov    %dx,%ss

----------------
IN: 
0x00000000000fd57a:  mov    %eax,%esp

----------------
IN: 
0x00000000000fd57d:  calll  *%ecx

----------------
IN: 
0x00000000000fe990:  push   %ebp
0x00000000000fe992:  push   %edi
0x00000000000fe994:  push   %esi
0x00000000000fe996:  push   %ebx
0x00000000000fe998:  sub    $0x34,%esp
0x00000000000fe99c:  mov    $0x40,%eax
0x00000000000fe9a2:  mov    %ax,%es
0x00000000000fe9a4:  mov    %es:0x6c,%edx
0x00000000000fe9aa:  inc    %edx
0x00000000000fe9ac:  cmp    $0x1800af,%edx
0x00000000000fe9b3:  jbe    0xfe9ca

----------------
IN: 
0x00000000000fe9ca:  mov    $0x40,%eax
0x00000000000fe9d0:  mov    %ax,%es
0x00000000000fe9d2:  mov    %edx,%es:0x6c
0x00000000000fe9d8:  mov    %ax,%es
0x00000000000fe9da:  mov    %es:0x40,%dl
0x00000000000fe9df:  test   %dl,%dl
0x00000000000fe9e1:  je     0xfea11

----------------
IN: 
0x00000000000fea11:  mov    %cs:0x68f8,%esi
0x00000000000fea17:  test   %esi,%esi
0x00000000000fea1a:  je     0xfeb3c

----------------
IN: 
0x00000000000feb3c:  mov    %cs:0x68f4,%esi
0x00000000000feb42:  test   %esi,%esi
0x00000000000feb45:  je     0xfebaf

----------------
IN: 
0x00000000000febaf:  mov    $0x26,%ecx
0x00000000000febb5:  xor    %edx,%edx
0x00000000000febb8:  addr32 lea 0xe(%esp),%eax
0x00000000000febbe:  calll  0xf7505

----------------
IN: 
0x00000000000f7505:  test   %ecx,%ecx
0x00000000000f7508:  je     0xf7512

----------------
IN: 
0x00000000000f750a:  dec    %ecx
0x00000000000f750c:  addr32 mov %dl,(%eax,%ecx,1)
0x00000000000f7510:  jmp    0xf7505

----------------
IN: 
0x00000000000f7512:  retl   

----------------
IN: 
0x00000000000febc4:  addr32 movw $0x200,0x32(%esp)
0x00000000000febcb:  addr32 mov %cs,0x30(%esp)
0x00000000000febd0:  mov    $0xd34a,%eax
0x00000000000febd6:  addr32 mov %ax,0x2e(%esp)
0x00000000000febdb:  mov    %ss,%dx
0x00000000000febdd:  movzwl %dx,%edx
0x00000000000febe1:  addr32 lea 0xe(%esp),%eax
0x00000000000febe7:  calll  0xf774b

----------------
IN: 
0x00000000000f774b:  push   %edi
0x00000000000f774d:  push   %esi
0x00000000000f774f:  push   %ebx
0x00000000000f7751:  mov    %eax,%ebx
0x00000000000f7754:  mov    %edx,%esi
0x00000000000f7757:  calll  0xf74e1

----------------
IN: 
0x00000000000f74f3:  mov    %esp,%eax
0x00000000000f74f6:  cmp    $0xf7f8,%eax
0x00000000000f74fc:  seta   %al
0x00000000000f74ff:  movzbl %al,%eax
0x00000000000f7503:  retl   

----------------
IN: 
0x00000000000f775d:  test   %eax,%eax
0x00000000000f7760:  je     0xf7778

----------------
IN: 
0x00000000000f7762:  movzwl %si,%edx
0x00000000000f7766:  mov    $0x774b,%ecx
0x00000000000f776c:  mov    %ebx,%eax
0x00000000000f776f:  pop    %ebx
0x00000000000f7771:  pop    %esi
0x00000000000f7773:  pop    %edi
0x00000000000f7775:  jmp    0xf76e9

----------------
IN: 
0x00000000000f76e9:  push   %edi
0x00000000000f76eb:  push   %esi
0x00000000000f76ed:  push   %ebx
0x00000000000f76ef:  push   %ebx
0x00000000000f76f1:  mov    %eax,%ebx
0x00000000000f76f4:  addr32 mov %edx,(%esp)
0x00000000000f76f9:  mov    %ecx,%esi
0x00000000000f76fc:  calll  0xf74e1

----------------
IN: 
0x00000000000f7702:  test   %eax,%eax
0x00000000000f7705:  addr32 mov (%esp),%edx
0x00000000000f770a:  mov    %ebx,%eax
0x00000000000f770d:  jne    0xf7714

----------------
IN: 
0x00000000000f7714:  mov    %esi,%ecx
0x00000000000f7717:  mov    -0x810,%esi
0x00000000000f771c:  mov    %ss,%bx
0x00000000000f771e:  mov    %esp,-0x810
0x00000000000f7723:  addr32 mov -0x4(%esi),%edi
0x00000000000f7728:  mov    %di,%ss

----------------
IN: 
0x00000000000f772a:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x00000000000f772e:  mov    %di,%ds
0x00000000000f7730:  calll  *%ecx

----------------
IN: 
0x00000000000f7778:  mov    %ebx,%eax
0x00000000000f777b:  mov    %esi,%edx
0x00000000000f777e:  calll  0xfd2a8

----------------
IN: 
0x00000000000fd2a8:  push   %ebp
0x00000000000fd2aa:  push   %eax
0x00000000000fd2ac:  push   %edx
0x00000000000fd2ae:  mov    %dx,%ds
0x00000000000fd2b0:  push   %cs
0x00000000000fd2b1:  push   $0xd2ea
0x00000000000fd2b4:  addr32 pushw 0x24(%eax)
0x00000000000fd2b8:  addr32 pushl 0x20(%eax)
0x00000000000fd2bd:  addr32 mov 0x4(%eax),%edi
0x00000000000fd2c2:  addr32 mov 0x8(%eax),%esi
0x00000000000fd2c7:  addr32 mov 0xc(%eax),%ebp
0x00000000000fd2cc:  addr32 mov 0x10(%eax),%ebx
0x00000000000fd2d1:  addr32 mov 0x14(%eax),%edx
0x00000000000fd2d6:  addr32 mov 0x18(%eax),%ecx
0x00000000000fd2db:  addr32 mov 0x2(%eax),%es
0x00000000000fd2df:  addr32 pushl 0x1c(%eax)
0x00000000000fd2e4:  addr32 mov (%eax),%ds
0x00000000000fd2e7:  pop    %eax
0x00000000000fd2e9:  iret   

----------------
IN: 
0x00000000000fd34a:  int    $0x1c

----------------
IN: 
0x00000000000fff53:  iret   

----------------
IN: 
0x00000000000fd34c:  lret   

----------------
IN: 
0x00000000000fd2ea:  pushf  
0x00000000000fd2eb:  cli    
0x00000000000fd2ec:  cld    
0x00000000000fd2ed:  push   %ds
0x00000000000fd2ee:  push   %eax
0x00000000000fd2f0:  addr32 mov 0x8(%esp),%ds
0x00000000000fd2f5:  addr32 mov 0xc(%esp),%eax
0x00000000000fd2fb:  addr32 popl 0x1c(%eax)
0x00000000000fd300:  addr32 popw 0x2(%eax)
0x00000000000fd304:  addr32 popw 0x24(%eax)
0x00000000000fd308:  addr32 mov %edi,0x4(%eax)
0x00000000000fd30d:  addr32 mov %esi,0x8(%eax)
0x00000000000fd312:  addr32 mov %ebp,0xc(%eax)
0x00000000000fd317:  addr32 mov %ebx,0x10(%eax)
0x00000000000fd31c:  addr32 mov %edx,0x14(%eax)
0x00000000000fd321:  addr32 mov %ecx,0x18(%eax)
0x00000000000fd326:  addr32 mov %es,(%eax)
0x00000000000fd329:  mov    %ss,%cx
0x00000000000fd32b:  mov    %cx,%ds
0x00000000000fd32d:  pop    %edx
0x00000000000fd32f:  pop    %eax
0x00000000000fd331:  pop    %ebp
0x00000000000fd333:  retl   

----------------
IN: 
0x00000000000f7784:  pop    %ebx
0x00000000000f7786:  pop    %esi
0x00000000000f7788:  pop    %edi
0x00000000000f778a:  retl   

----------------
IN: 
0x00000000000f7733:  mov    %bx,%ds
0x00000000000f7735:  mov    %bx,%ss

----------------
IN: 
0x00000000000f7737:  mov    -0x810,%esp

----------------
IN: 
0x00000000000f773c:  mov    %esi,-0x810
0x00000000000f7741:  pop    %edx
0x00000000000f7743:  pop    %ebx
0x00000000000f7745:  pop    %esi
0x00000000000f7747:  pop    %edi
0x00000000000f7749:  retl   

----------------
IN: 
0x00000000000febed:  mov    $0x20,%al
0x00000000000febef:  out    %al,$0x20
0x00000000000febf1:  add    $0x34,%esp
0x00000000000febf5:  pop    %ebx
0x00000000000febf7:  pop    %esi
0x00000000000febf9:  pop    %edi
0x00000000000febfb:  pop    %ebp
0x00000000000febfd:  retl   

----------------
IN: 
0x00000000000fd580:  mov    %esp,%eax
0x00000000000fd583:  addr32 mov 0x14(%eax),%ss

----------------
IN: 
0x00000000000fd587:  addr32 mov 0x10(%eax),%esp

----------------
IN: 
0x00000000000fd58c:  addr32 mov 0xc(%eax),%edx
0x00000000000fd591:  addr32 mov 0x8(%eax),%ecx
0x00000000000fd596:  addr32 mov 0x6(%eax),%es
0x00000000000fd59a:  addr32 pushw 0x4(%eax)
0x00000000000fd59e:  addr32 pushl (%eax)
0x00000000000fd5a2:  pop    %eax
0x00000000000fd5a4:  pop    %ds
0x00000000000fd5a5:  iret   

----------------
IN: 
0x00000000000f7810:  pause  

----------------
IN: 
0x00000000000f7812:  cli    
0x00000000000f7813:  cld    
0x00000000000f7814:  retl   

----------------
IN: 
0x00000000000fd294:  mov    %ss,%edx
0x00000000000fd297:  shl    $0x4,%edx
0x00000000000fd29b:  add    %edx,%esp
0x00000000000fd29e:  mov    $0xfd2a7,%edx
0x00000000000fd2a4:  jmp    0xfd1be

----------------
IN: 
0x00000000000fd1be:  mov    %eax,%ecx
0x00000000000fd1c1:  cli    
0x00000000000fd1c2:  cld    
0x00000000000fd1c3:  mov    $0x8f,%eax
0x00000000000fd1c9:  out    %al,$0x70
0x00000000000fd1cb:  in     $0x71,%al
0x00000000000fd1cd:  in     $0x92,%al
0x00000000000fd1cf:  or     $0x2,%al
0x00000000000fd1d1:  out    %al,$0x92
0x00000000000fd1d3:  lidtw  %cs:0x6c20
0x00000000000fd1d9:  lgdtw  %cs:0x6be0
0x00000000000fd1df:  mov    %cr0,%eax
0x00000000000fd1e2:  or     $0x1,%eax
0x00000000000fd1e6:  mov    %eax,%cr0

----------------
IN: 
0x00000000000fd1e9:  ljmpl  $0x8,$0xfd1f1

----------------
IN: 
0x00000000000fd1f1:  mov    $0x10,%eax
0x00000000000fd1f6:  mov    %eax,%ds

----------------
IN: 
0x00000000000fd1f8:  mov    %eax,%es

----------------
IN: 
0x00000000000fd1fa:  mov    %eax,%ss

----------------
IN: 
0x00000000000fd1fc:  mov    %eax,%fs

----------------
IN: 
0x00000000000fd1fe:  mov    %eax,%gs
0x00000000000fd200:  mov    %ecx,%eax
0x00000000000fd202:  jmp    *%edx

----------------
IN: 
0x00000000000fd2a7:  ret    

----------------
IN: 
0x00000000000f1ba3:  mov    $0xf6bd4,%eax
0x00000000000f1ba8:  jmp    0xf105f

----------------
IN: 
0x00000000000f105f:  mov    0x4(%eax),%edx
0x00000000000f1062:  lea    -0x4(%edx),%ecx
0x00000000000f1065:  cmp    %ecx,%eax
0x00000000000f1067:  je     0xf107b

----------------
IN: 
0x00000000000f107b:  ret    

----------------
IN: 
0x000000003ffb0440:  cmp    $0x3,%ebx
0x000000003ffb0443:  jbe    0x3ffb0468

----------------
IN: 
0x000000003ffb0445:  mov    %ebx,%ecx
0x000000003ffb0447:  cmp    $0x800,%ebx
0x000000003ffb044d:  jbe    0x3ffb0454

----------------
IN: 
0x000000003ffb044f:  mov    $0x800,%ecx
0x000000003ffb0454:  shr    $0x2,%ecx
0x000000003ffb0457:  lea    0x0(,%ecx,4),%eax
0x000000003ffb045e:  sub    %eax,%ebx
0x000000003ffb0460:  mov    %ebp,%edi
0x000000003ffb0462:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb0462:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb0464:  mov    %edi,%ebp
0x000000003ffb0466:  jmp    0x3ffb043b

----------------
IN: 
0x000000003ffb043b:  call   0xf1b80

----------------
IN: 
0x000000003ffb0454:  shr    $0x2,%ecx
0x000000003ffb0457:  lea    0x0(,%ecx,4),%eax
0x000000003ffb045e:  sub    %eax,%ebx
0x000000003ffb0460:  mov    %ebp,%edi
0x000000003ffb0462:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb0468:  test   %ebx,%ebx
0x000000003ffb046a:  je     0x3ffb0472

----------------
IN: 
0x000000003ffb0472:  pop    %ebx
0x000000003ffb0473:  pop    %esi
0x000000003ffb0474:  pop    %edi
0x000000003ffb0475:  pop    %ebp
0x000000003ffb0476:  ret    

----------------
IN: 
0x000000003ffb487d:  mov    %ebp,%edi
0x000000003ffb487f:  mov    %esi,%ecx
0x000000003ffb4881:  mov    $0x30,%edx
0x000000003ffb4886:  mov    0x14(%esp),%eax
0x000000003ffb488a:  call   0xf11f0

----------------
IN: 
0x000000003ffb488f:  or     $0xffffffff,%eax
0x000000003ffb4892:  test   %edi,%edi
0x000000003ffb4894:  jne    0x3ffb48aa

----------------
IN: 
0x000000003ffb48aa:  mov    0x20(%esp),%esi
0x000000003ffb48ae:  test   %esi,%esi
0x000000003ffb48b0:  je     0x3ffb48c6

----------------
IN: 
0x000000003ffb48c6:  movzwl 0x1a(%esp),%edx
0x000000003ffb48cb:  mov    0x1c(%esp),%ecx
0x000000003ffb48cf:  mov    %edi,%eax
0x000000003ffb48d1:  call   0x3ffb1c0a

----------------
IN: 
0x000000003ffb1c0a:  push   %ebp
0x000000003ffb1c0b:  push   %edi
0x000000003ffb1c0c:  push   %esi
0x000000003ffb1c0d:  push   %ebx
0x000000003ffb1c0e:  mov    %eax,%esi
0x000000003ffb1c10:  cmpw   $0xaa55,(%eax)
0x000000003ffb1c15:  jne    0x3ffb1c9d

----------------
IN: 
0x000000003ffb1c1b:  mov    %edx,%edi
0x000000003ffb1c1d:  mov    %ecx,%ebp
0x000000003ffb1c1f:  call   0xf2793

----------------
IN: 
0x00000000000f2793:  push   %esi
0x00000000000f2794:  push   %ebx
0x00000000000f2795:  sub    $0x10,%esp
0x00000000000f2798:  mov    %eax,%esi
0x00000000000f279a:  movzbl 0x2(%eax),%ebx
0x00000000000f279e:  xor    %edx,%edx
0x00000000000f27a0:  test   %bl,%bl
0x00000000000f27a2:  je     0xf27de

----------------
IN: 
0x00000000000f27a4:  shl    $0x9,%ebx
0x00000000000f27a7:  mov    %ebx,%edx
0x00000000000f27a9:  call   0xf152e

----------------
IN: 
0x00000000000f27ae:  mov    $0x1,%edx
0x00000000000f27b3:  test   %al,%al
0x00000000000f27b5:  je     0xf27de

----------------
IN: 
0x00000000000f27de:  mov    %edx,%eax
0x00000000000f27e0:  add    $0x10,%esp
0x00000000000f27e3:  pop    %ebx
0x00000000000f27e4:  pop    %esi
0x00000000000f27e5:  ret    

----------------
IN: 
0x000000003ffb1c24:  test   %eax,%eax
0x000000003ffb1c26:  je     0x3ffb1c9d

----------------
IN: 
0x000000003ffb1c28:  movzbl 0x2(%esi),%eax
0x000000003ffb1c2c:  shl    $0x9,%eax
0x000000003ffb1c2f:  call   0x3ffaf015

----------------
IN: 
0x000000003ffb1c34:  mov    %eax,%ebx
0x000000003ffb1c36:  mov    $0x3ffbe3d7,%edx
0x000000003ffb1c3b:  mov    $0x81,%eax
0x000000003ffb1c40:  test   %ebx,%ebx
0x000000003ffb1c42:  je     0x3ffb1c98

----------------
IN: 
0x000000003ffb1c44:  cmp    %esi,%ebx
0x000000003ffb1c46:  je     0x3ffb1c58

----------------
IN: 
0x000000003ffb1c58:  test   %ebp,%ebp
0x000000003ffb1c5a:  jne    0x3ffb1c6e

----------------
IN: 
0x000000003ffb1c6e:  movzwl %di,%ecx
0x000000003ffb1c71:  mov    $0x3,%edx
0x000000003ffb1c76:  mov    %ebx,%eax
0x000000003ffb1c78:  call   0xf270e

----------------
IN: 
0x00000000000f270e:  push   %edi
0x00000000000f270f:  push   %esi
0x00000000000f2710:  push   %ebx
0x00000000000f2711:  sub    $0x34,%esp
0x00000000000f2714:  mov    %eax,%ebx
0x00000000000f2716:  mov    %edx,%esi
0x00000000000f2718:  mov    %ecx,%edi
0x00000000000f271a:  shr    $0x4,%ebx
0x00000000000f271d:  mov    %edx,0x8(%esp)
0x00000000000f2721:  movzwl %bx,%eax
0x00000000000f2724:  mov    %eax,0x4(%esp)
0x00000000000f2728:  movl   $0xf45d1,(%esp)
0x00000000000f272f:  call   0xf1cc0

----------------
IN: 
0x00000000000f2734:  mov    $0x26,%ecx
0x00000000000f2739:  xor    %edx,%edx
0x00000000000f273b:  lea    0xe(%esp),%eax
0x00000000000f273f:  call   0xf118c

----------------
IN: 
0x00000000000f2744:  movw   $0x200,0x32(%esp)
0x00000000000f274b:  mov    %di,0x2a(%esp)
0x00000000000f2750:  movw   $0xffff,0x1e(%esp)
0x00000000000f2757:  movw   $0xffff,0x22(%esp)
0x00000000000f275e:  movw   $0xf000,0x10(%esp)
0x00000000000f2765:  mov    $0xf6ae0,%eax
0x00000000000f276a:  mov    %ax,0x12(%esp)
0x00000000000f276f:  mov    %si,0x2e(%esp)
0x00000000000f2774:  mov    %bx,0x30(%esp)
0x00000000000f2779:  call   0xf173c

----------------
IN: 
0x00000000000f173c:  cmpl   $0x2,0xf65d8
0x00000000000f1743:  jne    0xf1776

----------------
IN: 
0x00000000000f1776:  ret    

----------------
IN: 
0x00000000000f277e:  lea    0xe(%esp),%eax
0x00000000000f2782:  call   0xf1b6a

----------------
IN: 
0x00000000000f1b6a:  movzwl 0xef7ec,%edx
0x00000000000f1b71:  imul   $0xfffffff0,%edx,%ecx
0x00000000000f1b74:  add    %ecx,%eax
0x00000000000f1b76:  mov    $0xf774b,%ecx
0x00000000000f1b7b:  jmp    0xf1b45

----------------
IN: 
0x00000000000c0003:  jmp    0xc4cc9

----------------
IN: 
0x00000000000c4cc9:  cli    
0x00000000000c4cca:  cld    
0x00000000000c4ccb:  push   %eax
0x00000000000c4ccd:  push   %ecx
0x00000000000c4ccf:  push   %edx
0x00000000000c4cd1:  push   %ebx
0x00000000000c4cd3:  push   %ebp
0x00000000000c4cd5:  push   %esi
0x00000000000c4cd7:  push   %edi
0x00000000000c4cd9:  push   %es
0x00000000000c4cda:  push   %ds
0x00000000000c4cdb:  mov    %ss,%ax
0x00000000000c4cdd:  mov    %ax,%ds
0x00000000000c4cdf:  mov    %esp,%ebx
0x00000000000c4ce2:  movzwl %sp,%esp
0x00000000000c4ce6:  mov    %esp,%eax
0x00000000000c4ce9:  mov    $0x8000,%ecx
0x00000000000c4cef:  addr32 lea (%ecx,%ecx,1),%ecx
0x00000000000c4cf4:  cmp    $0x10000,%ecx
0x00000000000c4cfb:  jne    0xc4c65

----------------
IN: 
0x00000000000c4cff:  push   %ax
0x00000000000c4d00:  call   0xc2f5e

----------------
IN: 
0x00000000000c2f5e:  push   %ebp
0x00000000000c2f60:  mov    %esp,%ebp
0x00000000000c2f63:  push   %edi
0x00000000000c2f65:  push   %esi
0x00000000000c2f67:  push   %ebx
0x00000000000c2f69:  sub    $0x10,%esp
0x00000000000c2f6d:  mov    %eax,%ebx
0x00000000000c2f70:  pushl  $0x9038
0x00000000000c2f76:  pushl  $0x4fc6
0x00000000000c2f7c:  push   %ax
0x00000000000c2f7d:  call   0xc274b

----------------
IN: 
0x00000000000c274b:  push   %ebp
0x00000000000c274d:  mov    %esp,%ebp
0x00000000000c2750:  push   %edi
0x00000000000c2752:  push   %esi
0x00000000000c2754:  push   %ebx
0x00000000000c2756:  sub    $0x8,%esp
0x00000000000c275a:  addr32 lea 0xc(%ebp),%ebx
0x00000000000c275f:  addr32 mov 0x8(%ebp),%eax
0x00000000000c2764:  addr32 mov %cs:(%eax),%al
0x00000000000c2768:  test   %al,%al
0x00000000000c276a:  je     0xc2949

----------------
IN: 
0x00000000000c276e:  cmp    $0x25,%al
0x00000000000c2770:  je     0xc277a

----------------
IN: 
0x00000000000c2772:  mov    %cs:-0x6faa,%dx
0x00000000000c2777:  jmp    0xc2931

----------------
IN: 
0x00000000000c2931:  out    %al,(%dx)
0x00000000000c2932:  addr32 mov 0x8(%ebp),%edi
0x00000000000c2937:  jmp    0xc293c

----------------
IN: 
0x00000000000c293c:  addr32 lea 0x1(%edi),%eax
0x00000000000c2941:  addr32 mov %eax,0x8(%ebp)
0x00000000000c2946:  jmp    0xc275f

----------------
IN: 
0x00000000000c275f:  addr32 mov 0x8(%ebp),%eax
0x00000000000c2764:  addr32 mov %cs:(%eax),%al
0x00000000000c2768:  test   %al,%al
0x00000000000c276a:  je     0xc2949

----------------
IN: 
0x00000000000c277a:  addr32 mov 0x8(%ebp),%eax
0x00000000000c277f:  addr32 lea 0x1(%eax),%edi
0x00000000000c2784:  addr32 movb $0x20,-0x11(%ebp)
0x00000000000c2789:  xor    %edx,%edx
0x00000000000c278c:  addr32 mov %cs:(%edi),%al
0x00000000000c2790:  addr32 mov %al,-0x10(%ebp)
0x00000000000c2794:  mov    %eax,%esi
0x00000000000c2797:  sub    $0x30,%esi
0x00000000000c279b:  mov    %esi,%ecx
0x00000000000c279e:  cmp    $0x9,%cl
0x00000000000c27a1:  ja     0xc27ca

----------------
IN: 
0x00000000000c27ca:  mov    %edi,%esi
0x00000000000c27cd:  xor    %ecx,%ecx
0x00000000000c27d0:  cmp    $0x6c,%al
0x00000000000c27d2:  jne    0xc27ea

----------------
IN: 
0x00000000000c27ea:  cmp    $0x64,%al
0x00000000000c27ec:  je     0xc2843

----------------
IN: 
0x00000000000c27ee:  jg     0xc280d

----------------
IN: 
0x00000000000c280d:  cmp    $0x73,%al
0x00000000000c280f:  je     0xc290f

----------------
IN: 
0x00000000000c290f:  addr32 lea 0x4(%ebx),%esi
0x00000000000c2914:  addr32 mov (%ebx),%ecx
0x00000000000c2918:  addr32 mov %cs:(%ecx),%al
0x00000000000c291c:  test   %al,%al
0x00000000000c291e:  je     0xc2939

----------------
IN: 
0x00000000000c2920:  mov    %cs:-0x6faa,%dx
0x00000000000c2925:  out    %al,(%dx)
0x00000000000c2926:  inc    %ecx
0x00000000000c2928:  jmp    0xc2918

----------------
IN: 
0x00000000000c2918:  addr32 mov %cs:(%ecx),%al
0x00000000000c291c:  test   %al,%al
0x00000000000c291e:  je     0xc2939

----------------
IN: 
0x00000000000c2939:  mov    %esi,%ebx
0x00000000000c293c:  addr32 lea 0x1(%edi),%eax
0x00000000000c2941:  addr32 mov %eax,0x8(%ebp)
0x00000000000c2946:  jmp    0xc275f

----------------
IN: 
0x00000000000c2949:  pop    %eax
0x00000000000c294b:  pop    %edx
0x00000000000c294d:  pop    %ebx
0x00000000000c294f:  pop    %esi
0x00000000000c2951:  pop    %edi
0x00000000000c2953:  pop    %ebp
0x00000000000c2955:  ret    $0x2

----------------
IN: 
0x00000000000c2f80:  pop    %eax
0x00000000000c2f82:  pop    %edx
0x00000000000c2f84:  pushl  $0x4ed8
0x00000000000c2f8a:  pushl  $0x4fe5
0x00000000000c2f90:  push   %ax
0x00000000000c2f91:  call   0xc274b

----------------
IN: 
0x00000000000c2f94:  pop    %ecx
0x00000000000c2f96:  pop    %esi
0x00000000000c2f98:  mov    %ebx,%eax
0x00000000000c2f9b:  push   %ax
0x00000000000c2f9c:  call   0xc2958

----------------
IN: 
0x00000000000c2958:  push   %ebp
0x00000000000c295a:  mov    %esp,%ebp
0x00000000000c295d:  push   %ebx
0x00000000000c295f:  mov    %eax,%ebx
0x00000000000c2962:  test   %eax,%eax
0x00000000000c2965:  jne    0xc2975

----------------
IN: 
0x00000000000c2975:  mov    %ss,%ax
0x00000000000c2977:  movzwl %ax,%eax
0x00000000000c297b:  push   %eax
0x00000000000c297d:  addr32 movzwl 0x2(%ebx),%eax
0x00000000000c2983:  push   %eax
0x00000000000c2985:  addr32 movzwl (%ebx),%eax
0x00000000000c298a:  push   %eax
0x00000000000c298c:  addr32 pushl 0x14(%ebx)
0x00000000000c2991:  addr32 pushl 0x18(%ebx)
0x00000000000c2996:  addr32 pushl 0x10(%ebx)
0x00000000000c299b:  addr32 pushl 0x1c(%ebx)
0x00000000000c29a0:  pushl  $0x4ee9
0x00000000000c29a6:  push   %ax
0x00000000000c29a7:  call   0xc274b

----------------
IN: 
0x00000000000c27a3:  cmp    $0x30,%al
0x00000000000c27a5:  jne    0xc27ac

----------------
IN: 
0x00000000000c27a7:  test   %edx,%edx
0x00000000000c27aa:  je     0xc27be

----------------
IN: 
0x00000000000c27be:  addr32 movb $0x30,-0x11(%ebp)
0x00000000000c27c3:  xor    %edx,%edx
0x00000000000c27c6:  inc    %edi
0x00000000000c27c8:  jmp    0xc278c

----------------
IN: 
0x00000000000c278c:  addr32 mov %cs:(%edi),%al
0x00000000000c2790:  addr32 mov %al,-0x10(%ebp)
0x00000000000c2794:  mov    %eax,%esi
0x00000000000c2797:  sub    $0x30,%esi
0x00000000000c279b:  mov    %esi,%ecx
0x00000000000c279e:  cmp    $0x9,%cl
0x00000000000c27a1:  ja     0xc27ca

----------------
IN: 
0x00000000000c27ac:  imul   $0xa,%edx,%edx
0x00000000000c27b0:  addr32 movsbl -0x10(%ebp),%ecx
0x00000000000c27b6:  addr32 lea -0x30(%edx,%ecx,1),%edx
0x00000000000c27bc:  jmp    0xc27c6

----------------
IN: 
0x00000000000c27c6:  inc    %edi
0x00000000000c27c8:  jmp    0xc278c

----------------
IN: 
0x00000000000c2813:  jg     0xc2838

----------------
IN: 
0x00000000000c2838:  cmp    $0x75,%al
0x00000000000c283a:  je     0xc286a

----------------
IN: 
0x00000000000c283c:  cmp    $0x78,%al
0x00000000000c283e:  je     0xc2883

----------------
IN: 
0x00000000000c2883:  addr32 mov (%ebx),%eax
0x00000000000c2887:  addr32 mov %eax,-0x10(%ebp)
0x00000000000c288c:  test   %cl,%cl
0x00000000000c288e:  addr32 movsbl -0x11(%ebp),%ecx
0x00000000000c2894:  je     0xc28be

----------------
IN: 
0x00000000000c28be:  addr32 lea 0x4(%ebx),%esi
0x00000000000c28c3:  addr32 mov -0x10(%ebp),%eax
0x00000000000c28c8:  push   %ax
0x00000000000c28c9:  call   0xc11c9

----------------
IN: 
0x00000000000c11c9:  push   %ebp
0x00000000000c11cb:  mov    %esp,%ebp
0x00000000000c11ce:  push   %edi
0x00000000000c11d0:  push   %esi
0x00000000000c11d2:  push   %ebx
0x00000000000c11d4:  mov    %eax,%edi
0x00000000000c11d7:  mov    %cl,%al
0x00000000000c11d9:  mov    %edi,%ecx
0x00000000000c11dc:  mov    $0x1,%ebx
0x00000000000c11e2:  shr    $0x4,%ecx
0x00000000000c11e6:  je     0xc11ec

----------------
IN: 
0x00000000000c11e8:  inc    %ebx
0x00000000000c11ea:  jmp    0xc11e2

----------------
IN: 
0x00000000000c11e2:  shr    $0x4,%ecx
0x00000000000c11e6:  je     0xc11ec

----------------
IN: 
0x00000000000c11ec:  mov    %edx,%esi
0x00000000000c11ef:  sub    %ebx,%esi
0x00000000000c11f2:  test   %esi,%esi
0x00000000000c11f5:  jle    0xc1201

----------------
IN: 
0x00000000000c11f7:  mov    %cs:-0x6faa,%dx
0x00000000000c11fc:  out    %al,(%dx)
0x00000000000c11fd:  dec    %esi
0x00000000000c11ff:  jmp    0xc11f2

----------------
IN: 
0x00000000000c11f2:  test   %esi,%esi
0x00000000000c11f5:  jle    0xc1201

----------------
IN: 
0x00000000000c1201:  mov    %ebx,%edx
0x00000000000c1204:  mov    %edi,%eax
0x00000000000c1207:  pop    %ebx
0x00000000000c1209:  pop    %esi
0x00000000000c120b:  pop    %edi
0x00000000000c120d:  pop    %ebp
0x00000000000c120f:  jmp    0xc1128

----------------
IN: 
0x00000000000c1128:  push   %ebp
0x00000000000c112a:  mov    %esp,%ebp
0x00000000000c112d:  push   %ebx
0x00000000000c112f:  mov    %eax,%ebx
0x00000000000c1132:  cmp    $0x4,%edx
0x00000000000c1136:  je     0xc118e

----------------
IN: 
0x00000000000c1138:  jg     0xc1148

----------------
IN: 
0x00000000000c113a:  cmp    $0x2,%edx
0x00000000000c113e:  je     0xc11ac

----------------
IN: 
0x00000000000c11ac:  mov    %ebx,%eax
0x00000000000c11af:  shr    $0x4,%eax
0x00000000000c11b3:  and    $0xf,%eax
0x00000000000c11b7:  push   %ax
0x00000000000c11b8:  call   0xc1105

----------------
IN: 
0x00000000000c1105:  push   %ebp
0x00000000000c1107:  mov    %esp,%ebp
0x00000000000c110a:  mov    %eax,%edx
0x00000000000c110d:  addr32 lea 0x57(%eax),%eax
0x00000000000c1112:  cmp    $0x9,%edx
0x00000000000c1116:  ja     0xc111d

----------------
IN: 
0x00000000000c1118:  addr32 lea 0x30(%edx),%eax
0x00000000000c111d:  mov    %cs:-0x6faa,%dx
0x00000000000c1122:  out    %al,(%dx)
0x00000000000c1123:  pop    %ebp
0x00000000000c1125:  ret    $0x2

----------------
IN: 
0x00000000000c11bb:  mov    %ebx,%eax
0x00000000000c11be:  and    $0xf,%eax
0x00000000000c11c2:  pop    %ebx
0x00000000000c11c4:  pop    %ebp
0x00000000000c11c6:  jmp    0xc1105

----------------
IN: 
0x00000000000c28cc:  jmp    0xc2939

----------------
IN: 
0x00000000000c118e:  mov    %ebx,%eax
0x00000000000c1191:  shr    $0xc,%eax
0x00000000000c1195:  and    $0xf,%eax
0x00000000000c1199:  push   %ax
0x00000000000c119a:  call   0xc1105

----------------
IN: 
0x00000000000c111d:  mov    %cs:-0x6faa,%dx
0x00000000000c1122:  out    %al,(%dx)
0x00000000000c1123:  pop    %ebp
0x00000000000c1125:  ret    $0x2

----------------
IN: 
0x00000000000c119d:  mov    %ebx,%eax
0x00000000000c11a0:  shr    $0x8,%eax
0x00000000000c11a4:  and    $0xf,%eax
0x00000000000c11a8:  push   %ax
0x00000000000c11a9:  call   0xc1105

----------------
IN: 
0x00000000000c1140:  jg     0xc119d

----------------
IN: 
0x00000000000c1142:  dec    %edx
0x00000000000c1144:  je     0xc11bb

----------------
IN: 
0x00000000000c29aa:  add    $0x20,%esp
0x00000000000c29ae:  addr32 movzwl 0x24(%ebx),%eax
0x00000000000c29b4:  push   %eax
0x00000000000c29b6:  addr32 movzwl 0x20(%ebx),%eax
0x00000000000c29bc:  push   %eax
0x00000000000c29be:  addr32 movzwl 0x22(%ebx),%eax
0x00000000000c29c4:  push   %eax
0x00000000000c29c6:  addr32 lea 0x26(%ebx),%eax
0x00000000000c29cb:  push   %eax
0x00000000000c29cd:  addr32 pushl 0xc(%ebx)
0x00000000000c29d2:  addr32 pushl 0x4(%ebx)
0x00000000000c29d7:  addr32 pushl 0x8(%ebx)
0x00000000000c29dc:  pushl  $0x4f24
0x00000000000c29e2:  push   %ax
0x00000000000c29e3:  call   0xc274b

----------------
IN: 
0x00000000000c29e6:  add    $0x20,%esp
0x00000000000c29ea:  addr32 mov -0x4(%ebp),%ebx
0x00000000000c29ef:  mov    %ebp,%esp
0x00000000000c29f2:  pop    %ebp
0x00000000000c29f4:  ret    $0x2

----------------
IN: 
0x00000000000c2f9f:  mov    %cs:0x88b8,%eax
0x00000000000c2fa4:  test   %eax,%eax
0x00000000000c2fa7:  jne    0xc2ff1

----------------
IN: 
0x00000000000c2fa9:  addr32 movzwl 0x1c(%ebx),%ebx
0x00000000000c2faf:  mov    %ebx,%ecx
0x00000000000c2fb2:  shl    $0x8,%ecx
0x00000000000c2fb6:  or     $0x80000000,%ecx
0x00000000000c2fbd:  mov    $0xcf8,%edx
0x00000000000c2fc3:  mov    %ecx,%eax
0x00000000000c2fc6:  out    %eax,(%dx)
0x00000000000c2fc8:  mov    $0xfc,%dl
0x00000000000c2fca:  in     (%dx),%ax
0x00000000000c2fcb:  mov    %cs:-0x7738,%si
0x00000000000c2fd0:  cmp    %si,%ax
0x00000000000c2fd2:  jne    0xc2ff1

----------------
IN: 
0x00000000000c2fd4:  mov    $0xf8,%dl
0x00000000000c2fd6:  mov    %ecx,%eax
0x00000000000c2fd9:  out    %eax,(%dx)
0x00000000000c2fdb:  mov    $0xfe,%dl
0x00000000000c2fdd:  in     (%dx),%ax
0x00000000000c2fde:  mov    %cs:-0x7736,%cx
0x00000000000c2fe3:  cmp    %cx,%ax
0x00000000000c2fe5:  jne    0xc2ff1

----------------
IN: 
0x00000000000c2fe7:  mov    %cs,%ax
0x00000000000c2fe9:  mov    %ax,%es
0x00000000000c2feb:  mov    %ebx,%es:-0x7744
0x00000000000c2ff1:  mov    $0x3c2,%edx
0x00000000000c2ff7:  mov    $0xc3,%al
0x00000000000c2ff9:  out    %al,(%dx)
0x00000000000c2ffa:  mov    $0xc4,%dl
0x00000000000c2ffc:  mov    $0x204,%eax
0x00000000000c3002:  out    %ax,(%dx)
0x00000000000c3003:  addr32 mov %edx,-0x10(%ebp)
0x00000000000c3008:  pushl  $0x4ff0
0x00000000000c300e:  push   %ax
0x00000000000c300f:  call   0xc274b

----------------
IN: 
0x00000000000c3012:  pop    %edi
0x00000000000c3014:  mov    $0xffff9206,%eax
0x00000000000c301a:  addr32 mov -0x10(%ebp),%edx
0x00000000000c301f:  out    %ax,(%dx)
0x00000000000c3020:  mov    $0x6,%al
0x00000000000c3022:  out    %al,(%dx)
0x00000000000c3023:  mov    $0x3c5,%ebx
0x00000000000c3029:  mov    %ebx,%edx
0x00000000000c302c:  in     (%dx),%al
0x00000000000c302d:  cmp    $0x12,%al
0x00000000000c302f:  jne    0xc30fc

----------------
IN: 
0x00000000000c3033:  pushl  $0x4ffd
0x00000000000c3039:  push   %ax
0x00000000000c303a:  call   0xc274b

----------------
IN: 
0x00000000000c303d:  pop    %esi
0x00000000000c303f:  mov    $0x3c4,%ecx
0x00000000000c3045:  mov    $0xf,%al
0x00000000000c3047:  mov    %ecx,%edx
0x00000000000c304a:  out    %al,(%dx)
0x00000000000c304b:  mov    %ebx,%edx
0x00000000000c304e:  in     (%dx),%al
0x00000000000c304f:  and    $0x18,%eax
0x00000000000c3053:  shl    $0x8,%eax
0x00000000000c3057:  or     $0xa,%eax
0x00000000000c305b:  mov    %ecx,%edx
0x00000000000c305e:  out    %ax,(%dx)
0x00000000000c305f:  mov    $0x7,%eax
0x00000000000c3065:  out    %ax,(%dx)
0x00000000000c3066:  mov    $0xce,%dl
0x00000000000c3068:  mov    $0x431,%eax
0x00000000000c306e:  out    %ax,(%dx)
0x00000000000c306f:  mov    $0x31,%eax
0x00000000000c3075:  out    %ax,(%dx)
0x00000000000c3076:  mov    %cs:0x88b8,%eax
0x00000000000c307b:  test   %eax,%eax
0x00000000000c307e:  jne    0xc310b

----------------
IN: 
0x00000000000c3082:  mov    %cs:-0x7744,%edx
0x00000000000c3088:  test   %edx,%edx
0x00000000000c308b:  js     0xc30ab

----------------
IN: 
0x00000000000c308d:  movzwl %dx,%eax
0x00000000000c3091:  shl    $0x8,%eax
0x00000000000c3095:  or     $0x80000010,%eax
0x00000000000c309b:  mov    $0xcf8,%edx
0x00000000000c30a1:  out    %eax,(%dx)
0x00000000000c30a3:  mov    $0xfc,%dl
0x00000000000c30a5:  in     (%dx),%eax
0x00000000000c30a7:  and    $0xfffffff0,%eax
0x00000000000c30ab:  mov    %cs,%dx
0x00000000000c30ad:  mov    %dx,%es
0x00000000000c30af:  mov    %eax,%es:0x6298
0x00000000000c30b4:  mov    $0x3c4,%edx
0x00000000000c30ba:  mov    $0xf,%al
0x00000000000c30bc:  out    %al,(%dx)
0x00000000000c30bd:  mov    $0xc5,%dl
0x00000000000c30bf:  in     (%dx),%al
0x00000000000c30c0:  mov    %al,%cl
0x00000000000c30c2:  shr    $0x3,%cl
0x00000000000c30c5:  and    $0x3,%ecx
0x00000000000c30c9:  cmp    $0x3,%cl
0x00000000000c30cc:  jne    0xc30d4

----------------
IN: 
0x00000000000c30ce:  mov    $0x40,%bl
0x00000000000c30d0:  test   %al,%al
0x00000000000c30d2:  js     0xc30dd

----------------
IN: 
0x00000000000c30dd:  mov    %cs,%dx
0x00000000000c30df:  mov    %dx,%es
0x00000000000c30e1:  movzbl %bl,%eax
0x00000000000c30e5:  shl    $0x10,%eax
0x00000000000c30e9:  mov    %eax,%es:0x62a0
0x00000000000c30ee:  mov    %dx,%es
0x00000000000c30f0:  mov    $0x10,%eax
0x00000000000c30f6:  mov    %ax,%es:0x6294
0x00000000000c30fa:  jmp    0xc310b

----------------
IN: 
0x00000000000c310b:  mov    %cs:0x88b8,%eax
0x00000000000c3110:  test   %eax,%eax
0x00000000000c3113:  jne    0xc347f

----------------
IN: 
0x00000000000c3117:  mov    $0x40,%eax
0x00000000000c311d:  mov    %ax,%es
0x00000000000c311f:  mov    %es:0x10,%dx
0x00000000000c3124:  mov    %ax,%es
0x00000000000c3126:  and    $0xffffffcf,%edx
0x00000000000c312a:  or     $0x20,%edx
0x00000000000c312e:  mov    %dx,%es:0x10
0x00000000000c3133:  mov    %ax,%es
0x00000000000c3135:  mov    $0x10,%edx
0x00000000000c313b:  mov    %dx,%es:0x85
0x00000000000c3140:  mov    %ax,%es
0x00000000000c3142:  mov    $0x60,%dl
0x00000000000c3144:  mov    %dl,%es:0x87
0x00000000000c3149:  mov    %ax,%es
0x00000000000c314b:  mov    $0xf9,%dl
0x00000000000c314d:  mov    %dl,%es:0x88
0x00000000000c3152:  mov    %ax,%es
0x00000000000c3154:  mov    $0x51,%dl
0x00000000000c3156:  mov    %dl,%es:0x89
0x00000000000c315b:  mov    %ax,%es
0x00000000000c315d:  mov    $0x9,%al
0x00000000000c315f:  mov    %al,%es:0x65
0x00000000000c3163:  mov    %cs,%dx
0x00000000000c3165:  mov    %edx,%ecx
0x00000000000c3168:  shl    $0x10,%ecx
0x00000000000c316c:  mov    $0x88dc,%eax
0x00000000000c3172:  movzwl %ax,%eax
0x00000000000c3176:  or     %ecx,%eax
0x00000000000c3179:  mov    %dx,%es
0x00000000000c317b:  mov    %eax,%es:0x901c
0x00000000000c3180:  addr32 movl $0x88dc,-0x10(%ebp)
0x00000000000c3189:  addr32 movl $0x0,-0x14(%ebp)
0x00000000000c3192:  addr32 cmpl $0x1d,-0x14(%ebp)
0x00000000000c3198:  je     0xc3323

----------------
IN: 
0x00000000000c319c:  addr32 mov -0x14(%ebp),%eax
0x00000000000c31a1:  addr32 mov %cs:0x51e8(%eax),%dl
0x00000000000c31a9:  movzbl %dl,%edx
0x00000000000c31ad:  mov    $0x5848,%eax
0x00000000000c31b3:  test   %edx,%edx
0x00000000000c31b6:  je     0xc3315

----------------
IN: 
0x00000000000c3315:  addr32 incl -0x14(%ebp)
0x00000000000c331a:  addr32 addl $0x40,-0x10(%ebp)
0x00000000000c3320:  jmp    0xc3192

----------------
IN: 
0x00000000000c3192:  addr32 cmpl $0x1d,-0x14(%ebp)
0x00000000000c3198:  je     0xc3323

----------------
IN: 
0x00000000000c31ba:  cmp    $0x5b08,%eax
0x00000000000c31c0:  je     0xc3315

----------------
IN: 
0x00000000000c31c4:  mov    %eax,%ebx
0x00000000000c31c7:  addr32 mov %cs:(%eax),%cx
0x00000000000c31cb:  addr32 lea 0x2c(%eax),%eax
0x00000000000c31d0:  movzwl %cx,%ecx
0x00000000000c31d4:  cmp    %edx,%ecx
0x00000000000c31d7:  jne    0xc31ba

----------------
IN: 
0x00000000000c31d9:  cmp    $0xfffffffe,%ebx
0x00000000000c31dd:  je     0xc3315

----------------
IN: 
0x00000000000c31e1:  addr32 mov %cs:0x4(%ebx),%si
0x00000000000c31e6:  movzwl %si,%eax
0x00000000000c31ea:  addr32 mov %eax,-0x18(%ebp)
0x00000000000c31ef:  addr32 mov %cs:0x6(%ebx),%ax
0x00000000000c31f4:  addr32 mov %ax,-0x1c(%ebp)
0x00000000000c31f8:  movzwl %ax,%ecx
0x00000000000c31fc:  addr32 mov %cs:0x2(%ebx),%dl
0x00000000000c3201:  addr32 mov %dl,-0x1a(%ebp)
0x00000000000c3205:  addr32 mov %cs:0xa(%ebx),%al
0x00000000000c320a:  addr32 mov %al,-0x19(%ebp)
0x00000000000c320e:  test   %dl,%dl
0x00000000000c3210:  jne    0xc322a

----------------
IN: 
0x00000000000c322a:  addr32 mov %cs:0x9(%ebx),%al
0x00000000000c322f:  mov    %cs,%si
0x00000000000c3231:  mov    %si,%es
0x00000000000c3233:  movzbl %al,%edi
0x00000000000c3237:  addr32 mov -0x18(%ebp),%eax
0x00000000000c323c:  cltd   
0x00000000000c323e:  idiv   %edi
0x00000000000c3241:  addr32 mov -0x10(%ebp),%edi
0x00000000000c3246:  addr32 mov %al,%es:(%edi)
0x00000000000c324a:  mov    %si,%es
0x00000000000c324c:  addr32 movzbl -0x19(%ebp),%esi
0x00000000000c3252:  mov    %ecx,%eax
0x00000000000c3255:  cltd   
0x00000000000c3257:  idiv   %esi
0x00000000000c325a:  dec    %eax
0x00000000000c325c:  addr32 mov %al,%es:0x1(%edi)
0x00000000000c3261:  mov    %cs,%si
0x00000000000c3263:  mov    %si,%es
0x00000000000c3265:  addr32 mov -0x10(%ebp),%edi
0x00000000000c326a:  addr32 mov -0x19(%ebp),%al
0x00000000000c326e:  addr32 mov %al,%es:0x2(%edi)
0x00000000000c3273:  addr32 movzbl -0x1a(%ebp),%eax
0x00000000000c3279:  addr32 mov -0x18(%ebp),%edx
0x00000000000c327e:  push   %ax
0x00000000000c327f:  call   0xc0025

----------------
IN: 
0x00000000000c0025:  push   %ebp
0x00000000000c0027:  mov    %esp,%ebp
0x00000000000c002a:  push   %ebx
0x00000000000c002c:  test   %al,%al
0x00000000000c002e:  je     0xc004f

----------------
IN: 
0x00000000000c0030:  mov    $0x4000,%ebx
0x00000000000c0036:  dec    %al
0x00000000000c0038:  je     0xc0061

----------------
IN: 
0x00000000000c0061:  mov    %ebx,%eax
0x00000000000c0064:  pop    %ebx
0x00000000000c0066:  pop    %ebp
0x00000000000c0068:  ret    $0x2

----------------
IN: 
0x00000000000c3282:  mov    %esi,%edx
0x00000000000c3285:  mov    %si,%es
0x00000000000c3287:  addr32 mov %ax,%es:0x3(%edi)
0x00000000000c328c:  addr32 mov %cs:0x18(%ebx),%esi
0x00000000000c3292:  mov    %dx,%es
0x00000000000c3294:  add    $0x5,%edi
0x00000000000c3298:  mov    $0x4,%ecx
0x00000000000c329e:  mov    %ds,%ax
0x00000000000c32a0:  mov    %dx,%ds
0x00000000000c32a2:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32a2:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32a4:  mov    %ax,%ds
0x00000000000c32a6:  addr32 mov %cs:0x1c(%ebx),%al
0x00000000000c32ab:  mov    %cs,%dx
0x00000000000c32ad:  mov    %dx,%es
0x00000000000c32af:  addr32 mov -0x10(%ebp),%edi
0x00000000000c32b4:  addr32 mov %al,%es:0x9(%edi)
0x00000000000c32b9:  addr32 mov %cs:0x20(%ebx),%esi
0x00000000000c32bf:  mov    %dx,%es
0x00000000000c32c1:  add    $0xa,%edi
0x00000000000c32c5:  mov    $0x19,%ecx
0x00000000000c32cb:  mov    %ds,%ax
0x00000000000c32cd:  mov    %dx,%ds
0x00000000000c32cf:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32cf:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32d1:  mov    %ax,%ds
0x00000000000c32d3:  addr32 mov %cs:0x24(%ebx),%esi
0x00000000000c32d9:  mov    %cs,%dx
0x00000000000c32db:  mov    %dx,%es
0x00000000000c32dd:  addr32 mov -0x10(%ebp),%edi
0x00000000000c32e2:  add    $0x23,%edi
0x00000000000c32e6:  mov    $0x14,%ecx
0x00000000000c32ec:  mov    %ds,%ax
0x00000000000c32ee:  mov    %dx,%ds
0x00000000000c32f0:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32f0:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c32f2:  mov    %ax,%ds
0x00000000000c32f4:  addr32 mov %cs:0x28(%ebx),%esi
0x00000000000c32fa:  mov    %cs,%dx
0x00000000000c32fc:  mov    %dx,%es
0x00000000000c32fe:  addr32 mov -0x10(%ebp),%edi
0x00000000000c3303:  add    $0x37,%edi
0x00000000000c3307:  mov    $0x9,%ecx
0x00000000000c330d:  mov    %ds,%ax
0x00000000000c330f:  mov    %dx,%ds
0x00000000000c3311:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c3311:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c3313:  mov    %ax,%ds
0x00000000000c3315:  addr32 incl -0x14(%ebp)
0x00000000000c331a:  addr32 addl $0x40,-0x10(%ebp)
0x00000000000c3320:  jmp    0xc3192

----------------
IN: 
0x00000000000c3212:  mov    %cs,%dx
0x00000000000c3214:  mov    %dx,%es
0x00000000000c3216:  addr32 mov -0x10(%ebp),%edi
0x00000000000c321b:  mov    %esi,%eax
0x00000000000c321e:  addr32 mov %al,%es:(%edi)
0x00000000000c3222:  mov    %dx,%es
0x00000000000c3224:  addr32 mov -0x1c(%ebp),%al
0x00000000000c3228:  jmp    0xc325a

----------------
IN: 
0x00000000000c325a:  dec    %eax
0x00000000000c325c:  addr32 mov %al,%es:0x1(%edi)
0x00000000000c3261:  mov    %cs,%si
0x00000000000c3263:  mov    %si,%es
0x00000000000c3265:  addr32 mov -0x10(%ebp),%edi
0x00000000000c326a:  addr32 mov -0x19(%ebp),%al
0x00000000000c326e:  addr32 mov %al,%es:0x2(%edi)
0x00000000000c3273:  addr32 movzbl -0x1a(%ebp),%eax
0x00000000000c3279:  addr32 mov -0x18(%ebp),%edx
0x00000000000c327e:  push   %ax
0x00000000000c327f:  call   0xc0025

----------------
IN: 
0x00000000000c004f:  shl    %ecx
0x00000000000c0052:  imul   %dx,%cx
0x00000000000c0055:  addr32 lea 0x7ff(%ecx),%ebx
0x00000000000c005d:  and    $0xf800,%bx
0x00000000000c0061:  mov    %ebx,%eax
0x00000000000c0064:  pop    %ebx
0x00000000000c0066:  pop    %ebp
0x00000000000c0068:  ret    $0x2

----------------
IN: 
0x00000000000c003a:  imul   %ecx,%edx
0x00000000000c003e:  mov    %edx,%ebx
0x00000000000c0041:  sar    $0x3,%ebx
0x00000000000c0045:  add    $0x1fff,%bx
0x00000000000c0049:  and    $0xe000,%bx
0x00000000000c004d:  jmp    0xc0061

----------------
IN: 
0x00000000000c3323:  mov    %cs,%dx
0x00000000000c3325:  shl    $0x10,%edx
0x00000000000c3329:  mov    $0x4d17,%eax
0x00000000000c332f:  movzwl %ax,%eax
0x00000000000c3333:  or     %edx,%eax
0x00000000000c3336:  xor    %edx,%edx
0x00000000000c3339:  mov    %dx,%es
0x00000000000c333b:  mov    %eax,%es:0x40
0x00000000000c3340:  xor    %eax,%eax
0x00000000000c3343:  mov    $0xfffff000,%esi
0x00000000000c3349:  mov    %si,%es
0x00000000000c334b:  addr32 mov %es:(%eax),%edx
0x00000000000c3350:  cmp    $0x4d4d5024,%edx
0x00000000000c3357:  jne    0xc3429

----------------
IN: 
0x00000000000c3429:  add    $0x10,%eax
0x00000000000c342d:  cmp    $0x10000,%eax
0x00000000000c3433:  jne    0xc3343

----------------
IN: 
0x00000000000c3343:  mov    $0xfffff000,%esi
0x00000000000c3349:  mov    %si,%es
0x00000000000c334b:  addr32 mov %es:(%eax),%edx
0x00000000000c3350:  cmp    $0x4d4d5024,%edx
0x00000000000c3357:  jne    0xc3429

----------------
IN: 
0x00000000000c335b:  mov    %si,%es
0x00000000000c335d:  addr32 mov %es:0x5(%eax),%dl
0x00000000000c3362:  movzbl %dl,%esi
0x00000000000c3366:  mov    $0xfffff000,%ebx
0x00000000000c336c:  mov    %bx,%es
0x00000000000c336e:  xor    %ebx,%ebx
0x00000000000c3371:  xor    %edx,%edx
0x00000000000c3374:  cmp    %esi,%edx
0x00000000000c3377:  jae    0xc3388

----------------
IN: 
0x00000000000c3379:  addr32 mov %es:(%edx,%eax,1),%cl
0x00000000000c337e:  mov    %ecx,%edi
0x00000000000c3381:  add    %edi,%ebx
0x00000000000c3384:  inc    %edx
0x00000000000c3386:  jmp    0xc3374

----------------
IN: 
0x00000000000c3374:  cmp    %esi,%edx
0x00000000000c3377:  jae    0xc3388

----------------
IN: 
0x00000000000c3388:  test   %bl,%bl
0x00000000000c338a:  jne    0xc3429

----------------
IN: 
0x00000000000c338e:  mov    $0xfffff000,%edx
0x00000000000c3394:  mov    %dx,%es
0x00000000000c3396:  addr32 mov %es:0x7(%eax),%ebx
0x00000000000c339c:  movzwl %bx,%eax
0x00000000000c33a0:  push   %eax
0x00000000000c33a2:  mov    %ebx,%eax
0x00000000000c33a5:  shr    $0x10,%eax
0x00000000000c33a9:  push   %eax
0x00000000000c33ab:  pushl  $0x500c
0x00000000000c33b1:  push   %ax
0x00000000000c33b2:  call   0xc274b

----------------
IN: 
0x00000000000c33b5:  add    $0xc,%esp
0x00000000000c33b9:  mov    %ebx,%ecx
0x00000000000c33bc:  push   %ecx
0x00000000000c33be:  push   $0x9
0x00000000000c33c0:  pushl  $0xffffffff
0x00000000000c33c3:  pushl  $0x20
0x00000000000c33c6:  push   $0x0
0x00000000000c33c8:  addr32 lcall *0xc(%esp)

----------------
IN: 
0x00000000000fd362:  push   %esp
0x00000000000fd364:  movzwl %sp,%esp
0x00000000000fd368:  pushfl 
0x00000000000fd36a:  cli    
0x00000000000fd36b:  cld    
0x00000000000fd36c:  push   %eax
0x00000000000fd36e:  push   %ecx
0x00000000000fd370:  push   %edx
0x00000000000fd372:  push   %es
0x00000000000fd373:  push   %ds
0x00000000000fd374:  mov    %ss,%cx
0x00000000000fd376:  mov    %cx,%ds
0x00000000000fd378:  mov    $0x3ffb95f4,%eax
0x00000000000fd37e:  addr32 lea 0x1c(%esp),%edx
0x00000000000fd384:  mov    $0xffffffff,%ecx
0x00000000000fd38a:  calll  0xfb88b

----------------
IN: 
0x00000000000fb88b:  push   %ebx
0x00000000000fb88d:  mov    %cr0,%ebx
0x00000000000fb890:  and    $0x1,%bl
0x00000000000fb893:  jne    0xfb89a

----------------
IN: 
0x00000000000fb895:  pop    %ebx
0x00000000000fb897:  jmp    0xf7b7e

----------------
IN: 
0x00000000000f7b7e:  push   %ebp
0x00000000000f7b80:  push   %edi
0x00000000000f7b82:  push   %esi
0x00000000000f7b84:  push   %ebx
0x00000000000f7b86:  sub    $0xf,%esp
0x00000000000f7b8a:  mov    %eax,%esi
0x00000000000f7b8d:  in     $0x70,%al
0x00000000000f7b8f:  addr32 mov %al,(%esp)
0x00000000000f7b93:  mov    %al,%cl
0x00000000000f7b95:  or     $0xffffff80,%ecx
0x00000000000f7b99:  mov    %cl,%al
0x00000000000f7b9b:  out    %al,$0x70
0x00000000000f7b9d:  in     $0x71,%al
0x00000000000f7b9f:  addr32 mov %fs,0x1(%esp)
0x00000000000f7ba4:  addr32 mov %gs,0x3(%esp)
0x00000000000f7ba9:  addr32 sgdtl 0x9(%esp)
0x00000000000f7bb0:  mov    $0xe000,%eax
0x00000000000f7bb6:  movzwl %ax,%ebp
0x00000000000f7bba:  mov    %bp,%es
0x00000000000f7bbc:  mov    %es:0xf7ec,%ax
0x00000000000f7bc0:  addr32 mov %ax,0x5(%esp)
0x00000000000f7bc5:  mov    %ss,%ax
0x00000000000f7bc7:  mov    %bp,%es
0x00000000000f7bc9:  mov    %ax,%es:0xf7ec
0x00000000000f7bcd:  mov    %edx,%eax
0x00000000000f7bd0:  mov    %ss,%ebx
0x00000000000f7bd3:  mov    %esp,%edi
0x00000000000f7bd6:  shl    $0x4,%ebx
0x00000000000f7bda:  add    %ebx,%esp
0x00000000000f7bdd:  shr    $0x4,%ebx
0x00000000000f7be1:  mov    $0xf7bea,%edx
0x00000000000f7be7:  jmp    0xfd1be

----------------
IN: 
0x00000000000fd1f1:  mov    $0x10,%eax
0x00000000000fd1f6:  mov    %eax,%ds

----------------
IN: 
0x00000000000fd1f8:  mov    %eax,%es

----------------
IN: 
0x00000000000f7bea:  call   *%esi

----------------
IN: 
0x000000003ffb95f4:  push   %ebp
0x000000003ffb95f5:  push   %edi
0x000000003ffb95f6:  push   %esi
0x000000003ffb95f7:  push   %ebx
0x000000003ffb95f8:  sub    $0xc,%esp
0x000000003ffb95fb:  mov    %eax,%ebx
0x000000003ffb95fd:  mov    (%eax),%si
0x000000003ffb9600:  movzwl %si,%eax
0x000000003ffb9603:  mov    %eax,0x4(%esp)
0x000000003ffb9607:  movl   $0xf584c,(%esp)
0x000000003ffb960e:  call   0xf1cc0

----------------
IN: 
0x000000003ffb9613:  cmp    $0x1,%si
0x000000003ffb9617:  je     0x3ffb9732

----------------
IN: 
0x000000003ffb961d:  jb     0x3ffb963e

----------------
IN: 
0x000000003ffb963e:  mov    0x2(%ebx),%esi
0x000000003ffb9641:  mov    0x6(%ebx),%ebp
0x000000003ffb9644:  mov    0xa(%ebx),%dx
0x000000003ffb9648:  test   $0x8,%dl
0x000000003ffb964b:  jne    0x3ffb9659

----------------
IN: 
0x000000003ffb9659:  mov    $0x3ffbfeb7,%edi
0x000000003ffb965e:  mov    $0x3ffbfebb,%eax
0x000000003ffb9663:  test   %esi,%esi
0x000000003ffb9665:  jne    0x3ffb96ab

----------------
IN: 
0x000000003ffb96ab:  shl    $0x4,%esi
0x000000003ffb96ae:  test   %esi,%esi
0x000000003ffb96b0:  jle    0x3ffb972e

----------------
IN: 
0x000000003ffb96b2:  mov    $0x10,%ebx
0x000000003ffb96b7:  test   $0x4,%dl
0x000000003ffb96ba:  je     0x3ffb96cd

----------------
IN: 
0x000000003ffb96cd:  and    $0x3,%edx
0x000000003ffb96d0:  cmp    $0x2,%dx
0x000000003ffb96d4:  je     0x3ffb96f5

----------------
IN: 
0x000000003ffb96d6:  cmp    $0x3,%dx
0x000000003ffb96da:  je     0x3ffb96e6

----------------
IN: 
0x000000003ffb96dc:  dec    %dx
0x000000003ffb96de:  jne    0x3ffb972e

----------------
IN: 
0x000000003ffb96e0:  mov    %ebx,%ecx
0x000000003ffb96e2:  mov    %esi,%edx
0x000000003ffb96e4:  jmp    0x3ffb96fb

----------------
IN: 
0x000000003ffb96fb:  call   0x3ffaeed1

----------------
IN: 
0x000000003ffb9700:  mov    %eax,%edx
0x000000003ffb9702:  test   %edx,%edx
0x000000003ffb9704:  je     0x3ffb972a

----------------
IN: 
0x000000003ffb9706:  cmp    $0xffffffff,%ebp
0x000000003ffb9709:  je     0x3ffb972a

----------------
IN: 
0x000000003ffb972a:  mov    %edx,%eax
0x000000003ffb972c:  jmp    0x3ffb9765

----------------
IN: 
0x000000003ffb9765:  add    $0xc,%esp
0x000000003ffb9768:  pop    %ebx
0x000000003ffb9769:  pop    %esi
0x000000003ffb976a:  pop    %edi
0x000000003ffb976b:  pop    %ebp
0x000000003ffb976c:  ret    

----------------
IN: 
0x00000000000f7bec:  mov    $0x7bf6,%edx
0x00000000000f7bf1:  jmp    0xfd21b

----------------
IN: 
0x00000000000f7bf6:  mov    %bx,%ds
0x00000000000f7bf8:  mov    %bx,%ss

----------------
IN: 
0x00000000000f7bfa:  mov    %edi,%esp

----------------
IN: 
0x00000000000f7bfd:  mov    %eax,%ebx
0x00000000000f7c00:  mov    %bp,%es
0x00000000000f7c02:  addr32 mov 0x5(%esp),%ax
0x00000000000f7c07:  mov    %ax,%es:0xf7ec
0x00000000000f7c0b:  addr32 lgdtl 0x9(%esp)
0x00000000000f7c12:  addr32 mov 0x1(%esp),%fs
0x00000000000f7c17:  addr32 mov 0x3(%esp),%gs
0x00000000000f7c1c:  addr32 mov (%esp),%al
0x00000000000f7c20:  out    %al,$0x70
0x00000000000f7c22:  in     $0x71,%al
0x00000000000f7c24:  mov    %ebx,%eax
0x00000000000f7c27:  add    $0xf,%esp
0x00000000000f7c2b:  pop    %ebx
0x00000000000f7c2d:  pop    %esi
0x00000000000f7c2f:  pop    %edi
0x00000000000f7c31:  pop    %ebp
0x00000000000f7c33:  retl   

----------------
IN: 
0x00000000000fd390:  addr32 mov %ax,0xc(%esp)
0x00000000000fd395:  shr    $0x10,%eax
0x00000000000fd399:  addr32 mov %ax,0x4(%esp)
0x00000000000fd39e:  pop    %ds
0x00000000000fd39f:  pop    %es
0x00000000000fd3a0:  pop    %edx
0x00000000000fd3a2:  pop    %ecx
0x00000000000fd3a4:  pop    %eax
0x00000000000fd3a6:  popfl  

----------------
IN: 
0x00000000000fd3a8:  pop    %esp
0x00000000000fd3aa:  lret   

----------------
IN: 
0x00000000000c33cd:  add    $0x10,%esp
0x00000000000c33d1:  cli    
0x00000000000c33d2:  cld    
0x00000000000c33d3:  mov    %edx,%ebx
0x00000000000c33d6:  shl    $0x10,%ebx
0x00000000000c33da:  movzwl %ax,%eax
0x00000000000c33de:  or     %eax,%ebx
0x00000000000c33e1:  addr32 lea -0x1(%ebx),%eax
0x00000000000c33e6:  cmp    $0xfffffffd,%eax
0x00000000000c33ea:  ja     0xc3437

----------------
IN: 
0x00000000000c33ec:  push   %ebx
0x00000000000c33ee:  pushl  $0x5048
0x00000000000c33f4:  push   %ax
0x00000000000c33f5:  call   0xc274b

----------------
IN: 
0x00000000000c1148:  cmp    $0x6,%edx
0x00000000000c114c:  je     0xc1170

----------------
IN: 
0x00000000000c114e:  jl     0xc117f

----------------
IN: 
0x00000000000c117f:  mov    %ebx,%eax
0x00000000000c1182:  shr    $0x10,%eax
0x00000000000c1186:  and    $0xf,%eax
0x00000000000c118a:  push   %ax
0x00000000000c118b:  call   0xc1105

----------------
IN: 
0x00000000000c33f8:  pop    %edx
0x00000000000c33fa:  pop    %ecx
0x00000000000c33fc:  mov    %cs,%ax
0x00000000000c33fe:  mov    %ax,%es
0x00000000000c3400:  shr    $0x4,%ebx
0x00000000000c3404:  mov    %bx,%es:-0x7740
0x00000000000c3409:  mov    %eax,%edx
0x00000000000c340c:  shl    $0x10,%edx
0x00000000000c3410:  mov    $0x4d65,%eax
0x00000000000c3416:  movzwl %ax,%eax
0x00000000000c341a:  or     %edx,%eax
0x00000000000c341d:  xor    %edx,%edx
0x00000000000c3420:  mov    %dx,%es
0x00000000000c3422:  mov    %eax,%es:0x40
0x00000000000c3427:  jmp    0xc3437

----------------
IN: 
0x00000000000c3437:  mov    %cs,%ax
0x00000000000c3439:  mov    %ax,%es
0x00000000000c343b:  mov    $0x1,%edx
0x00000000000c3441:  mov    %edx,%es:-0x7748
0x00000000000c3447:  mov    %ax,%es
0x00000000000c3449:  xor    %edx,%edx
0x00000000000c344c:  mov    %dl,%es:0x6
0x00000000000c3451:  mov    %cs:0x2,%cl
0x00000000000c3456:  movzbl %cl,%ecx
0x00000000000c345a:  shl    $0x9,%ecx
0x00000000000c345e:  mov    %ax,%es
0x00000000000c3460:  xor    %eax,%eax
0x00000000000c3463:  cmp    %ecx,%eax
0x00000000000c3466:  je     0xc3473

----------------
IN: 
0x00000000000c3468:  addr32 mov %es:(%eax),%bl
0x00000000000c346c:  add    %ebx,%edx
0x00000000000c346f:  inc    %eax
0x00000000000c3471:  jmp    0xc3463

----------------
IN: 
0x00000000000c3463:  cmp    %ecx,%eax
0x00000000000c3466:  je     0xc3473

----------------
IN: 
0x00000000000c3473:  mov    %cs,%ax
0x00000000000c3475:  mov    %ax,%es
0x00000000000c3477:  neg    %edx
0x00000000000c347a:  mov    %dl,%es:0x6
0x00000000000c347f:  addr32 lea -0xc(%ebp),%esp
0x00000000000c3484:  pop    %ebx
0x00000000000c3486:  pop    %esi
0x00000000000c3488:  pop    %edi
0x00000000000c348a:  pop    %ebp
0x00000000000c348c:  ret    $0x2

----------------
IN: 
0x00000000000c4d03:  mov    %ebx,%esp
0x00000000000c4d06:  pop    %ds
0x00000000000c4d07:  pop    %es
0x00000000000c4d08:  pop    %edi
0x00000000000c4d0a:  pop    %esi
0x00000000000c4d0c:  pop    %ebp
0x00000000000c4d0e:  pop    %ebx
0x00000000000c4d10:  pop    %edx
0x00000000000c4d12:  pop    %ecx
0x00000000000c4d14:  pop    %eax
0x00000000000c4d16:  lret   

----------------
IN: 
0x00000000000f2787:  call   0xf1bad

----------------
IN: 
0x00000000000f1bad:  cmpl   $0x2,0xf65d8
0x00000000000f1bb4:  je     0xf1bbb

----------------
IN: 
0x00000000000f1bb6:  jmp    0xf1b80

Servicing hardware INT=0x08
----------------
IN: 
0x00000000000f278c:  add    $0x34,%esp
0x00000000000f278f:  pop    %ebx
0x00000000000f2790:  pop    %esi
0x00000000000f2791:  pop    %edi
0x00000000000f2792:  ret    

----------------
IN: 
0x000000003ffb1c7d:  movzbl 0x2(%ebx),%ebx
0x000000003ffb1c81:  shl    $0x9,%ebx
0x000000003ffb1c84:  mov    %ebx,%eax
0x000000003ffb1c86:  call   0x3ffaf015

----------------
IN: 
0x000000003ffb1c8b:  test   %eax,%eax
0x000000003ffb1c8d:  jne    0x3ffb1ca2

----------------
IN: 
0x000000003ffb1ca2:  mov    0x3ffbfe93,%eax
0x000000003ffb1ca7:  lea    0x7ff(%ebx,%eax,1),%eax
0x000000003ffb1cae:  and    $0xfffff800,%eax
0x000000003ffb1cb3:  mov    %eax,0x3ffbfe93
0x000000003ffb1cb8:  xor    %eax,%eax
0x000000003ffb1cba:  pop    %ebx
0x000000003ffb1cbb:  pop    %esi
0x000000003ffb1cbc:  pop    %edi
0x000000003ffb1cbd:  pop    %ebp
0x000000003ffb1cbe:  ret    

----------------
IN: 
0x000000003ffb48d6:  jmp    0x3ffb48db

----------------
IN: 
0x000000003ffb48db:  add    $0x40,%esp
0x000000003ffb48de:  pop    %ebx
0x000000003ffb48df:  pop    %esi
0x000000003ffb48e0:  pop    %edi
0x000000003ffb48e1:  pop    %ebp
0x000000003ffb48e2:  ret    

----------------
IN: 
0x000000003ffbb87c:  xor    %ecx,%ecx
0x000000003ffbb87e:  mov    $0x1,%edx
0x000000003ffbb883:  mov    $0xf5ed0,%eax
0x000000003ffbb888:  call   0x3ffb1cbf

----------------
IN: 
0x000000003ffb1cbf:  push   %ebp
0x000000003ffb1cc0:  push   %edi
0x000000003ffb1cc1:  push   %esi
0x000000003ffb1cc2:  push   %ebx
0x000000003ffb1cc3:  sub    $0x8,%esp
0x000000003ffb1cc6:  mov    %eax,(%esp)
0x000000003ffb1cc9:  mov    %edx,0x4(%esp)
0x000000003ffb1ccd:  mov    %ecx,%esi
0x000000003ffb1ccf:  xor    %ebx,%ebx
0x000000003ffb1cd1:  mov    %ebx,%edx
0x000000003ffb1cd3:  mov    (%esp),%eax
0x000000003ffb1cd6:  call   0x3ffaf0a5

----------------
IN: 
0x000000003ffaf0a5:  push   %ebp
0x000000003ffaf0a6:  push   %edi
0x000000003ffaf0a7:  push   %esi
0x000000003ffaf0a8:  push   %ebx
0x000000003ffaf0a9:  mov    %eax,%esi
0x000000003ffaf0ab:  mov    %edx,%edi
0x000000003ffaf0ad:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffaf0b2:  mov    %eax,%ebp
0x000000003ffaf0b4:  mov    0x3ffbfe8f,%ebx
0x000000003ffaf0ba:  test   %edi,%edi
0x000000003ffaf0bc:  je     0x3ffaf0d4

----------------
IN: 
0x000000003ffaf0d4:  test   %ebx,%ebx
0x000000003ffaf0d6:  jne    0x3ffaf0c2

----------------
IN: 
0x000000003ffaf0c2:  lea    0x4(%ebx),%edx
0x000000003ffaf0c5:  mov    %ebp,%ecx
0x000000003ffaf0c7:  mov    %esi,%eax
0x000000003ffaf0c9:  call   0x3ffaeb34

----------------
IN: 
0x000000003ffaf0ce:  test   %eax,%eax
0x000000003ffaf0d0:  je     0x3ffaf0dc

----------------
IN: 
0x000000003ffaf0d2:  mov    (%ebx),%ebx
0x000000003ffaf0d4:  test   %ebx,%ebx
0x000000003ffaf0d6:  jne    0x3ffaf0c2

----------------
IN: 
0x000000003ffaf0d8:  xor    %eax,%eax
0x000000003ffaf0da:  jmp    0x3ffaf0de

----------------
IN: 
0x000000003ffaf0de:  pop    %ebx
0x000000003ffaf0df:  pop    %esi
0x000000003ffaf0e0:  pop    %edi
0x000000003ffaf0e1:  pop    %ebp
0x000000003ffaf0e2:  ret    

----------------
IN: 
0x000000003ffb1cdb:  mov    %eax,%ebx
0x000000003ffb1cdd:  test   %eax,%eax
0x000000003ffb1cdf:  je     0x3ffb1d0d

----------------
IN: 
0x000000003ffb1d0d:  add    $0x8,%esp
0x000000003ffb1d10:  pop    %ebx
0x000000003ffb1d11:  pop    %esi
0x000000003ffb1d12:  pop    %edi
0x000000003ffb1d13:  pop    %ebp
0x000000003ffb1d14:  ret    

----------------
IN: 
0x000000003ffbb88d:  xor    %eax,%eax
0x000000003ffbb88f:  call   0x3ffaf015

----------------
IN: 
0x000000003ffbb894:  cmpl   $0xc0000,0x3ffbfe93
0x000000003ffbb89e:  je     0x3ffbb8af

----------------
IN: 
0x000000003ffbb8a0:  movl   $0xc0000,0xf65c0
0x000000003ffbb8aa:  call   0x3ffb4576

----------------
IN: 
0x000000003ffb4576:  push   %edi
0x000000003ffb4577:  push   %ebx
0x000000003ffb4578:  sub    $0x7c,%esp
0x000000003ffb457b:  movl   $0xf4d52,(%esp)
0x000000003ffb4582:  call   0xf1cc0

----------------
IN: 
0x000000003ffb4587:  mov    $0x26,%ecx
0x000000003ffb458c:  xor    %edx,%edx
0x000000003ffb458e:  lea    0x56(%esp),%eax
0x000000003ffb4592:  call   0xf118c

----------------
IN: 
0x000000003ffb4597:  movw   $0x3,0x72(%esp)
0x000000003ffb459e:  lea    0x56(%esp),%eax
0x000000003ffb45a2:  call   0x3ffb0545

----------------
IN: 
0x000000003ffb0545:  push   %edx
0x000000003ffb0546:  movw   $0x200,0x24(%eax)
0x000000003ffb054c:  mov    %eax,(%esp)
0x000000003ffb054f:  call   0xf173c

----------------
IN: 
0x000000003ffb0554:  mov    (%esp),%eax
0x000000003ffb0557:  movw   $0xf000,0x22(%eax)
0x000000003ffb055d:  mov    $0xfd338,%edx
0x000000003ffb0562:  mov    %dx,0x20(%eax)
0x000000003ffb0566:  call   0xf1c1b

----------------
IN: 
0x00000000000f1c1b:  movzwl 0xef7ec,%edx
0x00000000000f1c22:  imul   $0xfffffff0,%edx,%ecx
0x00000000000f1c25:  add    %ecx,%eax
0x00000000000f1c27:  mov    %esp,%ecx
0x00000000000f1c29:  cmp    $0x100000,%ecx
0x00000000000f1c2f:  jbe    0xf1c3e

----------------
IN: 
0x00000000000f1c3e:  mov    $0x774b,%ecx
0x00000000000f1c43:  jmp    0xfd259

----------------
IN: 
0x00000000000fd259:  push   %edx
0x00000000000fd25a:  push   %ecx
0x00000000000fd25b:  mov    $0xd271,%edx
0x00000000000fd260:  jmp    0xfd204

----------------
IN: 
0x00000000000fd204:  mov    %eax,%ecx
0x00000000000fd206:  mov    $0x20,%eax
0x00000000000fd20b:  mov    %eax,%ds

----------------
IN: 
0x00000000000fd20d:  mov    %eax,%es

----------------
IN: 
0x00000000000fd20f:  mov    %eax,%ss

----------------
IN: 
0x00000000000fd211:  mov    %eax,%fs

----------------
IN: 
0x00000000000fd213:  mov    %eax,%gs
0x00000000000fd215:  ljmpw  $0x18,$0xd232

----------------
IN: 
0x00000000000fd338:  int    $0x10

----------------
IN: 
0x00000000000c4d65:  cli    
0x00000000000c4d66:  cld    
0x00000000000c4d67:  push   %ds
0x00000000000c4d68:  push   %eax
0x00000000000c4d6a:  mov    %cs:-0x7740,%ds
0x00000000000c4d6f:  mov    $0x1d2,%eax
0x00000000000c4d75:  addr32 popl 0x1c(%eax)
0x00000000000c4d7a:  addr32 popw (%eax)
0x00000000000c4d7d:  addr32 mov %edi,0x4(%eax)
0x00000000000c4d82:  addr32 mov %esi,0x8(%eax)
0x00000000000c4d87:  addr32 mov %ebp,0xc(%eax)
0x00000000000c4d8c:  addr32 mov %ebx,0x10(%eax)
0x00000000000c4d91:  addr32 mov %edx,0x14(%eax)
0x00000000000c4d96:  addr32 mov %ecx,0x18(%eax)
0x00000000000c4d9b:  addr32 mov %es,0x2(%eax)
0x00000000000c4d9f:  addr32 mov %esp,0x26(%eax)
0x00000000000c4da4:  addr32 mov %ss,0x2a(%eax)
0x00000000000c4da8:  addr32 popl 0x20(%eax)
0x00000000000c4dad:  addr32 popw 0x24(%eax)
0x00000000000c4db1:  mov    %ds,%dx
0x00000000000c4db3:  mov    %dx,%ss

----------------
IN: 
0x00000000000c4db5:  mov    %eax,%esp

----------------
IN: 
0x00000000000c4db8:  mov    $0x8000,%ecx
0x00000000000c4dbe:  addr32 lea (%ecx,%ecx,1),%ecx
0x00000000000c4dc3:  cmp    $0x10000,%ecx
0x00000000000c4dca:  jne    0xc4c65

----------------
IN: 
0x00000000000c4dce:  push   %ax
0x00000000000c4dcf:  call   0xc3da6

----------------
IN: 
0x00000000000c3da6:  push   %ebp
0x00000000000c3da8:  mov    %esp,%ebp
0x00000000000c3dab:  push   %edi
0x00000000000c3dad:  push   %esi
0x00000000000c3daf:  push   %ebx
0x00000000000c3db1:  sub    $0x8,%esp
0x00000000000c3db5:  mov    %eax,%ebx
0x00000000000c3db8:  addr32 mov 0x1d(%eax),%al
0x00000000000c3dbc:  cmp    $0xb,%al
0x00000000000c3dbe:  je     0xc40ad

----------------
IN: 
0x00000000000c3dc2:  ja     0xc3e72

----------------
IN: 
0x00000000000c3dc6:  cmp    $0x5,%al
0x00000000000c3dc8:  je     0xc3f91

----------------
IN: 
0x00000000000c3dcc:  ja     0xc3e38

----------------
IN: 
0x00000000000c3dce:  cmp    $0x2,%al
0x00000000000c3dd0:  je     0xc3f53

----------------
IN: 
0x00000000000c3dd4:  ja     0xc3dfe

----------------
IN: 
0x00000000000c3dd6:  test   %al,%al
0x00000000000c3dd8:  je     0xc3efa

----------------
IN: 
0x00000000000c3efa:  addr32 mov 0x1c(%ebx),%al
0x00000000000c3efe:  and    $0x7f,%eax
0x00000000000c3f02:  cmp    $0x7,%eax
0x00000000000c3f06:  jle    0xc3f0f

----------------
IN: 
0x00000000000c3f0f:  cmp    $0x6,%eax
0x00000000000c3f13:  sete   %dl
0x00000000000c3f16:  dec    %edx
0x00000000000c3f18:  and    $0xfffffff1,%edx
0x00000000000c3f1c:  add    $0x3f,%edx
0x00000000000c3f20:  addr32 mov %dl,0x1c(%ebx)
0x00000000000c3f24:  mov    $0x40,%edx
0x00000000000c3f2a:  mov    %dx,%es
0x00000000000c3f2c:  mov    %es:0x89,%dl
0x00000000000c3f31:  and    $0xa,%edx
0x00000000000c3f35:  or     $0x1,%edx
0x00000000000c3f39:  addr32 cmpb $0x0,0x1c(%ebx)
0x00000000000c3f3e:  jns    0xc3f43

----------------
IN: 
0x00000000000c3f43:  addr32 lea -0xc(%ebp),%esp
0x00000000000c3f48:  pop    %ebx
0x00000000000c3f4a:  pop    %esi
0x00000000000c3f4c:  pop    %edi
0x00000000000c3f4e:  pop    %ebp
0x00000000000c3f50:  jmp    0xc2a24

----------------
IN: 
0x00000000000c2a24:  push   %ebp
0x00000000000c2a26:  mov    %esp,%ebp
0x00000000000c2a29:  push   %edi
0x00000000000c2a2b:  push   %esi
0x00000000000c2a2d:  push   %ebx
0x00000000000c2a2f:  sub    $0x14,%esp
0x00000000000c2a33:  mov    %eax,%edi
0x00000000000c2a36:  addr32 mov %eax,-0x14(%ebp)
0x00000000000c2a3b:  addr32 mov %edx,-0x10(%ebp)
0x00000000000c2a40:  push   %eax
0x00000000000c2a42:  pushl  $0x4f6c
0x00000000000c2a48:  push   %ax
0x00000000000c2a49:  call   0xc274b

----------------
IN: 
0x00000000000c2a4c:  pop    %eax
0x00000000000c2a4e:  pop    %edx
0x00000000000c2a50:  mov    %edi,%eax
0x00000000000c2a53:  push   %ax
0x00000000000c2a54:  call   0xc0f58

----------------
IN: 
0x00000000000c0f58:  mov    $0x5228,%edx
0x00000000000c0f5e:  addr32 mov %cs:(%edx),%cx
0x00000000000c0f62:  movzwl %cx,%ecx
0x00000000000c0f66:  cmp    %eax,%ecx
0x00000000000c0f69:  jne    0xc0f73

----------------
IN: 
0x00000000000c0f73:  addr32 mov %cs:0x2(%edx),%cx
0x00000000000c0f78:  movzwl %cx,%ecx
0x00000000000c0f7c:  cmp    %eax,%ecx
0x00000000000c0f7f:  je     0xc0f6b

----------------
IN: 
0x00000000000c0f81:  add    $0x20,%edx
0x00000000000c0f85:  cmp    $0x5428,%edx
0x00000000000c0f8c:  jb     0xc0f5e

----------------
IN: 
0x00000000000c0f5e:  addr32 mov %cs:(%edx),%cx
0x00000000000c0f62:  movzwl %cx,%ecx
0x00000000000c0f66:  cmp    %eax,%ecx
0x00000000000c0f69:  jne    0xc0f73

----------------
IN: 
0x00000000000c0f8e:  push   %ebp
0x00000000000c0f90:  mov    %esp,%ebp
0x00000000000c0f93:  push   %ebx
0x00000000000c0f95:  mov    $0x5848,%ecx
0x00000000000c0f9b:  cmp    $0x5b08,%ecx
0x00000000000c0fa2:  je     0xc0fbf

----------------
IN: 
0x00000000000c0fa4:  mov    %ecx,%edx
0x00000000000c0fa7:  addr32 mov %cs:(%ecx),%bx
0x00000000000c0fab:  add    $0x2c,%ecx
0x00000000000c0faf:  movzwl %bx,%ebx
0x00000000000c0fb3:  cmp    %eax,%ebx
0x00000000000c0fb6:  jne    0xc0f9b

----------------
IN: 
0x00000000000c0f9b:  cmp    $0x5b08,%ecx
0x00000000000c0fa2:  je     0xc0fbf

----------------
IN: 
0x00000000000c0fb8:  addr32 lea 0x2(%edx),%eax
0x00000000000c0fbd:  jmp    0xc0fc2

----------------
IN: 
0x00000000000c0fc2:  pop    %ebx
0x00000000000c0fc4:  pop    %ebp
0x00000000000c0fc6:  ret    $0x2

----------------
IN: 
0x00000000000c2a57:  mov    %eax,%ebx
0x00000000000c2a5a:  test   %eax,%eax
0x00000000000c2a5d:  je     0xc2a71

----------------
IN: 
0x00000000000c2a5f:  cmp    $0x522c,%eax
0x00000000000c2a65:  jb     0xc2a7a

----------------
IN: 
0x00000000000c2a67:  cmp    $0x540c,%eax
0x00000000000c2a6d:  ja     0xc2a7a

----------------
IN: 
0x00000000000c2a7a:  mov    $0x5208,%eax
0x00000000000c2a80:  push   %ax
0x00000000000c2a81:  call   0xc2648

----------------
IN: 
0x00000000000c2648:  push   %ebp
0x00000000000c264a:  mov    %esp,%ebp
0x00000000000c264d:  push   %ebx
0x00000000000c264f:  mov    %eax,%ebx
0x00000000000c2652:  mov    $0x3c4,%edx
0x00000000000c2658:  mov    $0x1206,%eax
0x00000000000c265e:  out    %ax,(%dx)
0x00000000000c265f:  addr32 mov %cs:0x14(%ebx),%ecx
0x00000000000c2665:  addr32 mov %cs:(%ecx),%ax
0x00000000000c2669:  cmp    $0xffffffff,%ax
0x00000000000c266c:  je     0xc2675

----------------
IN: 
0x00000000000c266e:  out    %ax,(%dx)
0x00000000000c266f:  add    $0x2,%ecx
0x00000000000c2673:  jmp    0xc2665

----------------
IN: 
0x00000000000c2665:  addr32 mov %cs:(%ecx),%ax
0x00000000000c2669:  cmp    $0xffffffff,%ax
0x00000000000c266c:  je     0xc2675

----------------
IN: 
0x00000000000c2675:  addr32 mov %cs:0x18(%ebx),%ecx
0x00000000000c267b:  mov    $0x3ce,%edx
0x00000000000c2681:  addr32 mov %cs:(%ecx),%ax
0x00000000000c2685:  cmp    $0xffffffff,%ax
0x00000000000c2688:  je     0xc2691

----------------
IN: 
0x00000000000c268a:  out    %ax,(%dx)
0x00000000000c268b:  add    $0x2,%ecx
0x00000000000c268f:  jmp    0xc2681

----------------
IN: 
0x00000000000c2681:  addr32 mov %cs:(%ecx),%ax
0x00000000000c2685:  cmp    $0xffffffff,%ax
0x00000000000c2688:  je     0xc2691

----------------
IN: 
0x00000000000c2691:  push   %ax
0x00000000000c2692:  call   0xc06b0

----------------
IN: 
0x00000000000c06b0:  push   %ebp
0x00000000000c06b2:  mov    %esp,%ebp
0x00000000000c06b5:  mov    $0x3cc,%edx
0x00000000000c06bb:  in     (%dx),%al
0x00000000000c06bc:  mov    $0x3b4,%ecx
0x00000000000c06c2:  test   $0x1,%al
0x00000000000c06c4:  je     0xc06c8

----------------
IN: 
0x00000000000c06c6:  mov    $0xd4,%cl
0x00000000000c06c8:  mov    %ecx,%eax
0x00000000000c06cb:  pop    %ebp
0x00000000000c06cd:  ret    $0x2

----------------
IN: 
0x00000000000c2695:  mov    %eax,%edx
0x00000000000c2698:  addr32 mov %cs:0x1c(%ebx),%ecx
0x00000000000c269e:  addr32 mov %cs:(%ecx),%ax
0x00000000000c26a2:  cmp    $0xffffffff,%ax
0x00000000000c26a5:  je     0xc26ae

----------------
IN: 
0x00000000000c26a7:  out    %ax,(%dx)
0x00000000000c26a8:  add    $0x2,%ecx
0x00000000000c26ac:  jmp    0xc269e

----------------
IN: 
0x00000000000c269e:  addr32 mov %cs:(%ecx),%ax
0x00000000000c26a2:  cmp    $0xffffffff,%ax
0x00000000000c26a5:  je     0xc26ae

----------------
IN: 
0x00000000000c26ae:  mov    $0x3c6,%edx
0x00000000000c26b4:  xor    %eax,%eax
0x00000000000c26b7:  out    %al,(%dx)
0x00000000000c26b8:  in     (%dx),%al
0x00000000000c26b9:  in     (%dx),%al
0x00000000000c26ba:  in     (%dx),%al
0x00000000000c26bb:  in     (%dx),%al
0x00000000000c26bc:  addr32 mov %cs:0x10(%ebx),%ax
0x00000000000c26c1:  out    %al,(%dx)
0x00000000000c26c2:  mov    $0xff,%al
0x00000000000c26c4:  out    %al,(%dx)
0x00000000000c26c5:  addr32 mov %cs:0x4(%ebx),%al
0x00000000000c26ca:  cmp    $0x3,%al
0x00000000000c26cc:  je     0xc26d5

----------------
IN: 
0x00000000000c26ce:  test   %al,%al
0x00000000000c26d0:  setne  %cl
0x00000000000c26d3:  jmp    0xc26d7

----------------
IN: 
0x00000000000c26d7:  movzbl %cl,%ecx
0x00000000000c26db:  mov    $0x1,%edx
0x00000000000c26e1:  mov    $0x10,%eax
0x00000000000c26e7:  push   %ax
0x00000000000c26e8:  call   0xc0853

----------------
IN: 
0x00000000000c0853:  push   %ebp
0x00000000000c0855:  mov    %esp,%ebp
0x00000000000c0858:  push   %esi
0x00000000000c085a:  push   %ebx
0x00000000000c085c:  sub    $0x1,%esp
0x00000000000c0860:  mov    %eax,%esi
0x00000000000c0863:  mov    %edx,%ebx
0x00000000000c0866:  mov    $0x3da,%edx
0x00000000000c086c:  in     (%dx),%al
0x00000000000c086d:  mov    $0xc0,%dl
0x00000000000c086f:  in     (%dx),%al
0x00000000000c0870:  addr32 mov %al,-0x9(%ebp)
0x00000000000c0874:  mov    %esi,%eax
0x00000000000c0877:  out    %al,(%dx)
0x00000000000c0878:  mov    $0xc1,%dl
0x00000000000c087a:  in     (%dx),%al
0x00000000000c087b:  not    %ebx
0x00000000000c087e:  and    %ebx,%eax
0x00000000000c0881:  or     %ecx,%eax
0x00000000000c0884:  mov    $0xc0,%dl
0x00000000000c0886:  out    %al,(%dx)
0x00000000000c0887:  addr32 mov -0x9(%ebp),%al
0x00000000000c088b:  out    %al,(%dx)
0x00000000000c088c:  add    $0x1,%esp
0x00000000000c0890:  pop    %ebx
0x00000000000c0892:  pop    %esi
0x00000000000c0894:  pop    %ebp
0x00000000000c0896:  ret    $0x2

----------------
IN: 
0x00000000000c26eb:  mov    $0x3da,%edx
0x00000000000c26f1:  in     (%dx),%al
0x00000000000c26f2:  mov    $0xc0,%dl
0x00000000000c26f4:  mov    $0x20,%al
0x00000000000c26f6:  out    %al,(%dx)
0x00000000000c26f7:  pop    %ebx
0x00000000000c26f9:  pop    %ebp
0x00000000000c26fb:  ret    $0x2

----------------
IN: 
0x00000000000c2a84:  pushl  $0x4f7d
0x00000000000c2a8a:  push   %ax
0x00000000000c2a8b:  call   0xc274b

----------------
IN: 
0x00000000000c2a8e:  pop    %eax
0x00000000000c2a90:  cmp    $0x584a,%ebx
0x00000000000c2a97:  jb     0xc2d68

----------------
IN: 
0x00000000000c2a9b:  cmp    $0x5ade,%ebx
0x00000000000c2aa2:  ja     0xc2d68

----------------
IN: 
0x00000000000c2aa6:  jmp    0xc2d89

----------------
IN: 
0x00000000000c2d89:  addr32 testb $0x8,-0x10(%ebp)
0x00000000000c2d8e:  jne    0xc2e03

----------------
IN: 
0x00000000000c2d90:  addr32 mov %cs:0xc(%ebx),%al
0x00000000000c2d95:  mov    $0x3c6,%edx
0x00000000000c2d9b:  out    %al,(%dx)
0x00000000000c2d9c:  addr32 mov %cs:0xe(%ebx),%edi
0x00000000000c2da2:  addr32 mov %cs:0x12(%ebx),%ax
0x00000000000c2da7:  mov    $0x3,%ecx
0x00000000000c2dad:  xor    %edx,%edx
0x00000000000c2db0:  div    %cx
0x00000000000c2db2:  movzwl %ax,%esi
0x00000000000c2db6:  mov    %cs,%ax
0x00000000000c2db8:  movzwl %ax,%eax
0x00000000000c2dbc:  push   %esi
0x00000000000c2dbe:  xor    %ecx,%ecx
0x00000000000c2dc1:  mov    %edi,%edx
0x00000000000c2dc4:  push   %ax
0x00000000000c2dc5:  call   0xc0938

----------------
IN: 
0x00000000000c0938:  push   %ebp
0x00000000000c093a:  mov    %esp,%ebp
0x00000000000c093d:  push   %edi
0x00000000000c093f:  push   %esi
0x00000000000c0941:  push   %ebx
0x00000000000c0943:  mov    %edx,%ebx
0x00000000000c0946:  addr32 mov 0x8(%ebp),%esi
0x00000000000c094b:  mov    %eax,%edi
0x00000000000c094e:  mov    $0x3c8,%edx
0x00000000000c0954:  mov    %cl,%al
0x00000000000c0956:  out    %al,(%dx)
0x00000000000c0957:  test   %esi,%esi
0x00000000000c095a:  je     0xc0981

----------------
IN: 
0x00000000000c095c:  mov    %di,%es
0x00000000000c095e:  addr32 mov %es:(%ebx),%al
0x00000000000c0962:  mov    $0x3c9,%edx
0x00000000000c0968:  out    %al,(%dx)
0x00000000000c0969:  mov    %di,%es
0x00000000000c096b:  addr32 mov %es:0x1(%ebx),%al
0x00000000000c0970:  out    %al,(%dx)
0x00000000000c0971:  mov    %di,%es
0x00000000000c0973:  addr32 mov %es:0x2(%ebx),%al
0x00000000000c0978:  out    %al,(%dx)
0x00000000000c0979:  add    $0x3,%ebx
0x00000000000c097d:  dec    %esi
0x00000000000c097f:  jmp    0xc0957

----------------
IN: 
0x00000000000c0957:  test   %esi,%esi
0x00000000000c095a:  je     0xc0981

----------------
IN: 
0x00000000000c0981:  pop    %ebx
0x00000000000c0983:  pop    %esi
0x00000000000c0985:  pop    %edi
0x00000000000c0987:  pop    %ebp
0x00000000000c0989:  ret    $0x2

----------------
IN: 
0x00000000000c2dc8:  pop    %edi
0x00000000000c2dca:  cmp    $0xff,%esi
0x00000000000c2dd1:  jg     0xc2def

----------------
IN: 
0x00000000000c2dd3:  mov    %cs,%ax
0x00000000000c2dd5:  movzwl %ax,%eax
0x00000000000c2dd9:  pushl  $0x1
0x00000000000c2ddc:  mov    %esi,%ecx
0x00000000000c2ddf:  mov    $0x51e4,%edx
0x00000000000c2de5:  push   %ax
0x00000000000c2de6:  call   0xc0938

----------------
IN: 
0x00000000000c2de9:  pop    %ecx
0x00000000000c2deb:  inc    %esi
0x00000000000c2ded:  jmp    0xc2dca

----------------
IN: 
0x00000000000c2dca:  cmp    $0xff,%esi
0x00000000000c2dd1:  jg     0xc2def

----------------
IN: 
0x00000000000c2def:  addr32 testb $0x2,-0x10(%ebp)
0x00000000000c2df4:  je     0xc2e03

----------------
IN: 
0x00000000000c2e03:  addr32 mov %cs:0x22(%ebx),%edi
0x00000000000c2e09:  xor    %esi,%esi
0x00000000000c2e0c:  addr32 mov %cs:(%edi,%esi,1),%dl
0x00000000000c2e11:  movzbl %dl,%edx
0x00000000000c2e15:  mov    %esi,%eax
0x00000000000c2e18:  push   %ax
0x00000000000c2e19:  call   0xc0825

----------------
IN: 
0x00000000000c0825:  push   %ebp
0x00000000000c0827:  mov    %esp,%ebp
0x00000000000c082a:  push   %esi
0x00000000000c082c:  push   %ebx
0x00000000000c082e:  mov    %eax,%esi
0x00000000000c0831:  mov    %edx,%ebx
0x00000000000c0834:  mov    $0x3da,%edx
0x00000000000c083a:  in     (%dx),%al
0x00000000000c083b:  mov    $0xc0,%dl
0x00000000000c083d:  in     (%dx),%al
0x00000000000c083e:  mov    %al,%cl
0x00000000000c0840:  mov    %esi,%eax
0x00000000000c0843:  out    %al,(%dx)
0x00000000000c0844:  mov    %bl,%al
0x00000000000c0846:  out    %al,(%dx)
0x00000000000c0847:  mov    %cl,%al
0x00000000000c0849:  out    %al,(%dx)
0x00000000000c084a:  pop    %ebx
0x00000000000c084c:  pop    %esi
0x00000000000c084e:  pop    %ebp
0x00000000000c0850:  ret    $0x2

----------------
IN: 
0x00000000000c2e1c:  inc    %esi
0x00000000000c2e1e:  cmp    $0x14,%esi
0x00000000000c2e22:  jne    0xc2e0c

----------------
IN: 
0x00000000000c2e0c:  addr32 mov %cs:(%edi,%esi,1),%dl
0x00000000000c2e11:  movzbl %dl,%edx
0x00000000000c2e15:  mov    %esi,%eax
0x00000000000c2e18:  push   %ax
0x00000000000c2e19:  call   0xc0825

----------------
IN: 
0x00000000000c2e24:  xor    %edx,%edx
0x00000000000c2e27:  mov    $0x14,%eax
0x00000000000c2e2d:  push   %ax
0x00000000000c2e2e:  call   0xc0825

----------------
IN: 
0x00000000000c2e31:  mov    $0x3c4,%edx
0x00000000000c2e37:  mov    $0x300,%eax
0x00000000000c2e3d:  out    %ax,(%dx)
0x00000000000c2e3e:  addr32 mov %cs:0x16(%ebx),%esi
0x00000000000c2e44:  mov    $0x1,%ecx
0x00000000000c2e4a:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x00000000000c2e50:  shl    $0x8,%eax
0x00000000000c2e54:  or     %ecx,%eax
0x00000000000c2e57:  out    %ax,(%dx)
0x00000000000c2e58:  inc    %ecx
0x00000000000c2e5a:  cmp    $0x5,%ecx
0x00000000000c2e5e:  jne    0xc2e4a

----------------
IN: 
0x00000000000c2e4a:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x00000000000c2e50:  shl    $0x8,%eax
0x00000000000c2e54:  or     %ecx,%eax
0x00000000000c2e57:  out    %ax,(%dx)
0x00000000000c2e58:  inc    %ecx
0x00000000000c2e5a:  cmp    $0x5,%ecx
0x00000000000c2e5e:  jne    0xc2e4a

----------------
IN: 
0x00000000000c2e60:  addr32 mov %cs:0x26(%ebx),%esi
0x00000000000c2e66:  xor    %cl,%cl
0x00000000000c2e68:  mov    $0x3ce,%edx
0x00000000000c2e6e:  addr32 mov %cs:(%esi,%ecx,1),%al
0x00000000000c2e73:  shl    $0x8,%eax
0x00000000000c2e77:  or     %ecx,%eax
0x00000000000c2e7a:  out    %ax,(%dx)
0x00000000000c2e7b:  inc    %ecx
0x00000000000c2e7d:  cmp    $0x9,%ecx
0x00000000000c2e81:  jne    0xc2e6e

----------------
IN: 
0x00000000000c2e6e:  addr32 mov %cs:(%esi,%ecx,1),%al
0x00000000000c2e73:  shl    $0x8,%eax
0x00000000000c2e77:  or     %ecx,%eax
0x00000000000c2e7a:  out    %ax,(%dx)
0x00000000000c2e7b:  inc    %ecx
0x00000000000c2e7d:  cmp    $0x9,%ecx
0x00000000000c2e81:  jne    0xc2e6e

----------------
IN: 
0x00000000000c2e83:  addr32 mov %cs:0x1a(%ebx),%al
0x00000000000c2e88:  mov    %eax,%esi
0x00000000000c2e8b:  mov    $0x3b4,%edx
0x00000000000c2e91:  test   $0x1,%al
0x00000000000c2e93:  je     0xc2e97

----------------
IN: 
0x00000000000c2e95:  mov    $0xd4,%dl
0x00000000000c2e97:  mov    $0x11,%eax
0x00000000000c2e9d:  out    %ax,(%dx)
0x00000000000c2e9e:  addr32 mov %cs:0x1e(%ebx),%edi
0x00000000000c2ea4:  xor    %ecx,%ecx
0x00000000000c2ea7:  addr32 mov %cs:(%edi,%ecx,1),%al
0x00000000000c2eac:  shl    $0x8,%eax
0x00000000000c2eb0:  or     %ecx,%eax
0x00000000000c2eb3:  out    %ax,(%dx)
0x00000000000c2eb4:  inc    %ecx
0x00000000000c2eb6:  cmp    $0x19,%ecx
0x00000000000c2eba:  jne    0xc2ea7

----------------
IN: 
0x00000000000c2ea7:  addr32 mov %cs:(%edi,%ecx,1),%al
0x00000000000c2eac:  shl    $0x8,%eax
0x00000000000c2eb0:  or     %ecx,%eax
0x00000000000c2eb3:  out    %ax,(%dx)
0x00000000000c2eb4:  inc    %ecx
0x00000000000c2eb6:  cmp    $0x19,%ecx
0x00000000000c2eba:  jne    0xc2ea7

----------------
IN: 
0x00000000000c2ebc:  mov    $0x3c2,%edx
0x00000000000c2ec2:  mov    %esi,%eax
0x00000000000c2ec5:  out    %al,(%dx)
0x00000000000c2ec6:  mov    $0xda,%dl
0x00000000000c2ec8:  in     (%dx),%al
0x00000000000c2ec9:  mov    $0xc0,%dl
0x00000000000c2ecb:  mov    $0x20,%al
0x00000000000c2ecd:  out    %al,(%dx)
0x00000000000c2ece:  addr32 mov -0x10(%ebp),%edi
0x00000000000c2ed3:  and    $0x8000,%edi
0x00000000000c2eda:  jne    0xc2f1e

----------------
IN: 
0x00000000000c2edc:  addr32 mov %cs:(%ebx),%al
0x00000000000c2ee0:  test   %al,%al
0x00000000000c2ee2:  je     0xc2ef7

----------------
IN: 
0x00000000000c2ef7:  addr32 mov %cs:0xa(%ebx),%ax
0x00000000000c2efc:  mov    %ax,%es
0x00000000000c2efe:  mov    $0x4000,%ecx
0x00000000000c2f04:  mov    $0x720,%eax
0x00000000000c2f0a:  jmp    0xc2f1c

----------------
IN: 
0x00000000000c2f1c:  rep stos %ax,%es:(%di)

----------------
IN: 
0x00000000000c2f1e:  addr32 mov %cs:(%ebx),%al
0x00000000000c2f22:  test   %al,%al
0x00000000000c2f24:  jne    0xc2b73

----------------
IN: 
0x00000000000c2f28:  mov    %cs,%ax
0x00000000000c2f2a:  movzwl %ax,%eax
0x00000000000c2f2e:  pushl  $0x10
0x00000000000c2f31:  pushl  $0x0
0x00000000000c2f34:  pushl  $0x0
0x00000000000c2f37:  mov    $0x100,%ecx
0x00000000000c2f3d:  mov    $0x62a8,%edx
0x00000000000c2f43:  push   %ax
0x00000000000c2f44:  call   0xc0584

----------------
IN: 
0x00000000000c0584:  push   %ebp
0x00000000000c0586:  mov    %esp,%ebp
0x00000000000c0589:  push   %edi
0x00000000000c058b:  push   %esi
0x00000000000c058d:  push   %ebx
0x00000000000c058f:  sub    $0x10,%esp
0x00000000000c0593:  mov    %edx,%ebx
0x00000000000c0596:  addr32 mov 0xc(%ebp),%esi
0x00000000000c059b:  addr32 mov %ax,-0x1a(%ebp)
0x00000000000c059f:  addr32 mov %cx,-0x1c(%ebp)
0x00000000000c05a3:  mov    $0x3c4,%edx
0x00000000000c05a9:  mov    $0x100,%eax
0x00000000000c05af:  out    %ax,(%dx)
0x00000000000c05b0:  mov    $0x402,%eax
0x00000000000c05b6:  out    %ax,(%dx)
0x00000000000c05b7:  mov    $0x704,%eax
0x00000000000c05bd:  out    %ax,(%dx)
0x00000000000c05be:  mov    $0x300,%eax
0x00000000000c05c4:  out    %ax,(%dx)
0x00000000000c05c5:  mov    $0xce,%dl
0x00000000000c05c7:  mov    $0x204,%eax
0x00000000000c05cd:  out    %ax,(%dx)
0x00000000000c05ce:  mov    $0x5,%eax
0x00000000000c05d4:  out    %ax,(%dx)
0x00000000000c05d5:  mov    $0x406,%eax
0x00000000000c05db:  out    %ax,(%dx)
0x00000000000c05dc:  addr32 movzbl 0x10(%ebp),%eax
0x00000000000c05e2:  addr32 mov %eax,-0x14(%ebp)
0x00000000000c05e7:  addr32 mov %ebx,-0x10(%ebp)
0x00000000000c05ec:  mov    %esi,%eax
0x00000000000c05ef:  and    $0x4,%eax
0x00000000000c05f3:  movzbl %al,%eax
0x00000000000c05f7:  shl    $0xb,%eax
0x00000000000c05fb:  shl    $0xe,%esi
0x00000000000c05ff:  add    %eax,%esi
0x00000000000c0602:  movzwl %si,%esi
0x00000000000c0606:  addr32 movzwl 0x8(%ebp),%eax
0x00000000000c060c:  shl    $0x5,%eax

----------------
IN: 
0x00000000000c0610:  add    %esi,%eax
0x00000000000c0613:  addr32 mov %eax,-0x18(%ebp)
0x00000000000c0618:  xor    %ebx,%ebx
0x00000000000c061b:  addr32 cmp -0x1c(%ebp),%bx
0x00000000000c061f:  je     0xc0658

----------------
IN: 
0x00000000000c0621:  mov    $0xffffa000,%edi
0x00000000000c0627:  mov    %di,%es
0x00000000000c0629:  addr32 mov -0x14(%ebp),%ecx
0x00000000000c062e:  addr32 mov -0x10(%ebp),%esi
0x00000000000c0633:  addr32 mov -0x18(%ebp),%edi
0x00000000000c0638:  addr32 mov -0x1a(%ebp),%ax
0x00000000000c063c:  mov    %ds,%dx
0x00000000000c063e:  mov    %ax,%ds
0x00000000000c0640:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c0640:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000c0642:  mov    %dx,%ds
0x00000000000c0644:  inc    %ebx
0x00000000000c0646:  addr32 mov -0x14(%ebp),%eax
0x00000000000c064b:  addr32 add %eax,-0x10(%ebp)
0x00000000000c0650:  addr32 addl $0x20,-0x18(%ebp)
0x00000000000c0656:  jmp    0xc061b

----------------
IN: 
0x00000000000c061b:  addr32 cmp -0x1c(%ebp),%bx
0x00000000000c061f:  je     0xc0658

----------------
IN: 
0x00000000000c0658:  mov    $0x3c4,%edx
0x00000000000c065e:  mov    $0x100,%eax
0x00000000000c0664:  out    %ax,(%dx)
0x00000000000c0665:  mov    $0x302,%eax
0x00000000000c066b:  out    %ax,(%dx)
0x00000000000c066c:  mov    $0x4,%al
0x00000000000c066e:  out    %ax,(%dx)
0x00000000000c066f:  xor    %al,%al
0x00000000000c0671:  out    %ax,(%dx)
0x00000000000c0672:  mov    $0xcc,%dl
0x00000000000c0674:  in     (%dx),%al
0x00000000000c0675:  mov    $0xa,%ecx
0x00000000000c067b:  test   $0x1,%al
0x00000000000c067d:  je     0xc0681

----------------
IN: 
0x00000000000c067f:  mov    $0xe,%cl
0x00000000000c0681:  mov    %ecx,%eax
0x00000000000c0684:  shl    $0x8,%eax
0x00000000000c0688:  or     $0x6,%eax
0x00000000000c068c:  mov    $0x3ce,%edx
0x00000000000c0692:  out    %ax,(%dx)
0x00000000000c0693:  mov    $0x4,%eax
0x00000000000c0699:  out    %ax,(%dx)
0x00000000000c069a:  mov    $0x1005,%eax
0x00000000000c06a0:  out    %ax,(%dx)
0x00000000000c06a1:  add    $0x10,%esp
0x00000000000c06a5:  pop    %ebx
0x00000000000c06a7:  pop    %esi
0x00000000000c06a9:  pop    %edi
0x00000000000c06ab:  pop    %ebp
0x00000000000c06ad:  ret    $0x2

----------------
IN: 
0x00000000000c2f47:  add    $0xc,%esp
0x00000000000c2f4b:  jmp    0xc2b73

----------------
IN: 
0x00000000000c2b73:  addr32 mov %cs:0x2(%ebx),%dx
0x00000000000c2b78:  movzwl %dx,%eax
0x00000000000c2b7c:  addr32 mov %eax,-0x1c(%ebp)
0x00000000000c2b81:  addr32 mov %cs:0x4(%ebx),%di
0x00000000000c2b86:  movzwl %di,%ecx
0x00000000000c2b8a:  addr32 mov %cs:(%ebx),%al
0x00000000000c2b8e:  addr32 mov %al,-0x1d(%ebp)
0x00000000000c2b92:  addr32 mov %cs:0x8(%ebx),%al
0x00000000000c2b97:  addr32 mov %al,-0x18(%ebp)
0x00000000000c2b9b:  mov    $0x40,%eax
0x00000000000c2ba1:  addr32 cmpl $0xff,-0x14(%ebp)
0x00000000000c2baa:  jg     0xc2bb4

----------------
IN: 
0x00000000000c2bac:  mov    %ax,%es
0x00000000000c2bae:  addr32 mov -0x14(%ebp),%al
0x00000000000c2bb2:  jmp    0xc2bb8

----------------
IN: 
0x00000000000c2bb8:  mov    %al,%es:0x49
0x00000000000c2bbc:  mov    $0x40,%esi
0x00000000000c2bc2:  mov    %si,%es
0x00000000000c2bc4:  addr32 mov -0x10(%ebp),%eax
0x00000000000c2bc9:  and    $0xfe00,%ax
0x00000000000c2bcc:  addr32 or -0x14(%ebp),%eax
0x00000000000c2bd1:  mov    %ax,%es:0xba
0x00000000000c2bd5:  addr32 cmpb $0x0,-0x1d(%ebp)
0x00000000000c2bda:  jne    0xc2bf8

----------------
IN: 
0x00000000000c2bdc:  mov    %si,%es
0x00000000000c2bde:  mov    %dx,%es:0x4a
0x00000000000c2be3:  mov    %si,%es
0x00000000000c2be5:  addr32 lea -0x1(%edi),%eax
0x00000000000c2bea:  mov    %al,%es:0x84
0x00000000000c2bee:  mov    %si,%es
0x00000000000c2bf0:  mov    $0x607,%eax
0x00000000000c2bf6:  jmp    0xc2c2c

----------------
IN: 
0x00000000000c2c2c:  mov    %ax,%es:0x60
0x00000000000c2c30:  addr32 movzbl -0x1d(%ebp),%eax
0x00000000000c2c36:  addr32 mov -0x1c(%ebp),%edx
0x00000000000c2c3b:  push   %ax
0x00000000000c2c3c:  call   0xc0025

----------------
IN: 
0x00000000000c2c3f:  mov    $0x40,%ebx
0x00000000000c2c45:  mov    %bx,%es
0x00000000000c2c47:  mov    %ax,%es:0x4c
0x00000000000c2c4b:  push   %ax
0x00000000000c2c4c:  call   0xc06b0

----------------
IN: 
0x00000000000c2c4f:  mov    %bx,%es
0x00000000000c2c51:  mov    %ax,%es:0x63
0x00000000000c2c55:  mov    %bx,%es
0x00000000000c2c57:  addr32 movzbl -0x18(%ebp),%eax
0x00000000000c2c5d:  mov    %ax,%es:0x85
0x00000000000c2c61:  addr32 mov -0x10(%ebp),%eax
0x00000000000c2c66:  and    $0x8000,%eax
0x00000000000c2c6c:  cmp    $0x1,%eax
0x00000000000c2c70:  sbb    %eax,%eax
0x00000000000c2c73:  and    $0xffffff80,%eax
0x00000000000c2c77:  sub    $0x20,%eax
0x00000000000c2c7b:  mov    %bx,%es
0x00000000000c2c7d:  mov    %al,%es:0x87
0x00000000000c2c81:  mov    %bx,%es
0x00000000000c2c83:  mov    $0xf9,%al
0x00000000000c2c85:  mov    %al,%es:0x88
0x00000000000c2c89:  mov    %bx,%es
0x00000000000c2c8b:  mov    %es:0x89,%al
0x00000000000c2c8f:  mov    %bx,%es
0x00000000000c2c91:  and    $0x7f,%eax
0x00000000000c2c95:  mov    %al,%es:0x89
0x00000000000c2c99:  xor    %ecx,%ecx
0x00000000000c2c9c:  mov    $0x40,%esi
0x00000000000c2ca2:  xor    %bl,%bl
0x00000000000c2ca4:  mov    $0x40,%eax
0x00000000000c2caa:  mov    %si,%es
0x00000000000c2cac:  xor    %edx,%edx
0x00000000000c2caf:  addr32 mov %bx,%es:0x50(%ecx,%ecx,1)
0x00000000000c2cb5:  inc    %ecx
0x00000000000c2cb7:  cmp    $0x8,%ecx
0x00000000000c2cbb:  jne    0xc2ca4

----------------
IN: 
0x00000000000c2ca4:  mov    $0x40,%eax
0x00000000000c2caa:  mov    %si,%es
0x00000000000c2cac:  xor    %edx,%edx
0x00000000000c2caf:  addr32 mov %bx,%es:0x50(%ecx,%ecx,1)
0x00000000000c2cb5:  inc    %ecx
0x00000000000c2cb7:  cmp    $0x8,%ecx
0x00000000000c2cbb:  jne    0xc2ca4

----------------
IN: 
0x00000000000c2cbd:  mov    %ax,%es
0x00000000000c2cbf:  mov    %dx,%es:0x4e
0x00000000000c2cc4:  mov    %ax,%es
0x00000000000c2cc6:  xor    %ecx,%ecx
0x00000000000c2cc9:  mov    %cl,%es:0x62
0x00000000000c2cce:  mov    %ax,%es
0x00000000000c2cd0:  mov    $0x8,%bl
0x00000000000c2cd2:  mov    %bl,%es:0x8a
0x00000000000c2cd7:  mov    %cs,%si
0x00000000000c2cd9:  shl    $0x10,%esi
0x00000000000c2cdd:  mov    $0x901c,%ebx
0x00000000000c2ce3:  movzwl %bx,%ebx
0x00000000000c2ce7:  or     %esi,%ebx
0x00000000000c2cea:  mov    %ax,%es
0x00000000000c2cec:  mov    %ebx,%es:0xa8
0x00000000000c2cf2:  mov    %ax,%es
0x00000000000c2cf4:  mov    %cl,%es:0x65
0x00000000000c2cf9:  mov    %ax,%es
0x00000000000c2cfb:  mov    %cl,%es:0x66
0x00000000000c2d00:  mov    %cs,%cx
0x00000000000c2d02:  shl    $0x10,%ecx
0x00000000000c2d06:  mov    $0x84a8,%eax
0x00000000000c2d0c:  movzwl %ax,%eax
0x00000000000c2d10:  or     %ecx,%eax
0x00000000000c2d13:  mov    %dx,%es
0x00000000000c2d15:  mov    %eax,%es:0x7c
0x00000000000c2d1a:  addr32 mov -0x18(%ebp),%al
0x00000000000c2d1e:  cmp    $0xe,%al
0x00000000000c2d20:  je     0xc2d38

----------------
IN: 
0x00000000000c2d22:  cmp    $0x10,%al
0x00000000000c2d24:  je     0xc2d54

----------------
IN: 
0x00000000000c2d54:  mov    %cs,%cx
0x00000000000c2d56:  shl    $0x10,%ecx
0x00000000000c2d5a:  mov    $0x62a8,%eax
0x00000000000c2d60:  jmp    0xc2d44

----------------
IN: 
0x00000000000c2d44:  movzwl %ax,%eax
0x00000000000c2d48:  or     %ecx,%eax
0x00000000000c2d4b:  mov    %dx,%es
0x00000000000c2d4d:  mov    %eax,%es:0x10c
0x00000000000c2d52:  jmp    0xc2d62

----------------
IN: 
0x00000000000c2d62:  xor    %eax,%eax
0x00000000000c2d65:  jmp    0xc2f4e

----------------
IN: 
0x00000000000c2f4e:  addr32 lea -0xc(%ebp),%esp
0x00000000000c2f53:  pop    %ebx
0x00000000000c2f55:  pop    %esi
0x00000000000c2f57:  pop    %edi
0x00000000000c2f59:  pop    %ebp
0x00000000000c2f5b:  ret    $0x2

----------------
IN: 
0x00000000000c4dd2:  mov    %esp,%eax
0x00000000000c4dd5:  addr32 mov 0x2a(%eax),%ss

----------------
IN: 
0x00000000000c4dd9:  addr32 mov 0x26(%eax),%esp

----------------
IN: 
0x00000000000c4dde:  pop    %edx
0x00000000000c4de0:  pop    %dx
0x00000000000c4de1:  addr32 pushw 0x24(%eax)
0x00000000000c4de5:  addr32 pushl 0x20(%eax)
0x00000000000c4dea:  addr32 mov 0x4(%eax),%edi
0x00000000000c4def:  addr32 mov 0x8(%eax),%esi
0x00000000000c4df4:  addr32 mov 0xc(%eax),%ebp
0x00000000000c4df9:  addr32 mov 0x10(%eax),%ebx
0x00000000000c4dfe:  addr32 mov 0x14(%eax),%edx
0x00000000000c4e03:  addr32 mov 0x18(%eax),%ecx
0x00000000000c4e08:  addr32 mov 0x2(%eax),%es
0x00000000000c4e0c:  addr32 pushw (%eax)
0x00000000000c4e0f:  addr32 pushl 0x1c(%eax)
0x00000000000c4e14:  pop    %eax
0x00000000000c4e16:  pop    %ds
0x00000000000c4e17:  iret   

----------------
IN: 
0x00000000000fd33a:  lret   

----------------
IN: 
0x000000003ffb056b:  pop    %ecx
0x000000003ffb056c:  jmp    0xf1bad

----------------
IN: 
0x000000003ffb45a7:  movl   $0xf64e0,0x4(%esp)
0x000000003ffb45af:  movl   $0xf4d74,(%esp)
0x000000003ffb45b6:  call   0xf2a42

----------------
IN: 
0x00000000000f2a42:  lea    0x8(%esp),%ecx
0x00000000000f2a46:  mov    0x4(%esp),%edx
0x00000000000f2a4a:  mov    $0xf64d8,%eax
0x00000000000f2a4f:  call   0xf1943

----------------
IN: 
0x00000000000f1c92:  push   %ebx
0x00000000000f1c93:  mov    %edx,%ebx
0x00000000000f1c95:  cmpl   $0x0,0xf65c4
0x00000000000f1c9c:  je     0xf1ca8

----------------
IN: 
0x00000000000f1c9e:  mov    0xf68fc,%dx
0x00000000000f1ca5:  mov    %bl,%al
0x00000000000f1ca7:  out    %al,(%dx)
0x00000000000f1ca8:  cmp    $0xa,%bl
0x00000000000f1cab:  jne    0xf1cb7

----------------
IN: 
0x00000000000f1cb7:  movsbl %bl,%eax
0x00000000000f1cba:  pop    %ebx
0x00000000000f1cbb:  jmp    0xf1c48

----------------
IN: 
0x00000000000f1c48:  push   %ebx
0x00000000000f1c49:  sub    $0x28,%esp
0x00000000000f1c4c:  mov    %eax,%ebx
0x00000000000f1c4e:  mov    $0x26,%ecx
0x00000000000f1c53:  xor    %edx,%edx
0x00000000000f1c55:  lea    0x2(%esp),%eax
0x00000000000f1c59:  call   0xf118c

----------------
IN: 
0x00000000000f1c5e:  movw   $0x200,0x26(%esp)
0x00000000000f1c65:  movb   $0xe,0x1f(%esp)
0x00000000000f1c6a:  mov    %bl,0x1e(%esp)
0x00000000000f1c6e:  movb   $0x7,0x12(%esp)
0x00000000000f1c73:  movw   $0xf000,0x24(%esp)
0x00000000000f1c7a:  mov    $0xfd338,%eax
0x00000000000f1c7f:  mov    %ax,0x22(%esp)
0x00000000000f1c84:  lea    0x2(%esp),%eax
0x00000000000f1c88:  call   0xf1c1b

----------------
IN: 
0x00000000000c3e72:  cmp    $0x11,%al
0x00000000000c3e74:  je     0xc4445

----------------
IN: 
0x00000000000c3e78:  ja     0xc3eb0

----------------
IN: 
0x00000000000c3e7a:  cmp    $0xe,%al
0x00000000000c3e7c:  je     0xc4169

----------------
IN: 
0x00000000000c4169:  addr32 mov 0x1c(%ebx),%dl
0x00000000000c416d:  addr32 mov 0x10(%ebx),%al
0x00000000000c4171:  addr32 lea -0xc(%ebp),%esp
0x00000000000c4176:  pop    %ebx
0x00000000000c4178:  pop    %esi
0x00000000000c417a:  pop    %edi
0x00000000000c417c:  pop    %ebp
0x00000000000c417e:  jmp    0xc2531

----------------
IN: 
0x00000000000c2531:  push   %ebp
0x00000000000c2533:  mov    %esp,%ebp
0x00000000000c2536:  push   %ebx
0x00000000000c2538:  sub    $0x8,%esp
0x00000000000c253c:  mov    %al,%bl
0x00000000000c253e:  addr32 mov %edx,-0xc(%ebp)
0x00000000000c2543:  mov    $0xff,%eax
0x00000000000c2549:  push   %ax
0x00000000000c254a:  call   0xc1252

----------------
IN: 
0x00000000000c1252:  push   %ebp
0x00000000000c1254:  mov    %esp,%ebp
0x00000000000c1257:  mov    %al,%dl
0x00000000000c1259:  inc    %al
0x00000000000c125b:  jne    0xc126a

----------------
IN: 
0x00000000000c125d:  mov    $0x40,%eax
0x00000000000c1263:  mov    %ax,%es
0x00000000000c1265:  mov    %es:0x62,%dl
0x00000000000c126a:  mov    $0xfe0000,%eax
0x00000000000c1270:  cmp    $0x7,%dl
0x00000000000c1273:  ja     0xc129c

----------------
IN: 
0x00000000000c1275:  mov    $0x40,%eax
0x00000000000c127b:  mov    %ax,%es
0x00000000000c127d:  movzbl %dl,%edx
0x00000000000c1281:  addr32 mov %es:0x50(%edx,%edx,1),%cx
0x00000000000c1287:  xor    %eax,%eax
0x00000000000c128a:  mov    %cl,%al
0x00000000000c128c:  shr    $0x8,%cx
0x00000000000c128f:  mov    %cl,%ah
0x00000000000c1291:  shl    $0x10,%edx
0x00000000000c1295:  movzwl %ax,%eax
0x00000000000c1299:  or     %edx,%eax
0x00000000000c129c:  pop    %ebp
0x00000000000c129e:  ret    $0x2

----------------
IN: 
0x00000000000c254d:  addr32 mov %eax,-0x8(%ebp)
0x00000000000c2552:  pushl  $0x0
0x00000000000c2555:  mov    %bl,%cl
0x00000000000c2557:  addr32 mov -0xc(%ebp),%edx
0x00000000000c255c:  addr32 lea -0x8(%ebp),%eax
0x00000000000c2561:  push   %ax
0x00000000000c2562:  call   0xc244c

----------------
IN: 
0x00000000000c244c:  push   %ebp
0x00000000000c244e:  mov    %esp,%ebp
0x00000000000c2451:  push   %edi
0x00000000000c2453:  push   %esi
0x00000000000c2455:  push   %ebx
0x00000000000c2457:  push   %ebx
0x00000000000c2459:  mov    %eax,%ebx
0x00000000000c245c:  cmp    $0x8,%dl
0x00000000000c245f:  je     0xc247a

----------------
IN: 
0x00000000000c2461:  ja     0xc246a

----------------
IN: 
0x00000000000c246a:  cmp    $0xa,%dl
0x00000000000c246d:  je     0xc2488

----------------
IN: 
0x00000000000c246f:  cmp    $0xd,%dl
0x00000000000c2472:  jne    0xc248e

----------------
IN: 
0x00000000000c248e:  addr32 mov 0x8(%ebp),%al
0x00000000000c2492:  push   %eax
0x00000000000c2494:  mov    %ebx,%eax
0x00000000000c2497:  push   %ax
0x00000000000c2498:  call   0xc22ba

----------------
IN: 
0x00000000000c22ba:  push   %ebp
0x00000000000c22bc:  mov    %esp,%ebp
0x00000000000c22bf:  push   %edi
0x00000000000c22c1:  push   %esi
0x00000000000c22c3:  push   %ebx
0x00000000000c22c5:  sub    $0xc,%esp
0x00000000000c22c9:  mov    %eax,%ebx
0x00000000000c22cc:  addr32 mov %dl,-0xd(%ebp)
0x00000000000c22d0:  mov    %ecx,%edi
0x00000000000c22d3:  addr32 mov (%eax),%al
0x00000000000c22d6:  addr32 mov %al,-0xe(%ebp)
0x00000000000c22da:  addr32 mov 0x1(%ebx),%dl
0x00000000000c22de:  addr32 mov %edx,-0x18(%ebp)
0x00000000000c22e3:  addr32 mov 0x2(%ebx),%cl
0x00000000000c22e7:  addr32 mov %ecx,-0x14(%ebp)
0x00000000000c22ec:  push   %ax
0x00000000000c22ed:  call   0xc0fc9

----------------
IN: 
0x00000000000c0fc9:  push   %ebp
0x00000000000c0fcb:  mov    %esp,%ebp
0x00000000000c0fce:  mov    $0x40,%eax
0x00000000000c0fd4:  mov    %ax,%es
0x00000000000c0fd6:  mov    %es:0xba,%ax
0x00000000000c0fda:  and    $0x1ff,%eax
0x00000000000c0fe0:  pop    %ebp
0x00000000000c0fe2:  jmp    0xc0f58

----------------
IN: 
0x00000000000c22f0:  mov    %eax,%esi
0x00000000000c22f3:  test   %eax,%eax
0x00000000000c22f6:  je     0xc235b

----------------
IN: 
0x00000000000c22f8:  addr32 mov %cs:(%eax),%al
0x00000000000c22fc:  test   %al,%al
0x00000000000c22fe:  addr32 mov -0x14(%ebp),%ecx
0x00000000000c2303:  addr32 mov -0x18(%ebp),%edx
0x00000000000c2308:  je     0xc2325

----------------
IN: 
0x00000000000c2325:  addr32 mov -0xe(%ebp),%al
0x00000000000c2329:  push   %ax
0x00000000000c232a:  call   0xc12a1

----------------
IN: 
0x00000000000c12a1:  push   %ebp
0x00000000000c12a3:  mov    %esp,%ebp
0x00000000000c12a6:  push   %esi
0x00000000000c12a8:  push   %ebx
0x00000000000c12aa:  mov    $0x40,%ebx
0x00000000000c12b0:  mov    %bx,%es
0x00000000000c12b2:  mov    %es:0x4a,%si
0x00000000000c12b7:  mov    %bx,%es
0x00000000000c12b9:  mov    %es:0x4c,%bx
0x00000000000c12be:  movzwl %bx,%ebx
0x00000000000c12c2:  movzbl %cl,%ecx
0x00000000000c12c6:  imul   %ecx,%ebx
0x00000000000c12ca:  movzbl %al,%eax
0x00000000000c12ce:  addr32 lea (%ebx,%eax,2),%eax
0x00000000000c12d3:  movzbl %dl,%edx
0x00000000000c12d7:  movzwl %si,%ecx
0x00000000000c12db:  add    %ecx,%ecx
0x00000000000c12de:  imul   %ecx,%edx
0x00000000000c12e2:  add    %edx,%eax
0x00000000000c12e5:  pop    %ebx
0x00000000000c12e7:  pop    %esi
0x00000000000c12e9:  pop    %ebp
0x00000000000c12eb:  ret    $0x2

----------------
IN: 
0x00000000000c232d:  addr32 mov %cs:0xa(%esi),%dx
0x00000000000c2332:  addr32 cmpb $0x0,0x8(%ebp)
0x00000000000c2337:  je     0xc2351

----------------
IN: 
0x00000000000c2351:  mov    %dx,%es
0x00000000000c2353:  addr32 mov -0xd(%ebp),%cl
0x00000000000c2357:  addr32 mov %cl,%es:(%eax)
0x00000000000c235b:  addr32 mov (%ebx),%al
0x00000000000c235e:  inc    %eax
0x00000000000c2360:  addr32 mov %al,(%ebx)
0x00000000000c2363:  mov    $0x40,%edx
0x00000000000c2369:  mov    %dx,%es
0x00000000000c236b:  mov    %es:0x4a,%dx
0x00000000000c2370:  movzbl %al,%eax
0x00000000000c2374:  cmp    %dx,%ax
0x00000000000c2376:  jne    0xc2380

----------------
IN: 
0x00000000000c2380:  addr32 lea -0xc(%ebp),%esp
0x00000000000c2385:  pop    %ebx
0x00000000000c2387:  pop    %esi
0x00000000000c2389:  pop    %edi
0x00000000000c238b:  pop    %ebp
0x00000000000c238d:  ret    $0x2

----------------
IN: 
0x00000000000c249b:  pop    %eax
0x00000000000c249d:  mov    $0x40,%edi
0x00000000000c24a3:  mov    %di,%es
0x00000000000c24a5:  mov    %es:0x84,%al
0x00000000000c24a9:  mov    %al,%cl
0x00000000000c24ab:  addr32 mov %al,-0xd(%ebp)
0x00000000000c24af:  addr32 mov 0x1(%ebx),%al
0x00000000000c24b3:  cmp    %al,%cl
0x00000000000c24b5:  jae    0xc2521

----------------
IN: 
0x00000000000c2521:  addr32 lea -0xc(%ebp),%esp
0x00000000000c2526:  pop    %ebx
0x00000000000c2528:  pop    %esi
0x00000000000c252a:  pop    %edi
0x00000000000c252c:  pop    %ebp
0x00000000000c252e:  ret    $0x2

----------------
IN: 
0x00000000000c2565:  pop    %ebx
0x00000000000c2567:  addr32 mov -0x6(%ebp),%cl
0x00000000000c256b:  addr32 mov -0x7(%ebp),%dl
0x00000000000c256f:  addr32 mov -0x8(%ebp),%al
0x00000000000c2573:  push   %ax
0x00000000000c2574:  call   0xc12ee

----------------
IN: 
0x00000000000c12ee:  cmp    $0x7,%cl
0x00000000000c12f1:  ja     0xc137a

----------------
IN: 
0x00000000000c12f5:  push   %ebp
0x00000000000c12f7:  mov    %esp,%ebp
0x00000000000c12fa:  push   %edi
0x00000000000c12fc:  push   %esi
0x00000000000c12fe:  push   %ebx
0x00000000000c1300:  push   %ebx
0x00000000000c1302:  mov    $0x40,%edi
0x00000000000c1308:  mov    %di,%es
0x00000000000c130a:  movzbl %cl,%esi
0x00000000000c130e:  addr32 mov %esi,-0x10(%ebp)
0x00000000000c1313:  mov    %edx,%ebx
0x00000000000c1316:  shl    $0x8,%ebx
0x00000000000c131a:  movzbl %al,%esi
0x00000000000c131e:  or     %esi,%ebx
0x00000000000c1321:  addr32 mov -0x10(%ebp),%esi
0x00000000000c1326:  addr32 mov %bx,%es:0x50(%esi,%esi,1)
0x00000000000c132c:  mov    %di,%es
0x00000000000c132e:  mov    %es:0x62,%bl
0x00000000000c1333:  cmp    %bl,%cl
0x00000000000c1335:  jne    0xc1370

----------------
IN: 
0x00000000000c1337:  push   %ax
0x00000000000c1338:  call   0xc12a1

----------------
IN: 
0x00000000000c133b:  mov    %eax,%ebx
0x00000000000c133e:  push   %ax
0x00000000000c133f:  call   0xc06b0

----------------
IN: 
0x00000000000c1342:  mov    %eax,%ecx
0x00000000000c1345:  mov    $0x2,%esi
0x00000000000c134b:  mov    %ebx,%eax
0x00000000000c134e:  cltd   
0x00000000000c1350:  idiv   %esi
0x00000000000c1353:  mov    %eax,%ebx
0x00000000000c1356:  and    $0xff00,%eax
0x00000000000c135c:  or     $0xe,%eax
0x00000000000c1360:  mov    %ecx,%edx
0x00000000000c1363:  out    %ax,(%dx)
0x00000000000c1364:  mov    %ebx,%eax
0x00000000000c1367:  shl    $0x8,%eax
0x00000000000c136b:  or     $0xf,%eax
0x00000000000c136f:  out    %ax,(%dx)
0x00000000000c1370:  pop    %eax
0x00000000000c1372:  pop    %ebx
0x00000000000c1374:  pop    %esi
0x00000000000c1376:  pop    %edi
0x00000000000c1378:  pop    %ebp
0x00000000000c137a:  ret    $0x2

----------------
IN: 
0x00000000000c2577:  addr32 mov -0x4(%ebp),%ebx
0x00000000000c257c:  mov    %ebp,%esp
0x00000000000c257f:  pop    %ebp
0x00000000000c2581:  ret    $0x2

----------------
IN: 
0x00000000000f1c8d:  add    $0x28,%esp
0x00000000000f1c90:  pop    %ebx
0x00000000000f1c91:  ret    

----------------
IN: 
0x00000000000f1cad:  mov    $0xd,%eax
0x00000000000f1cb2:  call   0xf1c48

Servicing hardware INT=0x08
----------------
IN: 
0x00000000000c2474:  addr32 movb $0x0,(%eax)
0x00000000000c2478:  jmp    0xc249d

----------------
IN: 
0x00000000000c249d:  mov    $0x40,%edi
0x00000000000c24a3:  mov    %di,%es
0x00000000000c24a5:  mov    %es:0x84,%al
0x00000000000c24a9:  mov    %al,%cl
0x00000000000c24ab:  addr32 mov %al,-0xd(%ebp)
0x00000000000c24af:  addr32 mov 0x1(%ebx),%al
0x00000000000c24b3:  cmp    %al,%cl
0x00000000000c24b5:  jae    0xc2521

----------------
IN: 
0x00000000000c2488:  addr32 incb 0x1(%eax)
0x00000000000c248c:  jmp    0xc249d

----------------
IN: 
0x00000000000f2a54:  ret    

----------------
IN: 
0x000000003ffb45bb:  mov    0x3ffbff1b,%edi
0x000000003ffb45c1:  xor    %edx,%edx
0x000000003ffb45c3:  mov    %edi,%eax
0x000000003ffb45c5:  call   0x3ffaf466

----------------
IN: 
0x000000003ffb45ca:  mov    %eax,%ebx
0x000000003ffb45cc:  test   %eax,%eax
0x000000003ffb45ce:  je     0x3ffb46a2

----------------
IN: 
0x000000003ffb45d4:  cmpb   $0x1,(%ebx)
0x000000003ffb45d7:  jne    0x3ffb469b

----------------
IN: 
0x000000003ffb469b:  mov    %ebx,%edx
0x000000003ffb469d:  jmp    0x3ffb45c3

----------------
IN: 
0x000000003ffb45c3:  mov    %edi,%eax
0x000000003ffb45c5:  call   0x3ffaf466

----------------
IN: 
0x000000003ffb45dd:  movzbl 0x1(%ebx),%eax
0x000000003ffb45e1:  cmp    $0x17,%eax
0x000000003ffb45e4:  jle    0x3ffb469b

----------------
IN: 
0x000000003ffb45ea:  lea    0x46(%esp),%edi
0x000000003ffb45ee:  mov    $0x4,%ecx
0x000000003ffb45f3:  xor    %eax,%eax
0x000000003ffb45f5:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x000000003ffb45f5:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x000000003ffb45f7:  lea    0x8(%ebx),%eax
0x000000003ffb45fa:  mov    $0x10,%cl
0x000000003ffb45fc:  lea    0x46(%esp),%edx
0x000000003ffb4600:  call   0x3ffaeb34

----------------
IN: 
0x000000003ffb4605:  test   %eax,%eax
0x000000003ffb4607:  je     0x3ffb46a2

----------------
IN: 
0x000000003ffb46a2:  add    $0x7c,%esp
0x000000003ffb46a5:  pop    %ebx
0x000000003ffb46a6:  pop    %edi
0x000000003ffb46a7:  ret    

----------------
IN: 
0x000000003ffbb8af:  cmpl   $0x2,0xf65d8
0x000000003ffbb8b6:  je     0x3ffbb8c2

----------------
IN: 
0x000000003ffbb8b8:  call   0x3ffb9c86

----------------
IN: 
0x000000003ffb9c86:  push   %ebp
0x000000003ffb9c87:  push   %edi
0x000000003ffb9c88:  push   %esi
0x000000003ffb9c89:  push   %ebx
0x000000003ffb9c8a:  sub    $0x34,%esp
0x000000003ffb9c8d:  xor    %edx,%edx
0x000000003ffb9c8f:  mov    $0x3ffb1d92,%eax
0x000000003ffb9c94:  call   0x3ffafeee

----------------
IN: 
0x000000003ffafeee:  push   %ebp
0x000000003ffafeef:  push   %edi
0x000000003ffafef0:  push   %esi
0x000000003ffafef1:  push   %ebx
0x000000003ffafef2:  mov    %eax,%edi
0x000000003ffafef4:  mov    %edx,%ebp
0x000000003ffafef6:  cmpl   $0x0,0xf65d8
0x000000003ffafefd:  je     0x3ffaff6a

----------------
IN: 
0x000000003ffafeff:  mov    $0x1000,%ecx
0x000000003ffaff04:  mov    $0x1000,%edx
0x000000003ffaff09:  mov    $0x3ffbfeab,%eax
0x000000003ffaff0e:  call   0x3ffaeed1

----------------
IN: 
0x000000003ffaff13:  mov    %eax,%ebx
0x000000003ffaff15:  test   %eax,%eax
0x000000003ffaff17:  je     0x3ffaff6a

----------------
IN: 
0x000000003ffaff19:  lea    0x1000(%eax),%eax
0x000000003ffaff1f:  mov    %eax,(%ebx)
0x000000003ffaff21:  mov    %esp,%eax
0x000000003ffaff23:  mov    $0xf6bd4,%esi
0x000000003ffaff28:  cmp    $0x100000,%eax
0x000000003ffaff2d:  jbe    0x3ffaff36

----------------
IN: 
0x000000003ffaff36:  lea    0x4(%esi),%edx
0x000000003ffaff39:  lea    0x4(%ebx),%eax
0x000000003ffaff3c:  call   0x3ffaeb06

----------------
IN: 
0x000000003ffaff41:  mov    %ebp,%eax
0x000000003ffaff43:  mov    %edi,%ecx
0x000000003ffaff45:  mov    %esi,%edx
0x000000003ffaff47:  push   $0x3ffaff68
0x000000003ffaff4c:  push   %ebp
0x000000003ffaff4d:  mov    %esp,(%edx)
0x000000003ffaff4f:  mov    (%ebx),%esp
0x000000003ffaff51:  call   *%ecx

----------------
IN: 
0x000000003ffb1d92:  push   %ebp
0x000000003ffb1d93:  push   %edi
0x000000003ffb1d94:  push   %esi
0x000000003ffb1d95:  push   %ebx
0x000000003ffb1d96:  sub    $0x30,%esp
0x000000003ffb1d99:  mov    0x3ffbfee3,%eax
0x000000003ffb1d9e:  lea    -0x4(%eax),%esi
0x000000003ffb1da1:  cmp    $0xfffffffc,%esi
0x000000003ffb1da4:  je     0x3ffb1fb1

----------------
IN: 
0x000000003ffb1daa:  movzwl 0x14(%esi),%eax
0x000000003ffb1dae:  shl    $0x8,%eax
0x000000003ffb1db1:  movzbl 0x16(%esi),%edx
0x000000003ffb1db5:  or     %edx,%eax
0x000000003ffb1db7:  cmp    $0xc0330,%eax
0x000000003ffb1dbc:  jne    0x3ffb1fa6

----------------
IN: 
0x000000003ffb1fa6:  mov    0x4(%esi),%esi
0x000000003ffb1fa9:  sub    $0x4,%esi
0x000000003ffb1fac:  jmp    0x3ffb1da1

----------------
IN: 
0x000000003ffb1da1:  cmp    $0xfffffffc,%esi
0x000000003ffb1da4:  je     0x3ffb1fb1

----------------
IN: 
0x000000003ffb1fb1:  mov    0x3ffbfee3,%eax
0x000000003ffb1fb6:  lea    -0x4(%eax),%esi
0x000000003ffb1fb9:  cmp    $0xfffffffc,%esi
0x000000003ffb1fbc:  je     0x3ffb20b6

----------------
IN: 
0x000000003ffb1fc2:  movzwl 0x14(%esi),%eax
0x000000003ffb1fc6:  shl    $0x8,%eax
0x000000003ffb1fc9:  movzbl 0x16(%esi),%edx
0x000000003ffb1fcd:  or     %edx,%eax
0x000000003ffb1fcf:  cmp    $0xc0320,%eax
0x000000003ffb1fd4:  jne    0x3ffb20ab

----------------
IN: 
0x000000003ffb20ab:  mov    0x4(%esi),%esi
0x000000003ffb20ae:  sub    $0x4,%esi
0x000000003ffb20b1:  jmp    0x3ffb1fb9

----------------
IN: 
0x000000003ffb1fb9:  cmp    $0xfffffffc,%esi
0x000000003ffb1fbc:  je     0x3ffb20b6

----------------
IN: 
0x000000003ffb20b6:  cmpl   $0x0,0x3ffbff33
0x000000003ffb20bd:  je     0x3ffb20c6

----------------
IN: 
0x000000003ffb20c6:  mov    0x3ffbfee3,%eax
0x000000003ffb20cb:  lea    -0x4(%eax),%esi
0x000000003ffb20ce:  cmp    $0xfffffffc,%esi
0x000000003ffb20d1:  je     0x3ffb21d4

----------------
IN: 
0x000000003ffb20d7:  movzwl 0x14(%esi),%eax
0x000000003ffb20db:  shl    $0x8,%eax
0x000000003ffb20de:  movzbl 0x16(%esi),%edx
0x000000003ffb20e2:  or     %edx,%eax
0x000000003ffb20e4:  cmp    $0xc0300,%eax
0x000000003ffb20e9:  jne    0x3ffb21c9

----------------
IN: 
0x000000003ffb21c9:  mov    0x4(%esi),%esi
0x000000003ffb21cc:  sub    $0x4,%esi
0x000000003ffb21cf:  jmp    0x3ffb20ce

----------------
IN: 
0x000000003ffb20ce:  cmp    $0xfffffffc,%esi
0x000000003ffb20d1:  je     0x3ffb21d4

----------------
IN: 
0x000000003ffb21d4:  mov    0x3ffbfee3,%eax
0x000000003ffb21d9:  lea    -0x4(%eax),%ebx
0x000000003ffb21dc:  cmp    $0xfffffffc,%ebx
0x000000003ffb21df:  je     0x3ffb22b8

----------------
IN: 
0x000000003ffb21e5:  movzwl 0x14(%ebx),%eax
0x000000003ffb21e9:  shl    $0x8,%eax
0x000000003ffb21ec:  movzbl 0x16(%ebx),%edx
0x000000003ffb21f0:  or     %edx,%eax
0x000000003ffb21f2:  cmp    $0xc0310,%eax
0x000000003ffb21f7:  jne    0x3ffb22ad

----------------
IN: 
0x000000003ffb22ad:  mov    0x4(%ebx),%ebx
0x000000003ffb22b0:  sub    $0x4,%ebx
0x000000003ffb22b3:  jmp    0x3ffb21dc

----------------
IN: 
0x000000003ffb21dc:  cmp    $0xfffffffc,%ebx
0x000000003ffb21df:  je     0x3ffb22b8

----------------
IN: 
0x000000003ffb22b8:  add    $0x30,%esp
0x000000003ffb22bb:  pop    %ebx
0x000000003ffb22bc:  pop    %esi
0x000000003ffb22bd:  pop    %edi
0x000000003ffb22be:  pop    %ebp
0x000000003ffb22bf:  ret    

----------------
IN: 
0x000000003ffaff53:  mov    %ebx,%eax
0x000000003ffaff55:  mov    0x4(%ebx),%ebx
0x000000003ffaff58:  mov    0xf6bd4,%esp
0x000000003ffaff5e:  call   0x3ffb0571

----------------
IN: 
0x000000003ffb0571:  push   %ebx
0x000000003ffb0572:  push   %edx
0x000000003ffb0573:  mov    %eax,%ebx
0x000000003ffb0575:  lea    0x4(%eax),%eax
0x000000003ffb0578:  call   0x3ffaeaf7

----------------
IN: 
0x000000003ffb057d:  mov    %ebx,%eax
0x000000003ffb057f:  call   0x3ffaefaf

----------------
IN: 
0x000000003ffb0584:  cmpl   $0xf6bd8,0xf6bd8
0x000000003ffb058e:  jne    0x3ffb059c

----------------
IN: 
0x000000003ffb0590:  movl   $0xf4418,(%esp)
0x000000003ffb0597:  call   0xf1cc0

----------------
IN: 
0x000000003ffb059c:  pop    %eax
0x000000003ffb059d:  pop    %ebx
0x000000003ffb059e:  ret    

----------------
IN: 
0x000000003ffaff63:  mov    -0x4(%ebx),%esp
0x000000003ffaff66:  pop    %ebp
0x000000003ffaff67:  ret    

----------------
IN: 
0x000000003ffaff68:  jmp    0x3ffaff6e

----------------
IN: 
0x000000003ffaff6e:  pop    %ebx
0x000000003ffaff6f:  pop    %esi
0x000000003ffaff70:  pop    %edi
0x000000003ffaff71:  pop    %ebp
0x000000003ffaff72:  ret    

----------------
IN: 
0x000000003ffb9c99:  mov    $0x2,%eax
0x000000003ffb9c9e:  call   0x3ffafe37

----------------
IN: 
0x000000003ffb9ca3:  mov    $0xfe987,%eax
0x000000003ffb9ca8:  mov    %ax,0x24
0x000000003ffb9cae:  movw   $0xf000,0x26
0x000000003ffb9cb7:  mov    $0x1000,%eax
0x000000003ffb9cbc:  call   0x3ffafe37

----------------
IN: 
0x000000003ffb9cc1:  mov    $0xfd664,%eax
0x000000003ffb9cc6:  mov    %ax,0x1d0
0x000000003ffb9ccc:  movw   $0xf000,0x1d2
0x000000003ffb9cd5:  xor    %edx,%edx
0x000000003ffb9cd7:  mov    $0x3ffb9075,%eax
0x000000003ffb9cdc:  call   0x3ffafeee

----------------
IN: 
0x000000003ffb9075:  push   %esi
0x000000003ffb9076:  push   %ebx
0x000000003ffb9077:  sub    $0xc,%esp
0x000000003ffb907a:  mov    $0x10,%ebx
0x000000003ffb907f:  in     $0x64,%al
0x000000003ffb9081:  test   $0x1,%al
0x000000003ffb9083:  je     0x3ffb90fb

----------------
IN: 
0x000000003ffb90fb:  lea    0xa(%esp),%edx
0x000000003ffb90ff:  mov    $0x1aa,%eax
0x000000003ffb9104:  call   0x3ffb0fb5

----------------
IN: 
0x000000003ffb0fb5:  push   %ebp
0x000000003ffb0fb6:  push   %edi
0x000000003ffb0fb7:  push   %esi
0x000000003ffb0fb8:  push   %ebx
0x000000003ffb0fb9:  mov    %eax,%esi
0x000000003ffb0fbb:  mov    %edx,%edi
0x000000003ffb0fbd:  call   0xf1cee

----------------
IN: 
0x00000000000f1cee:  push   %ebx
0x00000000000f1cef:  mov    $0x2710,%ebx
0x00000000000f1cf4:  in     $0x64,%al
0x00000000000f1cf6:  test   $0x2,%al
0x00000000000f1cf8:  je     0xf1d1b

----------------
IN: 
0x00000000000f1d1b:  xor    %eax,%eax
0x00000000000f1d1d:  pop    %ebx
0x00000000000f1d1e:  ret    

----------------
IN: 
0x000000003ffb0fc2:  test   %eax,%eax
0x000000003ffb0fc4:  jne    0x3ffb1030

----------------
IN: 
0x000000003ffb0fc6:  mov    %esi,%eax
0x000000003ffb0fc8:  movzbl %al,%eax
0x000000003ffb0fcb:  out    %al,$0x64
0x000000003ffb0fcd:  mov    %esi,%ebp
0x000000003ffb0fcf:  sar    $0xc,%ebp
0x000000003ffb0fd2:  and    $0xf,%ebp
0x000000003ffb0fd5:  xor    %ebx,%ebx
0x000000003ffb0fd7:  cmp    %ebp,%ebx
0x000000003ffb0fd9:  jge    0x3ffb0fec

----------------
IN: 
0x000000003ffb0fec:  sar    $0x8,%esi
0x000000003ffb0fef:  and    $0xf,%esi
0x000000003ffb0ff2:  xor    %ebx,%ebx
0x000000003ffb0ff4:  cmp    %esi,%ebx
0x000000003ffb0ff6:  jge    0x3ffb1024

----------------
IN: 
0x000000003ffb0ff8:  mov    $0x2710,%ebp
0x000000003ffb0ffd:  in     $0x64,%al
0x000000003ffb0fff:  test   $0x1,%al
0x000000003ffb1001:  jne    0x3ffb1028

----------------
IN: 
0x000000003ffb1028:  in     $0x60,%al
0x000000003ffb102a:  mov    %al,(%edi,%ebx,1)
0x000000003ffb102d:  inc    %ebx
0x000000003ffb102e:  jmp    0x3ffb0ff4

----------------
IN: 
0x000000003ffb0ff4:  cmp    %esi,%ebx
0x000000003ffb0ff6:  jge    0x3ffb1024

----------------
IN: 
0x000000003ffb1024:  xor    %eax,%eax
0x000000003ffb1026:  jmp    0x3ffb1030

----------------
IN: 
0x000000003ffb1030:  pop    %ebx
0x000000003ffb1031:  pop    %esi
0x000000003ffb1032:  pop    %edi
0x000000003ffb1033:  pop    %ebp
0x000000003ffb1034:  ret    

----------------
IN: 
0x000000003ffb9109:  test   %eax,%eax
0x000000003ffb910b:  jne    0x3ffb91c2

----------------
IN: 
0x000000003ffb9111:  movzbl 0xa(%esp),%eax
0x000000003ffb9116:  cmp    $0x55,%al
0x000000003ffb9118:  je     0x3ffb9127

----------------
IN: 
0x000000003ffb9127:  lea    0xa(%esp),%edx
0x000000003ffb912b:  mov    $0x1ab,%eax
0x000000003ffb9130:  call   0x3ffb0fb5

----------------
IN: 
0x000000003ffb9135:  test   %eax,%eax
0x000000003ffb9137:  jne    0x3ffb91c2

----------------
IN: 
0x000000003ffb913d:  movzbl 0xa(%esp),%eax
0x000000003ffb9142:  test   %al,%al
0x000000003ffb9144:  je     0x3ffb90a0

----------------
IN: 
0x000000003ffb90a0:  movb   $0x30,0xef7a0
0x000000003ffb90a7:  xor    %edx,%edx
0x000000003ffb90a9:  xor    %ecx,%ecx
0x000000003ffb90ab:  mov    $0xf5571,%eax
0x000000003ffb90b0:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffb90b5:  mov    %eax,%ebx
0x000000003ffb90b7:  call   0xf1894

----------------
IN: 
0x00000000000f1894:  push   %ebx
0x00000000000f1895:  mov    %eax,%ebx
0x00000000000f1897:  call   0xf17ba

----------------
IN: 
0x00000000000f17ba:  mov    0xf6900,%dx
0x00000000000f17c1:  test   %dx,%dx
0x00000000000f17c4:  jne    0xf17de

----------------
IN: 
0x00000000000f17de:  cmp    $0x40,%dx
0x00000000000f17e2:  mov    0xef7a8,%ecx
0x00000000000f17e8:  je     0xf1805

----------------
IN: 
0x00000000000f17ea:  in     (%dx),%eax
0x00000000000f17eb:  and    $0xffffff,%eax
0x00000000000f17f0:  mov    %ecx,%edx
0x00000000000f17f2:  and    $0xff000000,%edx
0x00000000000f17f8:  or     %edx,%eax
0x00000000000f17fa:  cmp    %ecx,%eax
0x00000000000f17fc:  jae    0xf1828

----------------
IN: 
0x00000000000f1828:  mov    %eax,0xef7a8
0x00000000000f182d:  ret    

----------------
IN: 
0x00000000000f189c:  imul   0xf6904,%ebx
0x00000000000f18a3:  add    %ebx,%eax
0x00000000000f18a5:  pop    %ebx
0x00000000000f18a6:  ret    

----------------
IN: 
0x000000003ffb90bc:  mov    %eax,%esi
0x000000003ffb90be:  lea    0xa(%esp),%edx
0x000000003ffb90c2:  mov    $0x2ff,%eax
0x000000003ffb90c7:  call   0x3ffb42e4

----------------
IN: 
0x000000003ffb42e4:  push   %ebp
0x000000003ffb42e5:  push   %edi
0x000000003ffb42e6:  push   %esi
0x000000003ffb42e7:  push   %ebx
0x000000003ffb42e8:  sub    $0x8,%esp
0x000000003ffb42eb:  mov    %eax,%edi
0x000000003ffb42ed:  mov    %edx,%esi
0x000000003ffb42ef:  mov    0xef7a0,%al
0x000000003ffb42f4:  mov    %al,0x6(%esp)
0x000000003ffb42f8:  and    $0xffffffcc,%eax
0x000000003ffb42fb:  or     $0x30,%eax
0x000000003ffb42fe:  mov    %al,0x7(%esp)
0x000000003ffb4302:  lea    0x7(%esp),%edx
0x000000003ffb4306:  mov    $0x1060,%eax
0x000000003ffb430b:  call   0x3ffb0fb5

----------------
IN: 
0x000000003ffb0fdb:  call   0xf1cee

----------------
IN: 
0x000000003ffb0fe0:  test   %eax,%eax
0x000000003ffb0fe2:  jne    0x3ffb1030

----------------
IN: 
0x000000003ffb0fe4:  mov    (%edi,%ebx,1),%al
0x000000003ffb0fe7:  out    %al,$0x60
0x000000003ffb0fe9:  inc    %ebx
0x000000003ffb0fea:  jmp    0x3ffb0fd7

----------------
IN: 
0x000000003ffb0fd7:  cmp    %ebp,%ebx
0x000000003ffb0fd9:  jge    0x3ffb0fec

----------------
IN: 
0x000000003ffb4310:  test   %eax,%eax
0x000000003ffb4312:  jne    0x3ffb446d

----------------
IN: 
0x000000003ffb4318:  call   0xf1b80

----------------
IN: 
0x00000000000f1b89:  and    $0xfffff000,%eax
0x00000000000f1b8e:  cmp    $0xf6bd4,%eax
0x00000000000f1b93:  jne    0xf1ba8

----------------
IN: 
0x00000000000f1ba8:  jmp    0xf105f

----------------
IN: 
0x00000000000f1069:  push   %edi
0x00000000000f106a:  push   %esi
0x00000000000f106b:  push   %ebx
0x00000000000f106c:  push   $0xf1078
0x00000000000f1071:  push   %ebp
0x00000000000f1072:  mov    %esp,(%eax)
0x00000000000f1074:  mov    (%ecx),%esp
0x00000000000f1076:  pop    %ebp
0x00000000000f1077:  ret    

----------------
IN: 
0x000000003ffb9ce1:  mov    $0x37a,%edx
0x000000003ffb9ce6:  in     (%dx),%al
0x000000003ffb9ce7:  and    $0xffffffdf,%eax
0x000000003ffb9cea:  out    %al,(%dx)
0x000000003ffb9ceb:  mov    $0x78,%dl
0x000000003ffb9ced:  mov    $0xaa,%al
0x000000003ffb9cef:  out    %al,(%dx)
0x000000003ffb9cf0:  in     (%dx),%al
0x000000003ffb9cf1:  xor    %ecx,%ecx
0x000000003ffb9cf3:  cmp    $0xaa,%al
0x000000003ffb9cf5:  jne    0x3ffb9d09

----------------
IN: 
0x000000003ffb9cf7:  movw   $0x378,0x408
0x000000003ffb9d00:  movb   $0x14,0x478
0x000000003ffb9d07:  mov    $0x1,%cl
0x000000003ffb9d09:  mov    $0x27a,%edx
0x000000003ffb9d0e:  in     (%dx),%al
0x000000003ffb9d0f:  and    $0xffffffdf,%eax
0x000000003ffb9d12:  out    %al,(%dx)
0x000000003ffb9d13:  mov    $0x78,%dl
0x000000003ffb9d15:  mov    $0xaa,%al
0x000000003ffb9d17:  out    %al,(%dx)
0x000000003ffb9d18:  in     (%dx),%al
0x000000003ffb9d19:  xor    %ebx,%ebx
0x000000003ffb9d1b:  cmp    $0xaa,%al
0x000000003ffb9d1d:  jne    0x3ffb9d35

----------------
IN: 
0x000000003ffb9d35:  add    %ecx,%ebx
0x000000003ffb9d37:  movzwl %bx,%eax
0x000000003ffb9d3a:  mov    %eax,0x4(%esp)
0x000000003ffb9d3e:  movl   $0xf5ae0,(%esp)
0x000000003ffb9d45:  call   0xf1cc0

----------------
IN: 
0x000000003ffb9d4a:  mov    %ebx,%ecx
0x000000003ffb9d4c:  shl    $0xe,%ecx
0x000000003ffb9d4f:  mov    0x410,%eax
0x000000003ffb9d54:  and    $0x3fff,%ax
0x000000003ffb9d58:  or     %eax,%ecx
0x000000003ffb9d5a:  mov    %cx,0x410
0x000000003ffb9d61:  xor    %edx,%edx
0x000000003ffb9d63:  mov    $0x3f8,%eax
0x000000003ffb9d68:  call   0x3ffafdf0

----------------
IN: 
0x000000003ffafdf0:  push   %edi
0x000000003ffafdf1:  push   %esi
0x000000003ffafdf2:  push   %ebx
0x000000003ffafdf3:  mov    %eax,%ecx
0x000000003ffafdf5:  mov    %edx,%edi
0x000000003ffafdf7:  lea    0x1(%eax),%ebx
0x000000003ffafdfa:  mov    $0x2,%al
0x000000003ffafdfc:  mov    %ebx,%edx
0x000000003ffafdfe:  out    %al,(%dx)
0x000000003ffafdff:  in     (%dx),%al
0x000000003ffafe00:  xor    %esi,%esi
0x000000003ffafe02:  cmp    $0x2,%al
0x000000003ffafe04:  jne    0x3ffafe31

----------------
IN: 
0x000000003ffafe06:  lea    0x2(%ecx),%edx
0x000000003ffafe09:  in     (%dx),%al
0x000000003ffafe0a:  and    $0x3f,%eax
0x000000003ffafe0d:  xor    %esi,%esi
0x000000003ffafe0f:  cmp    $0x2,%al
0x000000003ffafe11:  jne    0x3ffafe31

----------------
IN: 
0x000000003ffafe13:  xor    %eax,%eax
0x000000003ffafe15:  mov    %ebx,%edx
0x000000003ffafe17:  out    %al,(%dx)
0x000000003ffafe18:  mov    %edi,%eax
0x000000003ffafe1a:  movzbl %al,%edx
0x000000003ffafe1d:  mov    %cx,0x400(%edx,%edx,1)
0x000000003ffafe25:  movb   $0xa,0x47c(%edx)
0x000000003ffafe2c:  mov    $0x1,%esi
0x000000003ffafe31:  mov    %esi,%eax
0x000000003ffafe33:  pop    %ebx
0x000000003ffafe34:  pop    %esi
0x000000003ffafe35:  pop    %edi
0x000000003ffafe36:  ret    

----------------
IN: 
0x000000003ffb9d6d:  mov    %eax,%ebx
0x000000003ffb9d6f:  movzbl %al,%edx
0x000000003ffb9d72:  mov    $0x2f8,%eax
0x000000003ffb9d77:  call   0x3ffafdf0

----------------
IN: 
0x000000003ffafe31:  mov    %esi,%eax
0x000000003ffafe33:  pop    %ebx
0x000000003ffafe34:  pop    %esi
0x000000003ffafe35:  pop    %edi
0x000000003ffafe36:  ret    

----------------
IN: 
0x000000003ffb9d7c:  add    %eax,%ebx
0x000000003ffb9d7e:  movzbl %bl,%edx
0x000000003ffb9d81:  mov    $0x3e8,%eax
0x000000003ffb9d86:  call   0x3ffafdf0

----------------
IN: 
0x000000003ffb9d8b:  add    %eax,%ebx
0x000000003ffb9d8d:  movzbl %bl,%edx
0x000000003ffb9d90:  mov    $0x2e8,%eax
0x000000003ffb9d95:  call   0x3ffafdf0

----------------
IN: 
0x000000003ffb9d9a:  add    %eax,%ebx
0x000000003ffb9d9c:  movzwl %bx,%eax
0x000000003ffb9d9f:  mov    %eax,0x4(%esp)
0x000000003ffb9da3:  movl   $0xf5af4,(%esp)
0x000000003ffb9daa:  call   0xf1cc0

----------------
IN: 
0x000000003ffb9daf:  mov    %ebx,%eax
0x000000003ffb9db1:  shl    $0x9,%eax
0x000000003ffb9db4:  mov    0x410,%edx
0x000000003ffb9dba:  and    $0xf1,%dh
0x000000003ffb9dbd:  or     %edx,%eax
0x000000003ffb9dbf:  mov    %ax,0x410
0x000000003ffb9dc5:  mov    $0xfefc7,%edx
0x000000003ffb9dca:  mov    $0xf68e4,%eax
0x000000003ffb9dcf:  mov    $0xb,%ecx
0x000000003ffb9dd4:  mov    %edx,%edi
0x000000003ffb9dd6:  mov    %eax,%esi
0x000000003ffb9dd8:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb9dd8:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffb9dda:  mov    %ax,0x78
0x000000003ffb9de0:  movw   $0xf000,0x7a
0x000000003ffb9de9:  mov    $0x90,%al
0x000000003ffb9deb:  out    %al,$0x70
0x000000003ffb9ded:  in     $0x71,%al
0x000000003ffb9def:  mov    %al,0x1c(%esp)
0x000000003ffb9df3:  test   $0xf0,%al
0x000000003ffb9df5:  je     0x3ffb9e06

----------------
IN: 
0x000000003ffb9df7:  mov    %al,%dl
0x000000003ffb9df9:  shr    $0x4,%dl
0x000000003ffb9dfc:  movzbl %dl,%edx
0x000000003ffb9dff:  xor    %eax,%eax
0x000000003ffb9e01:  call   0x3ffb5536

----------------
IN: 
0x000000003ffb5536:  push   %edi
0x000000003ffb5537:  push   %esi
0x000000003ffb5538:  push   %ebx
0x000000003ffb5539:  sub    $0x114,%esp
0x000000003ffb553f:  mov    %eax,%edi
0x000000003ffb5541:  mov    %edx,%esi
0x000000003ffb5543:  lea    -0x1(%edx),%eax
0x000000003ffb5546:  cmp    $0x7,%eax
0x000000003ffb5549:  jbe    0x3ffb5560

----------------
IN: 
0x000000003ffb5560:  mov    $0x24,%eax
0x000000003ffb5565:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb556a:  mov    %eax,%ebx
0x000000003ffb556c:  test   %eax,%eax
0x000000003ffb556e:  jne    0x3ffb5584

----------------
IN: 
0x000000003ffb5584:  mov    $0x24,%ecx
0x000000003ffb5589:  xor    %edx,%edx
0x000000003ffb558b:  call   0xf118c

----------------
IN: 
0x000000003ffb5590:  mov    %edi,0x14(%ebx)
0x000000003ffb5593:  movb   $0x10,(%ebx)
0x000000003ffb5596:  movw   $0x200,0x1a(%ebx)
0x000000003ffb559c:  mov    %esi,%eax
0x000000003ffb559e:  mov    %al,0x1(%ebx)
0x000000003ffb55a1:  movl   $0xffffffff,0xc(%ebx)
0x000000003ffb55a8:  movl   $0xffffffff,0x10(%ebx)
0x000000003ffb55af:  imul   $0xa,%esi,%esi
0x000000003ffb55b2:  mov    0xf6888(%esi),%eax
0x000000003ffb55b8:  mov    %eax,0x2(%ebx)
0x000000003ffb55bb:  mov    0xf688c(%esi),%eax
0x000000003ffb55c1:  mov    %eax,0x6(%ebx)
0x000000003ffb55c4:  lea    0x41(%edi),%eax
0x000000003ffb55c7:  mov    %eax,0x8(%esp)
0x000000003ffb55cb:  movl   $0xf4fae,0x4(%esp)
0x000000003ffb55d3:  movl   $0x50,(%esp)
0x000000003ffb55da:  call   0x3ffb5342

----------------
IN: 
0x000000003ffb5342:  push   %esi
0x000000003ffb5343:  push   %ebx
0x000000003ffb5344:  sub    $0xc,%esp
0x000000003ffb5347:  mov    0x18(%esp),%esi
0x000000003ffb534b:  test   %esi,%esi
0x000000003ffb534d:  je     0x3ffb53a3

----------------
IN: 
0x000000003ffb534f:  mov    %esi,%eax
0x000000003ffb5351:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb5356:  mov    %eax,%ebx
0x000000003ffb5358:  test   %eax,%eax
0x000000003ffb535a:  jne    0x3ffb536d

----------------
IN: 
0x000000003ffb536d:  movl   $0x3ffaeb17,(%esp)
0x000000003ffb5374:  mov    %eax,0x4(%esp)
0x000000003ffb5378:  add    %eax,%esi
0x000000003ffb537a:  mov    %esi,0x8(%esp)
0x000000003ffb537e:  lea    0x20(%esp),%ecx
0x000000003ffb5382:  mov    0x1c(%esp),%edx
0x000000003ffb5386:  mov    %esp,%eax
0x000000003ffb5388:  call   0xf1943

----------------
IN: 
0x00000000000f19ba:  cmp    $0x2e,%al
0x00000000000f19bc:  je     0xf1ac9

----------------
IN: 
0x00000000000f19c2:  cmp    $0x63,%al
0x00000000000f19c4:  je     0xf1ab8

----------------
IN: 
0x00000000000f1ab8:  lea    0x4(%esi),%edi
0x00000000000f1abb:  movsbl (%esi),%edx
0x00000000000f1abe:  mov    0x4(%esp),%eax
0x00000000000f1ac2:  call   0xf1087

----------------
IN: 
0x00000000000f1ac7:  jmp    0xf1b1d

----------------
IN: 
0x000000003ffb538d:  mov    0x4(%esp),%eax
0x000000003ffb5391:  mov    0x8(%esp),%edx
0x000000003ffb5395:  cmp    %edx,%eax
0x000000003ffb5397:  jb     0x3ffb539c

----------------
IN: 
0x000000003ffb539c:  movb   $0x0,(%eax)
0x000000003ffb539f:  mov    %ebx,%eax
0x000000003ffb53a1:  jmp    0x3ffb53a5

----------------
IN: 
0x000000003ffb53a5:  add    $0xc,%esp
0x000000003ffb53a8:  pop    %ebx
0x000000003ffb53a9:  pop    %esi
0x000000003ffb53aa:  ret    

----------------
IN: 
0x000000003ffb55df:  mov    %eax,%esi
0x000000003ffb55e1:  mov    0x3ffbfee3,%eax
0x000000003ffb55e6:  lea    -0x4(%eax),%ecx
0x000000003ffb55e9:  cmp    $0xfffffffc,%ecx
0x000000003ffb55ec:  je     0x3ffb55fe

----------------
IN: 
0x000000003ffb55ee:  cmpw   $0x601,0x14(%ecx)
0x000000003ffb55f4:  je     0x3ffb5603

----------------
IN: 
0x000000003ffb55f6:  mov    0x4(%ecx),%ecx
0x000000003ffb55f9:  sub    $0x4,%ecx
0x000000003ffb55fc:  jmp    0x3ffb55e9

----------------
IN: 
0x000000003ffb55e9:  cmp    $0xfffffffc,%ecx
0x000000003ffb55ec:  je     0x3ffb55fe

----------------
IN: 
0x000000003ffb5603:  or     $0xffffffff,%eax
0x000000003ffb5606:  test   %ecx,%ecx
0x000000003ffb5608:  je     0x3ffb564a

----------------
IN: 
0x000000003ffb560a:  mov    $0xf4fc0,%edx
0x000000003ffb560f:  lea    0x14(%esp),%eax
0x000000003ffb5613:  call   0x3ffb4e81

----------------
IN: 
0x000000003ffb4e81:  push   %ebp
0x000000003ffb4e82:  push   %edi
0x000000003ffb4e83:  push   %esi
0x000000003ffb4e84:  push   %ebx
0x000000003ffb4e85:  sub    $0x14,%esp
0x000000003ffb4e88:  mov    %edx,%ebp
0x000000003ffb4e8a:  mov    %ecx,%edi
0x000000003ffb4e8c:  mov    0xc(%ecx),%ecx
0x000000003ffb4e8f:  test   %ecx,%ecx
0x000000003ffb4e91:  lea    0x100(%eax),%esi
0x000000003ffb4e97:  je     0x3ffb4ea7

----------------
IN: 
0x000000003ffb4ea7:  movzbl 0x2(%edi),%edx
0x000000003ffb4eab:  mov    %eax,%ebx
0x000000003ffb4ead:  test   %dl,%dl
0x000000003ffb4eaf:  je     0x3ffb4ecf

----------------
IN: 
0x000000003ffb4ecf:  movl   $0xf4e70,0xc(%esp)
0x000000003ffb4ed7:  movl   $0xf5ab4,0x8(%esp)
0x000000003ffb4edf:  mov    %esi,%eax
0x000000003ffb4ee1:  sub    %ebx,%eax
0x000000003ffb4ee3:  mov    %eax,0x4(%esp)
0x000000003ffb4ee7:  mov    %ebx,(%esp)
0x000000003ffb4eea:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb4eef:  add    %eax,%ebx
0x000000003ffb4ef1:  mov    (%edi),%eax
0x000000003ffb4ef3:  mov    %eax,%edi
0x000000003ffb4ef5:  and    $0x7,%edi
0x000000003ffb4ef8:  shr    $0x3,%ax
0x000000003ffb4efc:  and    $0x1f,%eax
0x000000003ffb4eff:  mov    %eax,0x10(%esp)
0x000000003ffb4f03:  mov    %ebp,0xc(%esp)
0x000000003ffb4f07:  movl   $0xf4e7b,0x8(%esp)
0x000000003ffb4f0f:  mov    %esi,%eax
0x000000003ffb4f11:  sub    %ebx,%eax
0x000000003ffb4f13:  mov    %eax,0x4(%esp)
0x000000003ffb4f17:  mov    %ebx,(%esp)
0x000000003ffb4f1a:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb4f1f:  add    %eax,%ebx
0x000000003ffb4f21:  test   %edi,%edi
0x000000003ffb4f23:  je     0x3ffb4f41

----------------
IN: 
0x000000003ffb4f41:  mov    %ebx,%eax
0x000000003ffb4f43:  add    $0x14,%esp
0x000000003ffb4f46:  pop    %ebx
0x000000003ffb4f47:  pop    %esi
0x000000003ffb4f48:  pop    %edi
0x000000003ffb4f49:  pop    %ebp
0x000000003ffb4f4a:  ret    

----------------
IN: 
0x000000003ffb5618:  mov    %edi,0x10(%esp)
0x000000003ffb561c:  movl   $0x3f0,0xc(%esp)
0x000000003ffb5624:  movl   $0xf4fc4,0x8(%esp)
0x000000003ffb562c:  lea    0x114(%esp),%edx
0x000000003ffb5633:  sub    %eax,%edx
0x000000003ffb5635:  mov    %edx,0x4(%esp)
0x000000003ffb5639:  mov    %eax,(%esp)
0x000000003ffb563c:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb5641:  lea    0x14(%esp),%eax
0x000000003ffb5645:  call   0x3ffb1d15

----------------
IN: 
0x000000003ffb1d15:  push   %ebp
0x000000003ffb1d16:  push   %edi
0x000000003ffb1d17:  push   %esi
0x000000003ffb1d18:  push   %ebx
0x000000003ffb1d19:  sub    $0xc,%esp
0x000000003ffb1d1c:  mov    %eax,%ebp
0x000000003ffb1d1e:  mov    %eax,0x4(%esp)
0x000000003ffb1d22:  movl   $0xf462c,(%esp)
0x000000003ffb1d29:  call   0xf1cc0

----------------
IN: 
0x000000003ffb1d2e:  mov    0x3ffbff2b,%eax
0x000000003ffb1d33:  mov    %eax,0x8(%esp)
0x000000003ffb1d37:  mov    0x3ffbfe8b,%edi
0x000000003ffb1d3d:  xor    %esi,%esi
0x000000003ffb1d3f:  cmp    0x8(%esp),%esi
0x000000003ffb1d43:  jge    0x3ffb1d87

----------------
IN: 
0x000000003ffb1d87:  or     $0xffffffff,%eax
0x000000003ffb1d8a:  add    $0xc,%esp
0x000000003ffb1d8d:  pop    %ebx
0x000000003ffb1d8e:  pop    %esi
0x000000003ffb1d8f:  pop    %edi
0x000000003ffb1d90:  pop    %ebp
0x000000003ffb1d91:  ret    

----------------
IN: 
0x000000003ffb564a:  mov    0x3ffbfe87,%ecx
0x000000003ffb5650:  mov    %eax,%edx
0x000000003ffb5652:  test   %eax,%eax
0x000000003ffb5654:  jns    0x3ffb5658

----------------
IN: 
0x000000003ffb5656:  mov    %ecx,%edx
0x000000003ffb5658:  mov    %esi,(%esp)
0x000000003ffb565b:  mov    %ebx,%ecx
0x000000003ffb565d:  mov    $0x1,%eax
0x000000003ffb5662:  call   0x3ffb07d1

----------------
IN: 
0x000000003ffb07d1:  push   %ebp
0x000000003ffb07d2:  push   %edi
0x000000003ffb07d3:  push   %esi
0x000000003ffb07d4:  push   %ebx
0x000000003ffb07d5:  push   %esi
0x000000003ffb07d6:  mov    %eax,%esi
0x000000003ffb07d8:  mov    %edx,%edi
0x000000003ffb07da:  mov    %ecx,%ebp
0x000000003ffb07dc:  mov    0x18(%esp),%ebx
0x000000003ffb07e0:  mov    $0x18,%eax
0x000000003ffb07e5:  call   0x3ffafe53

----------------
IN: 
0x000000003ffb07ea:  test   %eax,%eax
0x000000003ffb07ec:  jne    0x3ffb0801

----------------
IN: 
0x000000003ffb0801:  mov    %esi,(%eax)
0x000000003ffb0803:  mov    %edi,0x8(%eax)
0x000000003ffb0806:  mov    %ebp,0x4(%eax)
0x000000003ffb0809:  test   %ebx,%ebx
0x000000003ffb080b:  jne    0x3ffb0812

----------------
IN: 
0x000000003ffb0812:  mov    %ebx,0xc(%eax)
0x000000003ffb0815:  mov    0x3ffbfe77,%ebx
0x000000003ffb081b:  movl   $0x3ffbfe77,(%esp)
0x000000003ffb0822:  test   %ebx,%ebx
0x000000003ffb0824:  jne    0x3ffb0836

----------------
IN: 
0x000000003ffb0826:  add    $0x10,%eax
0x000000003ffb0829:  mov    (%esp),%edx
0x000000003ffb082c:  pop    %ecx
0x000000003ffb082d:  pop    %ebx
0x000000003ffb082e:  pop    %esi
0x000000003ffb082f:  pop    %edi
0x000000003ffb0830:  pop    %ebp
0x000000003ffb0831:  jmp    0x3ffaeb06

----------------
IN: 
0x000000003ffb5667:  add    $0x114,%esp
0x000000003ffb566d:  pop    %ebx
0x000000003ffb566e:  pop    %esi
0x000000003ffb566f:  pop    %edi
0x000000003ffb5670:  ret    

----------------
IN: 
0x000000003ffb9e06:  mov    0x1c(%esp),%dl
0x000000003ffb9e0a:  and    $0xf,%dl
0x000000003ffb9e0d:  je     0x3ffb9e1c

----------------
IN: 
0x000000003ffb9e1c:  mov    $0x40,%eax
0x000000003ffb9e21:  call   0x3ffafe37

----------------
IN: 
0x000000003ffb9e26:  mov    $0xfef57,%eax
0x000000003ffb9e2b:  mov    %ax,0x38
0x000000003ffb9e31:  movw   $0xf000,0x3a
0x000000003ffb9e3a:  mov    $0x7d00,%eax
0x000000003ffb9e3f:  call   0xf1894

----------------
IN: 
0x000000003ffb9e44:  mov    %eax,0x3ffbff2f
0x000000003ffb9e49:  mov    0x3ffbfee3,%eax
0x000000003ffb9e4e:  lea    -0x4(%eax),%ebx
0x000000003ffb9e51:  test   %eax,%eax
0x000000003ffb9e53:  jne    0x3ffb9e85

----------------
IN: 
0x000000003ffb9e85:  cmp    $0xfffffffc,%ebx
0x000000003ffb9e88:  je     0x3ffb9ea0

----------------
IN: 
0x000000003ffb9e8a:  xor    %ecx,%ecx
0x000000003ffb9e8c:  mov    %ebx,%edx
0x000000003ffb9e8e:  mov    $0x3ffbfc5b,%eax
0x000000003ffb9e93:  call   0x3ffaec0b

----------------
IN: 
0x000000003ffb9e98:  mov    0x4(%ebx),%ebx
0x000000003ffb9e9b:  sub    $0x4,%ebx
0x000000003ffb9e9e:  jmp    0x3ffb9e85

----------------
IN: 
0x000000003ffb4153:  push   %ebp
0x000000003ffb4154:  push   %edi
0x000000003ffb4155:  push   %esi
0x000000003ffb4156:  push   %ebx
0x000000003ffb4157:  sub    $0x8,%esp
0x000000003ffb415a:  mov    %eax,%ebx
0x000000003ffb415c:  movzbl 0x16(%eax),%edi
0x000000003ffb4160:  movl   $0x1,0x1c(%eax)
0x000000003ffb4167:  movzwl (%eax),%esi
0x000000003ffb416a:  mov    $0x3c,%edx
0x000000003ffb416f:  mov    %esi,%eax
0x000000003ffb4171:  call   0xf1260

----------------
IN: 
0x000000003ffb4176:  mov    %al,0x7(%esp)
0x000000003ffb417a:  test   $0x1,%edi
0x000000003ffb4180:  je     0x3ffb41a9

----------------
IN: 
0x000000003ffb41a9:  mov    $0xe,%edx
0x000000003ffb41ae:  mov    $0x3f4,%eax
0x000000003ffb41b3:  mov    $0x1f0,%ebp
0x000000003ffb41b8:  mov    %eax,(%esp)
0x000000003ffb41bb:  mov    %ebp,%ecx
0x000000003ffb41bd:  mov    %ebx,%eax
0x000000003ffb41bf:  call   0x3ffb40a8

----------------
IN: 
0x000000003ffb40a8:  push   %ebp
0x000000003ffb40a9:  push   %edi
0x000000003ffb40aa:  push   %esi
0x000000003ffb40ab:  push   %ebx
0x000000003ffb40ac:  sub    $0x20,%esp
0x000000003ffb40af:  mov    %eax,%esi
0x000000003ffb40b1:  mov    %edx,0x1c(%esp)
0x000000003ffb40b5:  mov    %ecx,%edi
0x000000003ffb40b7:  mov    0x34(%esp),%ebp
0x000000003ffb40bb:  mov    $0x10,%eax
0x000000003ffb40c0:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb40c5:  mov    %eax,%ebx
0x000000003ffb40c7:  test   %eax,%eax
0x000000003ffb40c9:  mov    0x1c(%esp),%edx
0x000000003ffb40cd:  jne    0x3ffb40e5

----------------
IN: 
0x000000003ffb40e5:  mov    0x3ffbff07,%eax
0x000000003ffb40ea:  lea    0x1(%eax),%ecx
0x000000003ffb40ed:  mov    %ecx,0x3ffbff07
0x000000003ffb40f3:  mov    %al,0x7(%ebx)
0x000000003ffb40f6:  mov    %dl,0x6(%ebx)
0x000000003ffb40f9:  test   %esi,%esi
0x000000003ffb40fb:  je     0x3ffb4102

----------------
IN: 
0x000000003ffb40fd:  movzwl (%esi),%eax
0x000000003ffb4100:  jmp    0x3ffb4105

----------------
IN: 
0x000000003ffb4105:  mov    %eax,0x8(%ebx)
0x000000003ffb4108:  mov    %esi,0xc(%ebx)
0x000000003ffb410b:  mov    %di,(%ebx)
0x000000003ffb410e:  mov    %bp,0x2(%ebx)
0x000000003ffb4112:  movw   $0x0,0x4(%ebx)
0x000000003ffb4118:  mov    %eax,0x18(%esp)
0x000000003ffb411c:  mov    %edx,0x14(%esp)
0x000000003ffb4120:  movl   $0x0,0x10(%esp)
0x000000003ffb4128:  mov    %ebp,0xc(%esp)
0x000000003ffb412c:  mov    %edi,0x8(%esp)
0x000000003ffb4130:  mov    %ecx,0x4(%esp)
0x000000003ffb4134:  movl   $0xf4bfb,(%esp)
0x000000003ffb413b:  call   0xf1cc0

----------------
IN: 
0x000000003ffb4140:  mov    %ebx,%edx
0x000000003ffb4142:  mov    $0x3ffb8c47,%eax
0x000000003ffb4147:  add    $0x20,%esp
0x000000003ffb414a:  pop    %ebx
0x000000003ffb414b:  pop    %esi
0x000000003ffb414c:  pop    %edi
0x000000003ffb414d:  pop    %ebp
0x000000003ffb414e:  jmp    0x3ffafeee

----------------
IN: 
0x000000003ffb8c47:  push   %ebp
0x000000003ffb8c48:  push   %edi
0x000000003ffb8c49:  push   %esi
0x000000003ffb8c4a:  push   %ebx
0x000000003ffb8c4b:  sub    $0x28c,%esp
0x000000003ffb8c51:  mov    %eax,%edi
0x000000003ffb8c53:  mov    %eax,0x30(%esp)
0x000000003ffb8c57:  lea    0x60(%esp),%ebx
0x000000003ffb8c5b:  mov    $0x2c,%ecx
0x000000003ffb8c60:  xor    %edx,%edx
0x000000003ffb8c62:  mov    %ebx,%eax
0x000000003ffb8c64:  call   0xf118c

----------------
IN: 
0x000000003ffb8c69:  mov    %edi,0x84(%esp)
0x000000003ffb8c70:  movb   $0x0,0x23(%esp)
0x000000003ffb8c75:  xor    %esi,%esi
0x000000003ffb8c77:  mov    %ebx,0x28(%esp)
0x000000003ffb8c7b:  mov    0x30(%esp),%eax
0x000000003ffb8c7f:  mov    (%eax),%ebp
0x000000003ffb8c81:  movzwl %bp,%eax
0x000000003ffb8c84:  mov    %eax,%edi
0x000000003ffb8c86:  mov    %eax,0x2c(%esp)
0x000000003ffb8c8a:  call   0x3ffb176f

----------------
IN: 
0x000000003ffb176f:  push   %esi
0x000000003ffb1770:  push   %ebx
0x000000003ffb1771:  xor    %ebx,%ebx
0x000000003ffb1773:  lea    0x7(%eax),%esi
0x000000003ffb1776:  mov    %esi,%edx
0x000000003ffb1778:  in     (%dx),%al
0x000000003ffb1779:  test   %al,%al
0x000000003ffb177b:  jns    0x3ffb17ad

----------------
IN: 
0x000000003ffb17ad:  movzbl %al,%eax
0x000000003ffb17b0:  jmp    0x3ffb17b7

----------------
IN: 
0x000000003ffb17b7:  pop    %ebx
0x000000003ffb17b8:  pop    %esi
0x000000003ffb17b9:  ret    

----------------
IN: 
0x000000003ffb8c8f:  test   %eax,%eax
0x000000003ffb8c91:  js     0x3ffb905b

----------------
IN: 
0x000000003ffb8c97:  cmpb   $0x1,0x23(%esp)
0x000000003ffb8c9c:  sbb    %ebx,%ebx
0x000000003ffb8c9e:  and    $0xfffffff0,%ebx
0x000000003ffb8ca1:  sub    $0x50,%ebx
0x000000003ffb8ca4:  lea    0x6(%ebp),%edx
0x000000003ffb8ca7:  mov    %bl,%al
0x000000003ffb8ca9:  out    %al,(%dx)
0x000000003ffb8caa:  mov    %edx,0x24(%esp)
0x000000003ffb8cae:  call   0xf1877

----------------
IN: 
0x00000000000f1877:  imul   $0x190,0xf6904,%eax
0x00000000000f1881:  add    $0xf423f,%eax
0x00000000000f1886:  mov    $0xf4240,%ecx
0x00000000000f188b:  xor    %edx,%edx
0x00000000000f188d:  div    %ecx
0x00000000000f188f:  jmp    0xf1842

----------------
IN: 
0x00000000000f1842:  push   %ebx
0x00000000000f1843:  mov    %eax,%ebx
0x00000000000f1845:  call   0xf17ba

----------------
IN: 
0x00000000000f184a:  add    %eax,%ebx
0x00000000000f184c:  mov    %ebx,%eax
0x00000000000f184e:  call   0xf182e

----------------
IN: 
0x00000000000f182e:  push   %ebx
0x00000000000f182f:  mov    %eax,%ebx
0x00000000000f1831:  call   0xf17ba

----------------
IN: 
0x00000000000f1836:  sub    %ebx,%eax
0x00000000000f1838:  test   %eax,%eax
0x00000000000f183a:  setg   %al
0x00000000000f183d:  movzbl %al,%eax
0x00000000000f1840:  pop    %ebx
0x00000000000f1841:  ret    

----------------
IN: 
0x00000000000f1853:  test   %eax,%eax
0x00000000000f1855:  jne    0xf185b

----------------
IN: 
0x00000000000f185b:  pop    %ebx
0x00000000000f185c:  ret    

----------------
IN: 
0x000000003ffb8cb3:  mov    %edi,%eax
0x000000003ffb8cb5:  call   0x3ffb176f

----------------
IN: 
0x000000003ffb8cba:  test   %eax,%eax
0x000000003ffb8cbc:  js     0x3ffb905b

----------------
IN: 
0x000000003ffb8cc2:  mov    %bl,%al
0x000000003ffb8cc4:  mov    0x24(%esp),%edx
0x000000003ffb8cc8:  out    %al,(%dx)
0x000000003ffb8cc9:  in     (%dx),%al
0x000000003ffb8cca:  mov    %al,0x24(%esp)
0x000000003ffb8cce:  lea    0x2(%ebp),%ecx
0x000000003ffb8cd1:  mov    $0x55,%al
0x000000003ffb8cd3:  mov    %ecx,%edx
0x000000003ffb8cd5:  out    %al,(%dx)
0x000000003ffb8cd6:  lea    0x3(%ebp),%edi
0x000000003ffb8cd9:  mov    $0xaa,%al
0x000000003ffb8cdb:  mov    %edi,%edx
0x000000003ffb8cdd:  out    %al,(%dx)
0x000000003ffb8cde:  mov    %ecx,%edx
0x000000003ffb8ce0:  in     (%dx),%al
0x000000003ffb8ce1:  mov    %al,%cl
0x000000003ffb8ce3:  mov    %edi,%edx
0x000000003ffb8ce5:  in     (%dx),%al
0x000000003ffb8ce6:  cmp    $0x55,%cl
0x000000003ffb8ce9:  jne    0x3ffb905b

----------------
IN: 
0x000000003ffb8cef:  cmp    $0xaa,%al
0x000000003ffb8cf1:  jne    0x3ffb905b

----------------
IN: 
0x000000003ffb8cf7:  cmp    %bl,0x24(%esp)
0x000000003ffb8cfb:  jne    0x3ffb905b

----------------
IN: 
0x000000003ffb8d01:  mov    0x23(%esp),%al
0x000000003ffb8d05:  mov    %al,0x88(%esp)
0x000000003ffb8d0c:  test   %esi,%esi
0x000000003ffb8d0e:  jne    0x3ffb8dc9

----------------
IN: 
0x000000003ffb8d14:  mov    0x84(%esp),%eax
0x000000003ffb8d1b:  mov    (%eax),%si
0x000000003ffb8d1e:  mov    0x2(%eax),%ax
0x000000003ffb8d22:  lea    0x2(%eax),%edx
0x000000003ffb8d25:  mov    %dx,0x24(%esp)
0x000000003ffb8d2a:  mov    $0xe,%al
0x000000003ffb8d2c:  out    %al,(%dx)
0x000000003ffb8d2d:  mov    $0x5,%eax
0x000000003ffb8d32:  call   0xf185d

----------------
IN: 
0x00000000000f185d:  imul   0xf6904,%eax
0x00000000000f1864:  add    $0x3e7,%eax
0x00000000000f1869:  mov    $0x3e8,%ecx
0x00000000000f186e:  xor    %edx,%edx
0x00000000000f1870:  div    %ecx
0x00000000000f1872:  jmp    0xf1842

----------------
IN: 
0x00000000000f1857:  pause  

----------------
IN: 
0x00000000000f1859:  jmp    0xf184c

----------------
IN: 
0x00000000000f184c:  mov    %ebx,%eax
0x00000000000f184e:  call   0xf182e

----------------
IN: 
0x000000003ffb8d37:  mov    $0xa,%al
0x000000003ffb8d39:  mov    0x24(%esp),%edx
0x000000003ffb8d3d:  out    %al,(%dx)
0x000000003ffb8d3e:  mov    $0x2,%eax
0x000000003ffb8d43:  call   0x3ffb0358

----------------
IN: 
0x000000003ffb0358:  imul   0xf6904,%eax
0x000000003ffb035f:  jmp    0xf1be3

----------------
IN: 
0x00000000000f1be3:  push   %ebx
0x00000000000f1be4:  mov    %eax,%ebx
0x00000000000f1be6:  call   0xf17ba

----------------
IN: 
0x00000000000f1beb:  add    %eax,%ebx
0x00000000000f1bed:  mov    %ebx,%eax
0x00000000000f1bef:  call   0xf182e

----------------
IN: 
0x00000000000f1bf4:  test   %eax,%eax
0x00000000000f1bf6:  jne    0xf1bff

----------------
IN: 
0x00000000000f1bf8:  call   0xf1b80

----------------
IN: 
0x00000000000f1078:  pop    %ebx
0x00000000000f1079:  pop    %esi
0x00000000000f107a:  pop    %edi
0x00000000000f107b:  ret    

----------------
IN: 
0x000000003ffb431d:  andb   $0xef,0x7(%esp)
0x000000003ffb4322:  lea    0x7(%esp),%edx
0x000000003ffb4326:  mov    $0x1060,%eax
0x000000003ffb432b:  call   0x3ffb0fb5

----------------
IN: 
0x000000003ffb4330:  mov    %eax,%ebx
0x000000003ffb4332:  test   %eax,%eax
0x000000003ffb4334:  jne    0x3ffb445b

----------------
IN: 
0x000000003ffb433a:  cmp    $0x2ff,%edi
0x000000003ffb4340:  jne    0x3ffb4388

----------------
IN: 
0x000000003ffb4342:  mov    $0x3e8,%edx
0x000000003ffb4347:  mov    $0xff,%eax
0x000000003ffb434c:  call   0x3ffb42af

----------------
IN: 
0x000000003ffb42af:  push   %ebx
0x000000003ffb42b0:  push   %ecx
0x000000003ffb42b1:  mov    %eax,%ebx
0x000000003ffb42b3:  mov    %edx,(%esp)
0x000000003ffb42b6:  call   0xf1cee

----------------
IN: 
0x000000003ffb42bb:  test   %eax,%eax
0x000000003ffb42bd:  jne    0x3ffb42e1

----------------
IN: 
0x000000003ffb42bf:  mov    %bl,%al
0x000000003ffb42c1:  out    %al,$0x60
0x000000003ffb42c3:  mov    (%esp),%edx
0x000000003ffb42c6:  mov    $0x1,%eax
0x000000003ffb42cb:  call   0x3ffb4213

----------------
IN: 
0x000000003ffb4213:  push   %edi
0x000000003ffb4214:  push   %esi
0x000000003ffb4215:  push   %ebx
0x000000003ffb4216:  sub    $0xc,%esp
0x000000003ffb4219:  mov    %eax,%edi
0x000000003ffb421b:  mov    %edx,%esi
0x000000003ffb421d:  mov    %edx,%eax
0x000000003ffb421f:  call   0xf1894

----------------
IN: 
0x000000003ffb4224:  mov    %eax,%ebx
0x000000003ffb4226:  in     $0x64,%al
0x000000003ffb4228:  movzbl %al,%ecx
0x000000003ffb422b:  test   $0x1,%cl
0x000000003ffb422e:  je     0x3ffb4276

----------------
IN: 
0x000000003ffb4230:  in     $0x60,%al
0x000000003ffb4232:  test   $0x20,%cl
0x000000003ffb4235:  jne    0x3ffb425f

----------------
IN: 
0x000000003ffb4237:  test   %edi,%edi
0x000000003ffb4239:  jne    0x3ffb4240

----------------
IN: 
0x000000003ffb4240:  cmp    $0xfa,%al
0x000000003ffb4242:  je     0x3ffb42a1

----------------
IN: 
0x000000003ffb42a1:  mov    $0xfa,%ebx
0x000000003ffb42a6:  mov    %ebx,%eax
0x000000003ffb42a8:  add    $0xc,%esp
0x000000003ffb42ab:  pop    %ebx
0x000000003ffb42ac:  pop    %esi
0x000000003ffb42ad:  pop    %edi
0x000000003ffb42ae:  ret    

----------------
IN: 
0x000000003ffb42d0:  test   %eax,%eax
0x000000003ffb42d2:  js     0x3ffb42e1

----------------
IN: 
0x000000003ffb42d4:  cmp    $0xfa,%eax
0x000000003ffb42d9:  setne  %al
0x000000003ffb42dc:  movzbl %al,%eax
0x000000003ffb42df:  neg    %eax
0x000000003ffb42e1:  pop    %edx
0x000000003ffb42e2:  pop    %ebx
0x000000003ffb42e3:  ret    

----------------
IN: 
0x000000003ffb4351:  mov    %eax,%ebx
0x000000003ffb4353:  test   %eax,%eax
0x000000003ffb4355:  jne    0x3ffb445b

----------------
IN: 
0x000000003ffb435b:  mov    $0xfa0,%edx
0x000000003ffb4360:  xor    %eax,%eax
0x000000003ffb4362:  call   0x3ffb4213

----------------
IN: 
0x000000003ffb423b:  movzbl %al,%ebx
0x000000003ffb423e:  jmp    0x3ffb42a6

----------------
IN: 
0x000000003ffb42a6:  mov    %ebx,%eax
0x000000003ffb42a8:  add    $0xc,%esp
0x000000003ffb42ab:  pop    %ebx
0x000000003ffb42ac:  pop    %esi
0x000000003ffb42ad:  pop    %edi
0x000000003ffb42ae:  ret    

----------------
IN: 
0x000000003ffb4367:  test   %eax,%eax
0x000000003ffb4369:  js     0x3ffb4459

----------------
IN: 
0x000000003ffb436f:  mov    %al,(%esi)
0x000000003ffb4371:  mov    $0x64,%edx
0x000000003ffb4376:  xor    %eax,%eax
0x000000003ffb4378:  call   0x3ffb4213

----------------
IN: 
0x000000003ffb4276:  mov    %ebx,%eax
0x000000003ffb4278:  call   0xf182e

----------------
IN: 
0x000000003ffb427d:  test   %eax,%eax
0x000000003ffb427f:  je     0x3ffb429a

----------------
IN: 
0x000000003ffb429a:  call   0xf1b80

----------------
IN: 
0x000000003ffb41c4:  and    $0x4,%edi
0x000000003ffb41c7:  je     0x3ffb41f0

----------------
IN: 
0x000000003ffb41f0:  mov    $0xf,%edx
0x000000003ffb41f5:  mov    $0x374,%eax
0x000000003ffb41fa:  mov    $0x170,%edi
0x000000003ffb41ff:  mov    %eax,(%esp)
0x000000003ffb4202:  mov    %edi,%ecx
0x000000003ffb4204:  mov    %ebx,%eax
0x000000003ffb4206:  call   0x3ffb40a8

----------------
IN: 
0x00000000000f1bfd:  jmp    0xf1bed

----------------
IN: 
0x00000000000f1bed:  mov    %ebx,%eax
0x00000000000f1bef:  call   0xf182e

----------------
IN: 
0x00000000000f1bff:  pop    %ebx
0x00000000000f1c00:  ret    

----------------
IN: 
0x000000003ffb8d48:  movzwl %si,%ebx
0x000000003ffb8d4b:  mov    %ebx,%eax
0x000000003ffb8d4d:  call   0xf1e37

----------------
IN: 
0x00000000000f1e37:  movzwl %ax,%ecx
0x00000000000f1e3a:  xor    %edx,%edx
0x00000000000f1e3c:  mov    $0x80,%eax
0x00000000000f1e41:  jmp    0xf1de1

----------------
IN: 
0x00000000000f1de1:  push   %ebp
0x00000000000f1de2:  push   %edi
0x00000000000f1de3:  push   %esi
0x00000000000f1de4:  push   %ebx
0x00000000000f1de5:  mov    %eax,%esi
0x00000000000f1de7:  mov    %edx,%edi
0x00000000000f1de9:  mov    %ecx,%ebp
0x00000000000f1deb:  mov    $0x7d00,%eax
0x00000000000f1df0:  call   0xf1894

----------------
IN: 
0x00000000000f1df5:  mov    %eax,%ebx
0x00000000000f1df7:  add    $0x7,%ebp
0x00000000000f1dfa:  mov    %ebp,%edx
0x00000000000f1dfc:  in     (%dx),%al
0x00000000000f1dfd:  mov    %esi,%edx
0x00000000000f1dff:  and    %eax,%edx
0x00000000000f1e01:  mov    %edi,%ecx
0x00000000000f1e03:  cmp    %cl,%dl
0x00000000000f1e05:  jne    0xf1e0c

----------------
IN: 
0x00000000000f1e07:  movzbl %al,%eax
0x00000000000f1e0a:  jmp    0xf1e32

----------------
IN: 
0x00000000000f1e32:  pop    %ebx
0x00000000000f1e33:  pop    %esi
0x00000000000f1e34:  pop    %edi
0x00000000000f1e35:  pop    %ebp
0x00000000000f1e36:  ret    

----------------
IN: 
0x000000003ffb8d52:  test   %eax,%eax
0x000000003ffb8d54:  js     0x3ffb8dc2

----------------
IN: 
0x000000003ffb8d56:  cmpb   $0x0,0x23(%esp)
0x000000003ffb8d5b:  je     0x3ffb8da4

----------------
IN: 
0x000000003ffb8da4:  lea    0x6(%esi),%edx
0x000000003ffb8da7:  mov    $0xa0,%al
0x000000003ffb8da9:  out    %al,(%dx)
0x000000003ffb8daa:  cmpb   $0x20,0x60(%esp)
0x000000003ffb8daf:  jne    0x3ffb8dc2

----------------
IN: 
0x000000003ffb8dc2:  mov    $0x8,%al
0x000000003ffb8dc4:  mov    0x24(%esp),%edx
0x000000003ffb8dc8:  out    %al,(%dx)
0x000000003ffb8dc9:  mov    $0xa1,%ecx
0x000000003ffb8dce:  lea    0x8c(%esp),%edx
0x000000003ffb8dd5:  mov    0x28(%esp),%edi
0x000000003ffb8dd9:  mov    %edi,%eax
0x000000003ffb8ddb:  call   0x3ffb16c1

----------------
IN: 
0x000000003ffb16c1:  push   %edi
0x000000003ffb16c2:  push   %esi
0x000000003ffb16c3:  push   %ebx
0x000000003ffb16c4:  sub    $0x20,%esp
0x000000003ffb16c7:  mov    %eax,%edi
0x000000003ffb16c9:  mov    %edx,%ebx
0x000000003ffb16cb:  mov    %ecx,%esi
0x000000003ffb16cd:  mov    $0x200,%ecx
0x000000003ffb16d2:  xor    %edx,%edx
0x000000003ffb16d4:  mov    %ebx,%eax
0x000000003ffb16d6:  call   0xf118c

----------------
IN: 
0x000000003ffb16db:  mov    $0x14,%ecx
0x000000003ffb16e0:  xor    %edx,%edx
0x000000003ffb16e2:  lea    0xc(%esp),%eax
0x000000003ffb16e6:  call   0xf118c

----------------
IN: 
0x000000003ffb16eb:  mov    %edi,0x18(%esp)
0x000000003ffb16ef:  movw   $0x1,0x1c(%esp)
0x000000003ffb16f6:  movl   $0x1,0xc(%esp)
0x000000003ffb16fe:  movl   $0x0,0x10(%esp)
0x000000003ffb1706:  mov    %ebx,0x14(%esp)
0x000000003ffb170a:  mov    $0xc,%ecx
0x000000003ffb170f:  xor    %edx,%edx
0x000000003ffb1711:  mov    %esp,%eax
0x000000003ffb1713:  call   0xf118c

----------------
IN: 
0x000000003ffb1718:  mov    %esi,%eax
0x000000003ffb171a:  mov    %al,0x6(%esp)
0x000000003ffb171e:  mov    0x18(%esp),%ecx
0x000000003ffb1722:  mov    0x24(%ecx),%eax
0x000000003ffb1725:  mov    (%eax),%si
0x000000003ffb1728:  mov    0x2(%eax),%bx
0x000000003ffb172c:  add    $0x2,%ebx
0x000000003ffb172f:  mov    $0xa,%al
0x000000003ffb1731:  mov    %ebx,%edx
0x000000003ffb1733:  out    %al,(%dx)
0x000000003ffb1734:  mov    %esp,%edx
0x000000003ffb1736:  mov    %ecx,%eax
0x000000003ffb1738:  call   0xf1e46

----------------
IN: 
0x00000000000f1e46:  push   %ebp
0x00000000000f1e47:  push   %edi
0x00000000000f1e48:  push   %esi
0x00000000000f1e49:  push   %ebx
0x00000000000f1e4a:  mov    %edx,%edi
0x00000000000f1e4c:  mov    0x28(%eax),%bl
0x00000000000f1e4f:  mov    0x24(%eax),%eax
0x00000000000f1e52:  mov    (%eax),%si
0x00000000000f1e55:  movzwl %si,%ebp
0x00000000000f1e58:  mov    %ebp,%eax
0x00000000000f1e5a:  call   0xf1e37

----------------
IN: 
0x00000000000f1e5f:  test   %eax,%eax
0x00000000000f1e61:  js     0xf1efa

----------------
IN: 
0x00000000000f1e67:  mov    0x5(%edi),%al
0x00000000000f1e6a:  and    $0x4f,%eax
0x00000000000f1e6d:  cmp    $0x1,%bl
0x00000000000f1e70:  sbb    %ecx,%ecx
0x00000000000f1e72:  and    $0xfffffff0,%ecx
0x00000000000f1e75:  sub    $0x50,%ecx
0x00000000000f1e78:  or     %eax,%ecx
0x00000000000f1e7a:  lea    0x6(%esi),%edx
0x00000000000f1e7d:  in     (%dx),%al
0x00000000000f1e7e:  mov    %al,%bl
0x00000000000f1e80:  mov    %cl,%al
0x00000000000f1e82:  out    %al,(%dx)
0x00000000000f1e83:  xor    %ecx,%ebx
0x00000000000f1e85:  and    $0x10,%bl
0x00000000000f1e88:  jne    0xf1ebe

----------------
IN: 
0x00000000000f1e8a:  mov    0x6(%edi),%cl
0x00000000000f1e8d:  mov    %ecx,%eax
0x00000000000f1e8f:  and    $0xee,%eax
0x00000000000f1e94:  cmp    $0x24,%eax
0x00000000000f1e97:  jne    0xf1ed0

----------------
IN: 
0x00000000000f1ed0:  mov    (%edi),%al
0x00000000000f1ed2:  lea    0x1(%esi),%edx
0x00000000000f1ed5:  out    %al,(%dx)
0x00000000000f1ed6:  mov    0x1(%edi),%al
0x00000000000f1ed9:  lea    0x2(%esi),%edx
0x00000000000f1edc:  out    %al,(%dx)
0x00000000000f1edd:  mov    0x2(%edi),%al
0x00000000000f1ee0:  lea    0x3(%esi),%edx
0x00000000000f1ee3:  out    %al,(%dx)
0x00000000000f1ee4:  mov    0x3(%edi),%al
0x00000000000f1ee7:  lea    0x4(%esi),%edx
0x00000000000f1eea:  out    %al,(%dx)
0x00000000000f1eeb:  mov    0x4(%edi),%al
0x00000000000f1eee:  lea    0x5(%esi),%edx
0x00000000000f1ef1:  out    %al,(%dx)
0x00000000000f1ef2:  lea    0x7(%esi),%edx
0x00000000000f1ef5:  mov    %cl,%al
0x00000000000f1ef7:  out    %al,(%dx)
0x00000000000f1ef8:  xor    %eax,%eax
0x00000000000f1efa:  pop    %ebx
0x00000000000f1efb:  pop    %esi
0x00000000000f1efc:  pop    %edi
0x00000000000f1efd:  pop    %ebp
0x00000000000f1efe:  ret    

----------------
IN: 
0x000000003ffb173d:  mov    %eax,%ecx
0x000000003ffb173f:  test   %eax,%eax
0x000000003ffb1741:  jne    0x3ffb1761

----------------
IN: 
0x000000003ffb1743:  movzwl %si,%eax
0x000000003ffb1746:  call   0xf1f96

----------------
IN: 
0x00000000000f1f96:  push   %ebx
0x00000000000f1f97:  mov    %eax,%ebx
0x00000000000f1f99:  call   0xf1877

----------------
IN: 
0x00000000000f1f9e:  movzwl %bx,%eax
0x00000000000f1fa1:  call   0xf1e37

----------------
IN: 
0x00000000000f1fa6:  test   %eax,%eax
0x00000000000f1fa8:  js     0xf1fc0

----------------
IN: 
0x00000000000f1faa:  test   $0x1,%al
0x00000000000f1fac:  jne    0xf1fbb

----------------
IN: 
0x00000000000f1fbb:  mov    $0xfffffffc,%eax
0x00000000000f1fc0:  pop    %ebx
0x00000000000f1fc1:  ret    

----------------
IN: 
0x000000003ffb174b:  mov    %eax,%ecx
0x000000003ffb174d:  test   %eax,%eax
0x000000003ffb174f:  jne    0x3ffb1761

----------------
IN: 
0x000000003ffb1761:  mov    $0x8,%al
0x000000003ffb1763:  mov    %ebx,%edx
0x000000003ffb1765:  out    %al,(%dx)
0x000000003ffb1766:  mov    %ecx,%eax
0x000000003ffb1768:  add    $0x20,%esp
0x000000003ffb176b:  pop    %ebx
0x000000003ffb176c:  pop    %esi
0x000000003ffb176d:  pop    %edi
0x000000003ffb176e:  ret    

----------------
IN: 
0x000000003ffb8de0:  test   %eax,%eax
0x000000003ffb8de2:  jne    0x3ffb8ee0

----------------
IN: 
0x000000003ffb8ee0:  lea    0x7(%ebp),%edx
0x000000003ffb8ee3:  in     (%dx),%al
0x000000003ffb8ee4:  test   %al,%al
0x000000003ffb8ee6:  je     0x3ffb9056

----------------
IN: 
0x000000003ffb8eec:  mov    0x2c(%esp),%ecx
0x000000003ffb8ef0:  mov    $0x40,%edx
0x000000003ffb8ef5:  mov    $0x40,%eax
0x000000003ffb8efa:  call   0xf1de1

----------------
IN: 
0x000000003ffb8eff:  test   %eax,%eax
0x000000003ffb8f01:  js     0x3ffb9056

----------------
IN: 
0x000000003ffb8f07:  mov    $0xec,%ecx
0x000000003ffb8f0c:  lea    0x8c(%esp),%edx
0x000000003ffb8f13:  mov    0x28(%esp),%edi
0x000000003ffb8f17:  mov    %edi,%eax
0x000000003ffb8f19:  call   0x3ffb16c1

----------------
IN: 
0x000000003ffb8f1e:  test   %eax,%eax
0x000000003ffb8f20:  jne    0x3ffb9056

----------------
IN: 
0x000000003ffb9056:  mov    $0x1,%esi
0x000000003ffb905b:  incb   0x23(%esp)
0x000000003ffb905f:  cmpb   $0x2,0x23(%esp)
0x000000003ffb9064:  jne    0x3ffb8c7b

----------------
IN: 
0x000000003ffb8c7b:  mov    0x30(%esp),%eax
0x000000003ffb8c7f:  mov    (%eax),%ebp
0x000000003ffb8c81:  movzwl %bp,%eax
0x000000003ffb8c84:  mov    %eax,%edi
0x000000003ffb8c86:  mov    %eax,0x2c(%esp)
0x000000003ffb8c8a:  call   0x3ffb176f

----------------
IN: 
0x000000003ffb8dc9:  mov    $0xa1,%ecx
0x000000003ffb8dce:  lea    0x8c(%esp),%edx
0x000000003ffb8dd5:  mov    0x28(%esp),%edi
0x000000003ffb8dd9:  mov    %edi,%eax
0x000000003ffb8ddb:  call   0x3ffb16c1

----------------
IN: 
0x00000000000f1fae:  and    $0x8,%eax
0x00000000000f1fb1:  cmp    $0x1,%eax
0x00000000000f1fb4:  sbb    %eax,%eax
0x00000000000f1fb6:  and    $0xfffffffb,%eax
0x00000000000f1fb9:  jmp    0xf1fc0

----------------
IN: 
0x00000000000f1fc0:  pop    %ebx
0x00000000000f1fc1:  ret    

----------------
IN: 
0x000000003ffb1751:  mov    $0x200,%edx
0x000000003ffb1756:  lea    0xc(%esp),%eax
0x000000003ffb175a:  call   0xf1eff

----------------
IN: 
0x00000000000f1eff:  push   %ebp
0x00000000000f1f00:  push   %edi
0x00000000000f1f01:  push   %esi
0x00000000000f1f02:  push   %ebx
0x00000000000f1f03:  sub    $0x10,%esp
0x00000000000f1f06:  mov    %eax,%ebx
0x00000000000f1f08:  mov    %edx,(%esp)
0x00000000000f1f0b:  mov    0xc(%eax),%eax
0x00000000000f1f0e:  mov    0x24(%eax),%eax
0x00000000000f1f11:  mov    (%eax),%cx
0x00000000000f1f14:  mov    %cx,0x8(%esp)
0x00000000000f1f19:  mov    0x2(%eax),%di
0x00000000000f1f1d:  movzwl 0x10(%ebx),%esi
0x00000000000f1f21:  mov    0x8(%ebx),%ebp
0x00000000000f1f24:  mov    $0x2,%ecx
0x00000000000f1f29:  mov    %edx,%eax
0x00000000000f1f2b:  cltd   
0x00000000000f1f2c:  idiv   %ecx
0x00000000000f1f2e:  mov    %eax,0x4(%esp)
0x00000000000f1f32:  lea    0x2(%edi),%eax
0x00000000000f1f35:  mov    %ax,0xa(%esp)
0x00000000000f1f3a:  movzwl 0x8(%esp),%eax
0x00000000000f1f3f:  mov    %eax,0xc(%esp)
0x00000000000f1f43:  mov    0x4(%esp),%ecx
0x00000000000f1f47:  mov    %ebp,%edi
0x00000000000f1f49:  mov    0x8(%esp),%edx
0x00000000000f1f4d:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000f1f4d:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000f1f50:  add    (%esp),%ebp
0x00000000000f1f53:  mov    0xa(%esp),%dx
0x00000000000f1f58:  in     (%dx),%al
0x00000000000f1f59:  mov    0xc(%esp),%eax
0x00000000000f1f5d:  call   0xf1e37

----------------
IN: 
0x00000000000f1f62:  test   %eax,%eax
0x00000000000f1f64:  jns    0xf1f6c

----------------
IN: 
0x00000000000f1f6c:  and    $0x89,%eax
0x00000000000f1f71:  dec    %esi
0x00000000000f1f72:  je     0xf1f84

----------------
IN: 
0x00000000000f1f84:  cmp    $0x1,%eax
0x00000000000f1f87:  sbb    %eax,%eax
0x00000000000f1f89:  not    %eax
0x00000000000f1f8b:  and    $0xfffffff9,%eax
0x00000000000f1f8e:  add    $0x10,%esp
0x00000000000f1f91:  pop    %ebx
0x00000000000f1f92:  pop    %esi
0x00000000000f1f93:  pop    %edi
0x00000000000f1f94:  pop    %ebp
0x00000000000f1f95:  ret    

----------------
IN: 
0x000000003ffb175f:  mov    %eax,%ecx
0x000000003ffb1761:  mov    $0x8,%al
0x000000003ffb1763:  mov    %ebx,%edx
0x000000003ffb1765:  out    %al,(%dx)
0x000000003ffb1766:  mov    %ecx,%eax
0x000000003ffb1768:  add    $0x20,%esp
0x000000003ffb176b:  pop    %ebx
0x000000003ffb176c:  pop    %esi
0x000000003ffb176d:  pop    %edi
0x000000003ffb176e:  ret    

----------------
IN: 
0x000000003ffb8f26:  lea    0x8c(%esp),%edx
0x000000003ffb8f2d:  mov    %edi,%eax
0x000000003ffb8f2f:  call   0x3ffb06bd

----------------
IN: 
0x000000003ffb06bd:  push   %edi
0x000000003ffb06be:  push   %esi
0x000000003ffb06bf:  push   %ebx
0x000000003ffb06c0:  mov    %eax,%esi
0x000000003ffb06c2:  mov    %edx,%edi
0x000000003ffb06c4:  mov    $0x2c,%eax
0x000000003ffb06c9:  call   0x3ffaef75

----------------
IN: 
0x000000003ffb06ce:  mov    %eax,%ebx
0x000000003ffb06d0:  test   %eax,%eax
0x000000003ffb06d2:  jne    0x3ffb06e7

----------------
IN: 
0x000000003ffb06e7:  mov    $0x2c,%ecx
0x000000003ffb06ec:  xor    %edx,%edx
0x000000003ffb06ee:  call   0xf118c

----------------
IN: 
0x000000003ffb06f3:  mov    0x24(%esi),%eax
0x000000003ffb06f6:  mov    %eax,0x24(%ebx)
0x000000003ffb06f9:  mov    0x28(%esi),%dl
0x000000003ffb06fc:  mov    %dl,0x28(%ebx)
0x000000003ffb06ff:  movzbl 0x7(%eax),%eax
0x000000003ffb0703:  add    %eax,%eax
0x000000003ffb0705:  movzbl 0x28(%esi),%edx
0x000000003ffb0709:  add    %edx,%eax
0x000000003ffb070b:  mov    %eax,0x14(%ebx)
0x000000003ffb070e:  mov    (%edi),%ax
0x000000003ffb0711:  shr    $0x7,%ax
0x000000003ffb0715:  and    $0x1,%eax
0x000000003ffb0718:  mov    %al,0x18(%ebx)
0x000000003ffb071b:  mov    %ebx,%eax
0x000000003ffb071d:  pop    %ebx
0x000000003ffb071e:  pop    %esi
0x000000003ffb071f:  pop    %edi
0x000000003ffb0720:  ret    

----------------
IN: 
0x000000003ffb8f34:  mov    %eax,%ebx
0x000000003ffb8f36:  test   %eax,%eax
0x000000003ffb8f38:  je     0x3ffb9056

----------------
IN: 
0x000000003ffb8f3e:  movb   $0x20,(%eax)
0x000000003ffb8f41:  movw   $0x200,0x1a(%eax)
0x000000003ffb8f47:  mov    0x8e(%esp),%ax
0x000000003ffb8f4f:  mov    %ax,0x1e(%ebx)
0x000000003ffb8f53:  mov    0x92(%esp),%ax
0x000000003ffb8f5b:  mov    %ax,0x1c(%ebx)
0x000000003ffb8f5f:  mov    0x98(%esp),%eax
0x000000003ffb8f66:  mov    %ax,0x20(%ebx)
0x000000003ffb8f6a:  testb  $0x4,0x133(%esp)
0x000000003ffb8f72:  je     0x3ffb8f84

----------------
IN: 
0x000000003ffb8f74:  mov    0x154(%esp),%esi
0x000000003ffb8f7b:  mov    0x158(%esp),%edi
0x000000003ffb8f82:  jmp    0x3ffb8f8d

----------------
IN: 
0x000000003ffb8f8d:  mov    %esi,0xc(%ebx)
0x000000003ffb8f90:  mov    %edi,0x10(%ebx)
0x000000003ffb8f93:  shrd   $0xb,%edi,%esi
0x000000003ffb8f97:  shr    $0xb,%edi
0x000000003ffb8f9a:  cmp    $0x0,%edi
0x000000003ffb8f9d:  ja     0x3ffb8fa9

----------------
IN: 
0x000000003ffb8f9f:  mov    $0x4d,%cl
0x000000003ffb8fa1:  cmp    $0xffff,%esi
0x000000003ffb8fa7:  jbe    0x3ffb8fb2

----------------
IN: 
0x000000003ffb8fb2:  mov    %ecx,0x24(%esp)
0x000000003ffb8fb6:  lea    0x8c(%esp),%eax
0x000000003ffb8fbd:  call   0x3ffaee30

----------------
IN: 
0x000000003ffaee30:  mov    $0xf,%edx
0x000000003ffaee35:  movzwl 0xa0(%eax),%ecx
0x000000003ffaee3c:  movzbl %dl,%eax
0x000000003ffaee3f:  bt     %edx,%ecx
0x000000003ffaee42:  jb     0x3ffaee49

----------------
IN: 
0x000000003ffaee44:  dec    %edx
0x000000003ffaee45:  jne    0x3ffaee3c

----------------
IN: 
0x000000003ffaee3c:  movzbl %dl,%eax
0x000000003ffaee3f:  bt     %edx,%ecx
0x000000003ffaee42:  jb     0x3ffaee49

----------------
IN: 
0x000000003ffaee49:  ret    

----------------
IN: 
0x000000003ffb8fc2:  mov    %eax,%edi
0x000000003ffb8fc4:  lea    0x8c(%esp),%edx
0x000000003ffb8fcb:  lea    0x37(%esp),%eax
0x000000003ffb8fcf:  call   0x3ffafd89

----------------
IN: 
0x000000003ffafd89:  push   %ebx
0x000000003ffafd8a:  mov    %eax,%ebx
0x000000003ffafd8c:  xor    %ecx,%ecx
0x000000003ffafd8e:  mov    0x36(%edx,%ecx,2),%ax
0x000000003ffafd93:  xchg   %ah,%al
0x000000003ffafd95:  mov    %ax,(%ebx,%ecx,2)
0x000000003ffafd99:  inc    %ecx
0x000000003ffafd9a:  cmp    $0x14,%ecx
0x000000003ffafd9d:  jne    0x3ffafd8e

----------------
IN: 
0x000000003ffafd8e:  mov    0x36(%edx,%ecx,2),%ax
0x000000003ffafd93:  xchg   %ah,%al
0x000000003ffafd95:  mov    %ax,(%ebx,%ecx,2)
0x000000003ffafd99:  inc    %ecx
0x000000003ffafd9a:  cmp    $0x14,%ecx
0x000000003ffafd9d:  jne    0x3ffafd8e

----------------
IN: 
0x000000003ffafd9f:  movb   $0x0,0x28(%ebx)
0x000000003ffafda3:  mov    %ebx,%eax
0x000000003ffafda5:  call   0x3ffaeb75

----------------
IN: 
0x000000003ffaeb75:  push   %ebx
0x000000003ffaeb76:  mov    %eax,%ebx
0x000000003ffaeb78:  call   0x3ffaeb25

----------------
IN: 
0x000000003ffaeb7d:  lea    -0x1(%ebx,%eax,1),%eax
0x000000003ffaeb81:  cmp    %ebx,%eax
0x000000003ffaeb83:  jb     0x3ffaeb96

----------------
IN: 
0x000000003ffaeb85:  cmpb   $0x20,(%eax)
0x000000003ffaeb88:  jg     0x3ffaeb96

----------------
IN: 
0x000000003ffaeb8a:  dec    %eax
0x000000003ffaeb8b:  movb   $0x0,0x1(%eax)
0x000000003ffaeb8f:  jmp    0x3ffaeb81

----------------
IN: 
0x000000003ffaeb81:  cmp    %ebx,%eax
0x000000003ffaeb83:  jb     0x3ffaeb96

----------------
IN: 
0x000000003ffaeb96:  mov    (%ebx),%al
0x000000003ffaeb98:  cmp    $0x20,%al
0x000000003ffaeb9a:  jle    0x3ffaeb91

----------------
IN: 
0x000000003ffaeb9c:  mov    %ebx,%eax
0x000000003ffaeb9e:  pop    %ebx
0x000000003ffaeb9f:  ret    

----------------
IN: 
0x000000003ffafdaa:  mov    %ebx,%eax
0x000000003ffafdac:  pop    %ebx
0x000000003ffafdad:  ret    

----------------
IN: 
0x000000003ffb8fd4:  mov    0x24(%esp),%ecx
0x000000003ffb8fd8:  movsbl %cl,%ecx
0x000000003ffb8fdb:  mov    %ecx,0x1c(%esp)
0x000000003ffb8fdf:  mov    %esi,0x18(%esp)
0x000000003ffb8fe3:  mov    %edi,0x14(%esp)
0x000000003ffb8fe7:  mov    %eax,0x10(%esp)
0x000000003ffb8feb:  movzbl 0x28(%ebx),%eax
0x000000003ffb8fef:  mov    %eax,0xc(%esp)
0x000000003ffb8ff3:  mov    0x24(%ebx),%eax
0x000000003ffb8ff6:  movzbl 0x7(%eax),%eax
0x000000003ffb8ffa:  mov    %eax,0x8(%esp)
0x000000003ffb8ffe:  movl   $0xf54ed,0x4(%esp)
0x000000003ffb9006:  movl   $0x50,(%esp)
0x000000003ffb900d:  call   0x3ffb5342

----------------
IN: 
0x000000003ffb9012:  mov    %eax,%esi
0x000000003ffb9014:  mov    %eax,0x4(%esp)
0x000000003ffb9018:  movl   $0xf6010,(%esp)
0x000000003ffb901f:  call   0xf1cc0

----------------
IN: 
0x000000003ffb9024:  mov    0x24(%ebx),%eax
0x000000003ffb9027:  movzbl 0x28(%ebx),%ecx
0x000000003ffb902b:  movzbl 0x7(%eax),%edx
0x000000003ffb902f:  mov    0xc(%eax),%eax
0x000000003ffb9032:  call   0x3ffb528c

----------------
IN: 
0x000000003ffb528c:  test   %eax,%eax
0x000000003ffb528e:  je     0x3ffb52e3

----------------
IN: 
0x000000003ffb5290:  push   %esi
0x000000003ffb5291:  push   %ebx
0x000000003ffb5292:  sub    $0x114,%esp
0x000000003ffb5298:  mov    %edx,%ebx
0x000000003ffb529a:  mov    %ecx,%esi
0x000000003ffb529c:  mov    %eax,%ecx
0x000000003ffb529e:  mov    $0xf4eab,%edx
0x000000003ffb52a3:  lea    0x14(%esp),%eax
0x000000003ffb52a7:  call   0x3ffb4e81

----------------
IN: 
0x000000003ffb4f25:  mov    %edi,0xc(%esp)
0x000000003ffb4f29:  movl   $0xf4e82,0x8(%esp)
0x000000003ffb4f31:  sub    %ebx,%esi
0x000000003ffb4f33:  mov    %esi,0x4(%esp)
0x000000003ffb4f37:  mov    %ebx,(%esp)
0x000000003ffb4f3a:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb4f3f:  add    %eax,%ebx
0x000000003ffb4f41:  mov    %ebx,%eax
0x000000003ffb4f43:  add    $0x14,%esp
0x000000003ffb4f46:  pop    %ebx
0x000000003ffb4f47:  pop    %esi
0x000000003ffb4f48:  pop    %edi
0x000000003ffb4f49:  pop    %ebp
0x000000003ffb4f4a:  ret    

----------------
IN: 
0x000000003ffb52ac:  mov    %esi,0x10(%esp)
0x000000003ffb52b0:  mov    %ebx,0xc(%esp)
0x000000003ffb52b4:  movl   $0xf4ef5,0x8(%esp)
0x000000003ffb52bc:  lea    0x114(%esp),%edx
0x000000003ffb52c3:  sub    %eax,%edx
0x000000003ffb52c5:  mov    %edx,0x4(%esp)
0x000000003ffb52c9:  mov    %eax,(%esp)
0x000000003ffb52cc:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb52d1:  lea    0x14(%esp),%eax
0x000000003ffb52d5:  call   0x3ffb1d15

----------------
IN: 
0x000000003ffb52da:  add    $0x114,%esp
0x000000003ffb52e0:  pop    %ebx
0x000000003ffb52e1:  pop    %esi
0x000000003ffb52e2:  ret    

----------------
IN: 
0x000000003ffb9037:  mov    %eax,%ecx
0x000000003ffb9039:  mov    %esi,%edx
0x000000003ffb903b:  mov    %ebx,%eax
0x000000003ffb903d:  call   0x3ffb0864

----------------
IN: 
0x000000003ffb0864:  push   %esi
0x000000003ffb0865:  push   %ebx
0x000000003ffb0866:  push   %ebx
0x000000003ffb0867:  mov    0x3ffbfe7f,%esi
0x000000003ffb086d:  mov    %ecx,%ebx
0x000000003ffb086f:  test   %ecx,%ecx
0x000000003ffb0871:  jns    0x3ffb0875

----------------
IN: 
0x000000003ffb0873:  mov    %esi,%ebx
0x000000003ffb0875:  mov    %edx,(%esp)
0x000000003ffb0878:  mov    %eax,%ecx
0x000000003ffb087a:  mov    %ebx,%edx
0x000000003ffb087c:  mov    $0x2,%eax
0x000000003ffb0881:  call   0x3ffb07d1

----------------
IN: 
0x000000003ffb0836:  cmp    -0x8(%ebx),%edi
0x000000003ffb0839:  jl     0x3ffb0826

----------------
IN: 
0x000000003ffb0886:  pop    %eax
0x000000003ffb0887:  pop    %ebx
0x000000003ffb0888:  pop    %esi
0x000000003ffb0889:  ret    

----------------
IN: 
0x000000003ffb9042:  test   %ebx,%ebx
0x000000003ffb9044:  jne    0x3ffb8ec8

----------------
IN: 
0x000000003ffb8ec8:  mov    0x146(%esp),%ax
0x000000003ffb8ed0:  cmpb   $0x0,0x23(%esp)
0x000000003ffb8ed5:  jne    0x3ffb9056

----------------
IN: 
0x000000003ffb906a:  add    $0x28c,%esp
0x000000003ffb9070:  pop    %ebx
0x000000003ffb9071:  pop    %esi
0x000000003ffb9072:  pop    %edi
0x000000003ffb9073:  pop    %ebp
0x000000003ffb9074:  ret    

----------------
IN: 
0x000000003ffb429f:  jmp    0x3ffb4226

----------------
IN: 
0x000000003ffb4226:  in     $0x64,%al
0x000000003ffb4228:  movzbl %al,%ecx
0x000000003ffb422b:  test   $0x1,%cl
0x000000003ffb422e:  je     0x3ffb4276

----------------
IN: 
0x000000003ffb420b:  add    $0x8,%esp
0x000000003ffb420e:  pop    %ebx
0x000000003ffb420f:  pop    %esi
0x000000003ffb4210:  pop    %edi
0x000000003ffb4211:  pop    %ebp
0x000000003ffb4212:  ret    

----------------
IN: 
0x000000003ffb9ea0:  movb   $0xc0,0x476
0x000000003ffb9ea7:  mov    $0x4000,%eax
0x000000003ffb9eac:  call   0x3ffafe37

----------------
IN: 
0x000000003ffb9eb1:  mov    $0xfd652,%eax
0x000000003ffb9eb6:  mov    %ax,0x1d8
0x000000003ffb9ebc:  movw   $0xf000,0x1da
0x000000003ffb9ec5:  mov    0x3ffbfee3,%eax
0x000000003ffb9eca:  lea    -0x4(%eax),%edi
0x000000003ffb9ecd:  cmp    $0xfffffffc,%edi
0x000000003ffb9ed0:  je     0x3ffba0be

----------------
IN: 
0x000000003ffb9ed6:  cmpw   $0x106,0x14(%edi)
0x000000003ffb9edc:  jne    0x3ffba0b3

----------------
IN: 
0x000000003ffba0b3:  mov    0x4(%edi),%edi
0x000000003ffba0b6:  sub    $0x4,%edi
0x000000003ffba0b9:  jmp    0x3ffb9ecd

----------------
IN: 
0x000000003ffb9ecd:  cmp    $0xfffffffc,%edi
0x000000003ffb9ed0:  je     0x3ffba0be

----------------
IN: 
0x000000003ffba0be:  mov    0x3ffbfee3,%eax
0x000000003ffba0c3:  lea    -0x4(%eax),%ebx
0x000000003ffba0c6:  cmp    $0xfffffffc,%ebx
0x000000003ffba0c9:  je     0x3ffba0e3

----------------
IN: 
0x000000003ffba0cb:  cmpl   $0x10011af4,0x10(%ebx)
0x000000003ffba0d2:  jne    0x3ffba0db

----------------
IN: 
0x000000003ffba0db:  mov    0x4(%ebx),%ebx
0x000000003ffba0de:  sub    $0x4,%ebx
0x000000003ffba0e1:  jmp    0x3ffba0c6

----------------
IN: 
0x000000003ffba0c6:  cmp    $0xfffffffc,%ebx
0x000000003ffba0c9:  je     0x3ffba0e3

----------------
IN: 
0x000000003ffba0e3:  mov    0x3ffbfee3,%eax
0x000000003ffba0e8:  lea    -0x4(%eax),%esi
0x000000003ffba0eb:  cmp    $0xfffffffc,%esi
0x000000003ffba0ee:  je     0x3ffba22f

----------------
IN: 
0x000000003ffba0f4:  cmpl   $0x10041af4,0x10(%esi)
0x000000003ffba0fb:  jne    0x3ffba224

----------------
IN: 
0x000000003ffba224:  mov    0x4(%esi),%esi
0x000000003ffba227:  sub    $0x4,%esi
0x000000003ffba22a:  jmp    0x3ffba0eb

----------------
IN: 
0x000000003ffba0eb:  cmp    $0xfffffffc,%esi
0x000000003ffba0ee:  je     0x3ffba22f

----------------
IN: 
0x000000003ffba22f:  mov    0x3ffbfee3,%eax
0x000000003ffba234:  lea    -0x4(%eax),%esi
0x000000003ffba237:  cmp    $0xfffffffc,%esi
0x000000003ffba23a:  je     0x3ffba37d

----------------
IN: 
0x000000003ffba240:  cmpl   $0x121000,0x10(%esi)
0x000000003ffba247:  jne    0x3ffba372

----------------
IN: 
0x000000003ffba372:  mov    0x4(%esi),%esi
0x000000003ffba375:  sub    $0x4,%esi
0x000000003ffba378:  jmp    0x3ffba237

----------------
IN: 
0x000000003ffba237:  cmp    $0xfffffffc,%esi
0x000000003ffba23a:  je     0x3ffba37d

----------------
IN: 
0x000000003ffba37d:  mov    0x3ffbfee3,%eax
0x000000003ffba382:  lea    -0x4(%eax),%esi
0x000000003ffba385:  cmp    $0xfffffffc,%esi
0x000000003ffba388:  je     0x3ffba4cb

----------------
IN: 
0x000000003ffba38e:  cmpl   $0x20201022,0x10(%esi)
0x000000003ffba395:  jne    0x3ffba4c0

----------------
IN: 
0x000000003ffba4c0:  mov    0x4(%esi),%esi
0x000000003ffba4c3:  sub    $0x4,%esi
0x000000003ffba4c6:  jmp    0x3ffba385

----------------
IN: 
0x000000003ffba385:  cmp    $0xfffffffc,%esi
0x000000003ffba388:  je     0x3ffba4cb

----------------
IN: 
0x000000003ffba4cb:  mov    0x3ffbfee3,%eax
0x000000003ffba4d0:  lea    -0x4(%eax),%esi
0x000000003ffba4d3:  cmp    $0xfffffffc,%esi
0x000000003ffba4d6:  je     0x3ffba74f

----------------
IN: 
0x000000003ffba4dc:  mov    0x10(%esi),%eax
0x000000003ffba4df:  cmp    $0x1028,%ax
0x000000003ffba4e3:  je     0x3ffba4ef

----------------
IN: 
0x000000003ffba4e5:  cmp    $0x1000,%ax
0x000000003ffba4e9:  jne    0x3ffba744

----------------
IN: 
0x000000003ffba744:  mov    0x4(%esi),%esi
0x000000003ffba747:  sub    $0x4,%esi
0x000000003ffba74a:  jmp    0x3ffba4d3

----------------
IN: 
0x000000003ffba4d3:  cmp    $0xfffffffc,%esi
0x000000003ffba4d6:  je     0x3ffba74f

----------------
IN: 
0x000000003ffba74f:  mov    0x3ffbfee3,%eax
0x000000003ffba754:  lea    -0x4(%eax),%esi
0x000000003ffba757:  cmp    $0xfffffffc,%esi
0x000000003ffba75a:  je     0x3ffba8cb

----------------
IN: 
0x000000003ffba760:  cmpl   $0x7c015ad,0x10(%esi)
0x000000003ffba767:  jne    0x3ffba8b2

----------------
IN: 
0x000000003ffba8b2:  mov    0x4(%esi),%esi
0x000000003ffba8b5:  sub    $0x4,%esi
0x000000003ffba8b8:  jmp    0x3ffba757

----------------
IN: 
0x000000003ffba757:  cmp    $0xfffffffc,%esi
0x000000003ffba75a:  je     0x3ffba8cb

----------------
IN: 
0x000000003ffba8cb:  add    $0x34,%esp
0x000000003ffba8ce:  pop    %ebx
0x000000003ffba8cf:  pop    %esi
0x000000003ffba8d0:  pop    %edi
0x000000003ffba8d1:  pop    %ebp
0x000000003ffba8d2:  ret    

----------------
IN: 
0x000000003ffbb8bd:  call   0x3ffb0301

----------------
IN: 
0x000000003ffb0301:  cmpl   $0xf6bd8,0xf6bd8
0x000000003ffb030b:  je     0x3ffb0314

----------------
IN: 
0x000000003ffb030d:  call   0xf1b80

Servicing hardware INT=0x09
----------------
IN: 
0x00000000000fe987:  pushl  $0xcedd
0x00000000000fe98d:  jmp    0xfd540

----------------
IN: 
0x00000000000fcedd:  push   %edx
0x00000000000fcedf:  in     $0x64,%al
0x00000000000fcee1:  test   $0x20,%al
0x00000000000fcee3:  je     0xfcef6

----------------
IN: 
0x00000000000fcef6:  in     $0x60,%al
0x00000000000fcef8:  mov    $0xe000,%edx
0x00000000000fcefe:  mov    %dx,%es
0x00000000000fcf00:  mov    %es:-0x860,%dl
0x00000000000fcf05:  and    $0x1,%dl
0x00000000000fcf08:  je     0xfcf23

----------------
IN: 
0x00000000000fcf23:  mov    $0x20,%al
0x00000000000fcf25:  out    %al,$0x20
0x00000000000fcf27:  pop    %eax
0x00000000000fcf29:  retl   

----------------
IN: 
0x000000003ffb8de8:  lea    0x8c(%esp),%edx
0x000000003ffb8def:  mov    %edi,%eax
0x000000003ffb8df1:  call   0x3ffb06bd

----------------
IN: 
0x000000003ffb8df6:  mov    %eax,%ebx
0x000000003ffb8df8:  test   %eax,%eax
0x000000003ffb8dfa:  je     0x3ffb8ee0

----------------
IN: 
0x000000003ffb8e00:  movb   $0x21,(%eax)
0x000000003ffb8e03:  movw   $0x800,0x1a(%eax)
0x000000003ffb8e09:  movl   $0xffffffff,0xc(%eax)
0x000000003ffb8e10:  movl   $0xffffffff,0x10(%eax)
0x000000003ffb8e17:  movzbl 0x8d(%esp),%eax
0x000000003ffb8e1f:  and    $0x1f,%eax
0x000000003ffb8e22:  cmp    $0x5,%ax
0x000000003ffb8e26:  sete   %cl
0x000000003ffb8e29:  mov    $0xf54c4,%esi
0x000000003ffb8e2e:  test   %cl,%cl
0x000000003ffb8e30:  je     0x3ffb8e37

----------------
IN: 
0x000000003ffb8e32:  mov    $0xf54bd,%esi
0x000000003ffb8e37:  mov    %ecx,0x24(%esp)
0x000000003ffb8e3b:  lea    0x8c(%esp),%eax
0x000000003ffb8e42:  call   0x3ffaee30

----------------
IN: 
0x000000003ffb8e47:  mov    %eax,%edi
0x000000003ffb8e49:  lea    0x8c(%esp),%edx
0x000000003ffb8e50:  lea    0x37(%esp),%eax
0x000000003ffb8e54:  call   0x3ffafd89

----------------
IN: 
0x000000003ffb8e59:  mov    %esi,0x18(%esp)
0x000000003ffb8e5d:  mov    %edi,0x14(%esp)
0x000000003ffb8e61:  mov    %eax,0x10(%esp)
0x000000003ffb8e65:  movzbl 0x28(%ebx),%eax
0x000000003ffb8e69:  mov    %eax,0xc(%esp)
0x000000003ffb8e6d:  mov    0x24(%ebx),%eax
0x000000003ffb8e70:  movzbl 0x7(%eax),%eax
0x000000003ffb8e74:  mov    %eax,0x8(%esp)
0x000000003ffb8e78:  movl   $0xf54cb,0x4(%esp)
0x000000003ffb8e80:  movl   $0x50,(%esp)
0x000000003ffb8e87:  call   0x3ffb5342

----------------
IN: 
0x000000003ffb8e8c:  mov    %eax,%esi
0x000000003ffb8e8e:  mov    %eax,0x4(%esp)
0x000000003ffb8e92:  movl   $0xf6010,(%esp)
0x000000003ffb8e99:  call   0xf1cc0

----------------
IN: 
0x000000003ffb8e9e:  mov    0x24(%esp),%ecx
0x000000003ffb8ea2:  test   %cl,%cl
0x000000003ffb8ea4:  je     0x3ffb8ec4

----------------
IN: 
0x000000003ffb8ea6:  mov    0x24(%ebx),%eax
0x000000003ffb8ea9:  movzbl 0x28(%ebx),%ecx
0x000000003ffb8ead:  movzbl 0x7(%eax),%edx
0x000000003ffb8eb1:  mov    0xc(%eax),%eax
0x000000003ffb8eb4:  call   0x3ffb528c

----------------
IN: 
0x000000003ffb8eb9:  mov    %eax,%ecx
0x000000003ffb8ebb:  mov    %esi,%edx
0x000000003ffb8ebd:  mov    %ebx,%eax
0x000000003ffb8ebf:  call   0x3ffb088a

----------------
IN: 
0x000000003ffb088a:  push   %esi
0x000000003ffb088b:  push   %ebx
0x000000003ffb088c:  push   %ebx
0x000000003ffb088d:  mov    0x3ffbfe83,%esi
0x000000003ffb0893:  mov    %ecx,%ebx
0x000000003ffb0895:  test   %ecx,%ecx
0x000000003ffb0897:  jns    0x3ffb089b

----------------
IN: 
0x000000003ffb0899:  mov    %esi,%ebx
0x000000003ffb089b:  mov    %edx,(%esp)
0x000000003ffb089e:  mov    %eax,%ecx
0x000000003ffb08a0:  mov    %ebx,%edx
0x000000003ffb08a2:  mov    $0x3,%eax
0x000000003ffb08a7:  call   0x3ffb07d1

----------------
IN: 
0x000000003ffb083b:  jg     0x3ffb085d

----------------
IN: 
0x000000003ffb085d:  mov    %ebx,(%esp)
0x000000003ffb0860:  mov    (%ebx),%ebx
0x000000003ffb0862:  jmp    0x3ffb0822

----------------
IN: 
0x000000003ffb0822:  test   %ebx,%ebx
0x000000003ffb0824:  jne    0x3ffb0836

----------------
IN: 
0x000000003ffb08ac:  pop    %eax
0x000000003ffb08ad:  pop    %ebx
0x000000003ffb08ae:  pop    %esi
0x000000003ffb08af:  ret    

----------------
IN: 
0x000000003ffb8ec4:  test   %ebx,%ebx
0x000000003ffb8ec6:  je     0x3ffb8ee0

----------------
IN: 
0x000000003ffb8edb:  jmp    0x3ffb904c

----------------
IN: 
0x000000003ffb904c:  and    $0xdf61,%ax
0x000000003ffb9050:  cmp    $0x4041,%ax
0x000000003ffb9054:  je     0x3ffb906a

----------------
IN: 
0x000000003ffb0312:  jmp    0x3ffb0301

Servicing hardware INT=0x08
Servicing hardware INT=0x08
----------------
IN: 
0x000000003ffb4281:  or     $0xffffffff,%ebx
0x000000003ffb4284:  cmp    $0x64,%esi
0x000000003ffb4287:  jle    0x3ffb42a6

----------------
IN: 
0x000000003ffb437d:  mov    %eax,%edx
0x000000003ffb437f:  not    %edx
0x000000003ffb4381:  sar    $0x1f,%edx
0x000000003ffb4384:  and    %edx,%eax
0x000000003ffb4386:  jmp    0x3ffb43ee

----------------
IN: 
0x000000003ffb43ee:  mov    %al,0x1(%esi)
0x000000003ffb43f1:  jmp    0x3ffb445b

----------------
IN: 
0x000000003ffb445b:  lea    0x6(%esp),%edx
0x000000003ffb445f:  mov    $0x1060,%eax
0x000000003ffb4464:  call   0x3ffb0fb5

----------------
IN: 
0x000000003ffb4469:  test   %eax,%eax
0x000000003ffb446b:  je     0x3ffb446f

----------------
IN: 
0x000000003ffb446f:  mov    %ebx,%eax
0x000000003ffb4471:  add    $0x8,%esp
0x000000003ffb4474:  pop    %ebx
0x000000003ffb4475:  pop    %esi
0x000000003ffb4476:  pop    %edi
0x000000003ffb4477:  pop    %ebp
0x000000003ffb4478:  ret    

----------------
IN: 
0x000000003ffb90cc:  test   %eax,%eax
0x000000003ffb90ce:  je     0x3ffb9161

----------------
IN: 
0x000000003ffb9161:  movzbl 0xa(%esp),%eax
0x000000003ffb9166:  cmp    $0xaa,%al
0x000000003ffb9168:  je     0x3ffb917c

----------------
IN: 
0x000000003ffb917c:  xor    %edx,%edx
0x000000003ffb917e:  mov    $0xf5,%eax
0x000000003ffb9183:  call   0x3ffb42e4

----------------
IN: 
0x000000003ffb4388:  cmp    $0x2f2,%edi
0x000000003ffb438e:  jne    0x3ffb43f9

----------------
IN: 
0x000000003ffb43f9:  mov    %edi,%eax
0x000000003ffb43fb:  movzbl %al,%eax
0x000000003ffb43fe:  mov    $0xc8,%edx
0x000000003ffb4403:  call   0x3ffb42af

----------------
IN: 
0x000000003ffb4408:  mov    %eax,%ebx
0x000000003ffb440a:  test   %eax,%eax
0x000000003ffb440c:  jne    0x3ffb445b

----------------
IN: 
0x000000003ffb440e:  mov    %edi,%ecx
0x000000003ffb4410:  sar    $0xc,%ecx
0x000000003ffb4413:  and    $0xf,%ecx
0x000000003ffb4416:  xor    %ebp,%ebp
0x000000003ffb4418:  cmp    %ecx,%ebp
0x000000003ffb441a:  jge    0x3ffb4437

----------------
IN: 
0x000000003ffb4437:  sar    $0x8,%edi
0x000000003ffb443a:  and    $0xf,%edi
0x000000003ffb443d:  xor    %ebp,%ebp
0x000000003ffb443f:  cmp    %edi,%ebp
0x000000003ffb4441:  jge    0x3ffb445b

----------------
IN: 
0x000000003ffb9188:  test   %eax,%eax
0x000000003ffb918a:  jne    0x3ffb91c2

----------------
IN: 
0x000000003ffb918c:  movb   $0x2,0xa(%esp)
0x000000003ffb9191:  lea    0xa(%esp),%edx
0x000000003ffb9195:  mov    $0x10f0,%ax
0x000000003ffb9199:  call   0x3ffb42e4

----------------
IN: 
0x000000003ffb441c:  mov    %ecx,(%esp)
0x000000003ffb441f:  movzbl (%esi,%ebp,1),%eax
0x000000003ffb4423:  mov    $0xc8,%edx
0x000000003ffb4428:  call   0x3ffb42af

----------------
IN: 
0x000000003ffb442d:  test   %eax,%eax
0x000000003ffb442f:  jne    0x3ffb4459

----------------
IN: 
0x000000003ffb4431:  inc    %ebp
0x000000003ffb4432:  mov    (%esp),%ecx
0x000000003ffb4435:  jmp    0x3ffb4418

----------------
IN: 
0x000000003ffb4418:  cmp    %ecx,%ebp
0x000000003ffb441a:  jge    0x3ffb4437

----------------
IN: 
0x000000003ffb919e:  test   %eax,%eax
0x000000003ffb91a0:  jne    0x3ffb91c2

----------------
IN: 
0x000000003ffb91a2:  movb   $0x61,0xef7a0
0x000000003ffb91a9:  xor    %edx,%edx
0x000000003ffb91ab:  mov    $0xf4,%al
0x000000003ffb91ad:  call   0x3ffb42e4

----------------
IN: 
0x000000003ffb91b2:  test   %eax,%eax
0x000000003ffb91b4:  jne    0x3ffb91c2

----------------
IN: 
0x000000003ffb91b6:  movl   $0xf55b6,(%esp)
0x000000003ffb91bd:  call   0xf1cc0

----------------
IN: 
0x000000003ffb91c2:  add    $0xc,%esp
0x000000003ffb91c5:  pop    %ebx
0x000000003ffb91c6:  pop    %esi
0x000000003ffb91c7:  ret    

----------------
IN: 
0x000000003ffb0314:  ret    

----------------
IN: 
0x000000003ffbb8c2:  call   0x3ffb507f

----------------
IN: 
0x000000003ffb507f:  push   %ebp
0x000000003ffb5080:  mov    %esp,%ebp
0x000000003ffb5082:  push   %edi
0x000000003ffb5083:  push   %esi
0x000000003ffb5084:  push   %ebx
0x000000003ffb5085:  and    $0xfffffff8,%esp
0x000000003ffb5088:  sub    $0x318,%esp
0x000000003ffb508e:  movl   $0xf4ed6,(%esp)
0x000000003ffb5095:  call   0xf1cc0

----------------
IN: 
0x000000003ffb509a:  mov    $0x300,%ecx
0x000000003ffb509f:  xor    %edx,%edx
0x000000003ffb50a1:  lea    0x18(%esp),%eax
0x000000003ffb50a5:  call   0xf118c

----------------
IN: 
0x000000003ffb50aa:  mov    0x3ffbfe93,%ebx
0x000000003ffb50b0:  mov    0x3ffbfee3,%eax
0x000000003ffb50b5:  lea    -0x4(%eax),%esi
0x000000003ffb50b8:  cmp    $0xfffffffc,%esi
0x000000003ffb50bb:  je     0x3ffb50e0

----------------
IN: 
0x000000003ffb50bd:  cmpw   $0x300,0x14(%esi)
0x000000003ffb50c3:  je     0x3ffb50d8

----------------
IN: 
0x000000003ffb50c5:  cmpl   $0x0,0x1c(%esi)
0x000000003ffb50c9:  jne    0x3ffb50d8

----------------
IN: 
0x000000003ffb50cb:  lea    0x18(%esp),%ecx
0x000000003ffb50cf:  xor    %edx,%edx
0x000000003ffb50d1:  mov    %esi,%eax
0x000000003ffb50d3:  call   0x3ffb46f3

----------------
IN: 
0x000000003ffb4898:  mov    %esi,%ecx
0x000000003ffb489a:  mov    $0x30,%edx
0x000000003ffb489f:  mov    0x14(%esp),%eax
0x000000003ffb48a3:  call   0xf11f0

----------------
IN: 
0x000000003ffb48a8:  jmp    0x3ffb48d8

----------------
IN: 
0x000000003ffb48d8:  or     $0xffffffff,%eax
0x000000003ffb48db:  add    $0x40,%esp
0x000000003ffb48de:  pop    %ebx
0x000000003ffb48df:  pop    %esi
0x000000003ffb48e0:  pop    %edi
0x000000003ffb48e1:  pop    %ebp
0x000000003ffb48e2:  ret    

----------------
IN: 
0x000000003ffb50d8:  mov    0x4(%esi),%esi
0x000000003ffb50db:  sub    $0x4,%esi
0x000000003ffb50de:  jmp    0x3ffb50b8

----------------
IN: 
0x000000003ffb50b8:  cmp    $0xfffffffc,%esi
0x000000003ffb50bb:  je     0x3ffb50e0

----------------
IN: 
0x000000003ffb48b2:  lea    -0xc0000(%edi),%eax
0x000000003ffb48b8:  shr    $0xb,%eax
0x000000003ffb48bb:  mov    %ebx,(%esi,%eax,8)
0x000000003ffb48be:  movl   $0x2,0x4(%esi,%eax,8)
0x000000003ffb48c6:  movzwl 0x1a(%esp),%edx
0x000000003ffb48cb:  mov    0x1c(%esp),%ecx
0x000000003ffb48cf:  mov    %edi,%eax
0x000000003ffb48d1:  call   0x3ffb1c0a

----------------
IN: 
0x000000003ffb1c5c:  movzwl 0x1a(%ebx),%eax
0x000000003ffb1c60:  add    %ebx,%eax
0x000000003ffb1c62:  cmpl   $0x506e5024,(%eax)
0x000000003ffb1c68:  jne    0x3ffb1c7d

----------------
IN: 
0x000000003ffb1c6a:  test   %eax,%eax
0x000000003ffb1c6c:  je     0x3ffb1c7d

----------------
IN: 
0x00000000000c9803:  jmp    0xc98a5

----------------
IN: 
0x00000000000c98a5:  pusha  
0x00000000000c98a6:  push   %ds
0x00000000000c98a7:  push   %es
0x00000000000c98a8:  push   %fs
0x00000000000c98aa:  push   %gs
0x00000000000c98ac:  cld    
0x00000000000c98ad:  push   %cs
0x00000000000c98ae:  pop    %ds
0x00000000000c98af:  mov    $0x303,%si
0x00000000000c98b2:  xor    %di,%di
0x00000000000c98b4:  call   0xc9ca7

----------------
IN: 
0x00000000000c9ca7:  push   %ax
0x00000000000c9ca8:  lods   %ds:(%si),%al
0x00000000000c9ca9:  test   %al,%al
0x00000000000c9cab:  je     0xc9cb2

----------------
IN: 
0x00000000000c9cad:  call   0xc9c80

----------------
IN: 
0x00000000000c9c80:  push   %ax
0x00000000000c9c81:  push   %bx
0x00000000000c9c82:  push   %bp
0x00000000000c9c83:  test   %di,%di
0x00000000000c9c85:  je     0xc9c8c

----------------
IN: 
0x00000000000c9c8c:  mov    $0x7,%bx
0x00000000000c9c8f:  mov    $0xe,%ah
0x00000000000c9c91:  cmp    $0xa,%al
0x00000000000c9c93:  jne    0xc9c99

----------------
IN: 
0x00000000000c9c95:  int    $0x10

----------------
IN: 
0x00000000000c9c97:  mov    $0xd,%al
0x00000000000c9c99:  int    $0x10

----------------
IN: 
0x00000000000c9c9b:  pop    %bp
0x00000000000c9c9c:  pop    %bx
0x00000000000c9c9d:  pop    %ax
0x00000000000c9c9e:  ret    

----------------
IN: 
0x00000000000c9cb0:  jmp    0xc9ca8

----------------
IN: 
0x00000000000c9ca8:  lods   %ds:(%si),%al
0x00000000000c9ca9:  test   %al,%al
0x00000000000c9cab:  je     0xc9cb2

----------------
IN: 
0x00000000000c9c99:  int    $0x10

----------------
IN: 
0x00000000000c9cb2:  pop    %ax
0x00000000000c9cb3:  ret    

----------------
IN: 
0x00000000000c98b7:  mov    %bx,%gs
0x00000000000c98b9:  xor    %di,%di
0x00000000000c98bb:  call   0xc9c9f

----------------
IN: 
0x00000000000c9c9f:  push   %ax
0x00000000000c9ca0:  mov    $0x20,%al
0x00000000000c9ca2:  call   0xc9c80

----------------
IN: 
0x00000000000c9ca5:  pop    %ax
0x00000000000c9ca6:  ret    

----------------
IN: 
0x00000000000c98be:  mov    %ax,0x355
0x00000000000c98c1:  call   0xc9cdc

----------------
IN: 
0x00000000000c9cdc:  push   %ax
0x00000000000c9cdd:  xchg   %al,%ah
0x00000000000c9cdf:  call   0xc9cc6

----------------
IN: 
0x00000000000c9cc6:  ror    $0x4,%al
0x00000000000c9cc9:  call   0xc9ccf

----------------
IN: 
0x00000000000c9ccf:  push   %ax
0x00000000000c9cd0:  and    $0xf,%al
0x00000000000c9cd2:  cmp    $0xa,%al
0x00000000000c9cd4:  sbb    $0x69,%al
0x00000000000c9cd6:  das    
0x00000000000c9cd7:  call   0xc9c80

----------------
IN: 
0x00000000000c9cda:  pop    %ax
0x00000000000c9cdb:  ret    

----------------
IN: 
0x00000000000c9ccc:  ror    $0x4,%al
0x00000000000c9ccf:  push   %ax
0x00000000000c9cd0:  and    $0xf,%al
0x00000000000c9cd2:  cmp    $0xa,%al
0x00000000000c9cd4:  sbb    $0x69,%al
0x00000000000c9cd6:  das    
0x00000000000c9cd7:  call   0xc9c80

----------------
IN: 
0x00000000000c9ce2:  mov    $0x3a,%al
0x00000000000c9ce4:  call   0xc9c80

----------------
IN: 
0x00000000000c9ce7:  mov    %ah,%al
0x00000000000c9ce9:  shr    $0x3,%al
0x00000000000c9cec:  call   0xc9cc6

----------------
IN: 
0x00000000000c9cef:  mov    $0x2e,%al
0x00000000000c9cf1:  call   0xc9c80

----------------
IN: 
0x00000000000c9cf4:  mov    %ah,%al
0x00000000000c9cf6:  and    $0x7,%al
0x00000000000c9cf8:  call   0xc9ccf

----------------
IN: 
0x00000000000c9cfb:  pop    %ax
0x00000000000c9cfc:  ret    

----------------
IN: 
0x00000000000c98c4:  mov    $0x7a,%di
0x00000000000c98c7:  call   0xc9cdc

----------------
IN: 
0x00000000000c9c87:  mov    %al,(%di)
0x00000000000c9c89:  inc    %di
0x00000000000c9c8a:  jmp    0xc9c9b

----------------
IN: 
0x00000000000c98ca:  movb   $0x20,0x74
0x00000000000c98cf:  xor    %di,%di
0x00000000000c98d1:  call   0xc9c9f

----------------
IN: 
0x00000000000c98d4:  mov    %cs,%ax
0x00000000000c98d6:  call   0xc9cbf

----------------
IN: 
0x00000000000c9cbf:  xchg   %al,%ah
0x00000000000c9cc1:  call   0xc9cc6

----------------
IN: 
0x00000000000c9cc4:  xchg   %al,%ah
0x00000000000c9cc6:  ror    $0x4,%al
0x00000000000c9cc9:  call   0xc9ccf

----------------
IN: 
0x00000000000c98d9:  push   %ebx
0x00000000000c98db:  push   %edx
0x00000000000c98dd:  push   %edi
0x00000000000c98df:  stc    
0x00000000000c98e0:  mov    $0xb101,%ax
0x00000000000c98e3:  int    $0x1a

----------------
IN: 
0x00000000000ffe6e:  cmp    $0xb1,%ah
0x00000000000ffe71:  je     0xff806

----------------
IN: 
0x00000000000ff806:  cli    
0x00000000000ff807:  cld    
0x00000000000ff808:  push   %eax
0x00000000000ff80a:  push   %ecx
0x00000000000ff80c:  push   %edx
0x00000000000ff80e:  push   %ebx
0x00000000000ff810:  push   %ebp
0x00000000000ff812:  push   %esi
0x00000000000ff814:  push   %edi
0x00000000000ff816:  push   %es
0x00000000000ff817:  push   %ds
0x00000000000ff818:  mov    %ss,%ax
0x00000000000ff81a:  mov    %ax,%ds
0x00000000000ff81c:  mov    %esp,%ebx
0x00000000000ff81f:  movzwl %sp,%esp
0x00000000000ff823:  mov    %esp,%eax
0x00000000000ff826:  calll  0xfcb3b

----------------
IN: 
0x00000000000fcb3b:  push   %ebp
0x00000000000fcb3d:  push   %edi
0x00000000000fcb3f:  push   %esi
0x00000000000fcb41:  push   %ebx
0x00000000000fcb43:  mov    %eax,%ebx
0x00000000000fcb46:  addr32 mov 0x1c(%eax),%al
0x00000000000fcb4a:  cmp    $0x9,%al
0x00000000000fcb4c:  je     0xfcd31

----------------
IN: 
0x00000000000fcb50:  ja     0xfcbd1

----------------
IN: 
0x00000000000fcb52:  cmp    $0x2,%al
0x00000000000fcb54:  je     0xfcc30

----------------
IN: 
0x00000000000fcb58:  ja     0xfcb89

----------------
IN: 
0x00000000000fcb5a:  dec    %al
0x00000000000fcb5c:  jne    0xfce89

----------------
IN: 
0x00000000000fcb60:  addr32 movb $0x1,0x1c(%ebx)
0x00000000000fcb65:  addr32 movw $0x210,0x10(%ebx)
0x00000000000fcb6b:  mov    %cs:0x6908,%eax
0x00000000000fcb70:  addr32 mov %al,0x18(%ebx)
0x00000000000fcb74:  addr32 movl $0x20494350,0x14(%ebx)
0x00000000000fcb7d:  addr32 movl $0xfd456,0x4(%ebx)
0x00000000000fcb86:  jmp    0xfce7b

----------------
IN: 
0x00000000000fce7b:  mov    %ebx,%eax
0x00000000000fce7e:  pop    %ebx
0x00000000000fce80:  pop    %esi
0x00000000000fce82:  pop    %edi
0x00000000000fce84:  pop    %ebp
0x00000000000fce86:  jmp    0xfff45

----------------
IN: 
0x00000000000fff45:  addr32 movb $0x0,0x1d(%eax)
0x00000000000fff4a:  addr32 andw $0xfffffffe,0x24(%eax)
0x00000000000fff4f:  retl   

----------------
IN: 
0x00000000000ff82c:  mov    %ebx,%esp
0x00000000000ff82f:  pop    %ds
0x00000000000ff830:  pop    %es
0x00000000000ff831:  pop    %edi
0x00000000000ff833:  pop    %esi
0x00000000000ff835:  pop    %ebp
0x00000000000ff837:  pop    %ebx
0x00000000000ff839:  pop    %edx
0x00000000000ff83b:  pop    %ecx
0x00000000000ff83d:  pop    %eax
0x00000000000ff83f:  iret   

----------------
IN: 
0x00000000000c98e5:  jb     0xc993d

----------------
IN: 
0x00000000000c98e7:  cmp    $0x20494350,%edx
0x00000000000c98ee:  jne    0xc993d

----------------
IN: 
0x00000000000c98f0:  test   %ah,%ah
0x00000000000c98f2:  jne    0xc993d

----------------
IN: 
0x00000000000c98f4:  mov    $0x31c,%si
0x00000000000c98f7:  xor    %di,%di
0x00000000000c98f9:  call   0xc9ca7

----------------
IN: 
0x00000000000c98fc:  mov    %bh,%al
0x00000000000c98fe:  call   0xc9ccf

----------------
IN: 
0x00000000000c9901:  mov    $0x2e,%al
0x00000000000c9903:  call   0xc9c80

----------------
IN: 
0x00000000000c9906:  mov    %bl,%al
0x00000000000c9908:  call   0xc9cc6

----------------
IN: 
0x00000000000c990b:  cmp    $0x3,%bh
0x00000000000c990e:  jb     0xc993d

----------------
IN: 
0x00000000000c993d:  push   %cs
0x00000000000c993e:  pop    %gs
0x00000000000c9940:  pop    %edi
0x00000000000c9942:  pop    %edx
0x00000000000c9944:  pop    %ebx
0x00000000000c9946:  mov    $0xefff,%bx
0x00000000000c9949:  inc    %bx
0x00000000000c994a:  je     0xc9976

----------------
IN: 
0x00000000000c994c:  mov    %bx,%es
0x00000000000c994e:  cmpl   $0x506e5024,%es:0x0
0x00000000000c9958:  jne    0xc9949

----------------
IN: 
0x00000000000c9949:  inc    %bx
0x00000000000c994a:  je     0xc9976

----------------
IN: 
0x00000000000c995a:  xor    %dx,%dx
0x00000000000c995c:  xor    %si,%si
0x00000000000c995e:  movzbw %es:0x5,%cx
0x00000000000c9964:  lods   %es:(%si),%al
0x00000000000c9966:  add    %al,%dl
0x00000000000c9968:  loop   0xc9964

----------------
IN: 
0x00000000000c9964:  lods   %es:(%si),%al
0x00000000000c9966:  add    %al,%dl
0x00000000000c9968:  loop   0xc9964

----------------
IN: 
0x00000000000c996a:  jne    0xc9949

----------------
IN: 
0x00000000000c996c:  mov    $0x321,%si
0x00000000000c996f:  xor    %di,%di
0x00000000000c9971:  call   0xc9ca7

----------------
IN: 
0x00000000000c9974:  jmp    0xc9976

----------------
IN: 
0x00000000000c9976:  mov    $0xdfff,%bx
0x00000000000c9979:  inc    %bx
0x00000000000c997a:  je     0xc9a1d

----------------
IN: 
0x00000000000c997e:  mov    %bx,%es
0x00000000000c9980:  cmpl   $0x4d4d5024,%es:0x0
0x00000000000c998a:  jne    0xc9979

----------------
IN: 
0x00000000000c9979:  inc    %bx
0x00000000000c997a:  je     0xc9a1d

----------------
IN: 
0x00000000000c998c:  xor    %dx,%dx
0x00000000000c998e:  xor    %si,%si
0x00000000000c9990:  movzbw %es:0x5,%cx
0x00000000000c9996:  lods   %es:(%si),%al
0x00000000000c9998:  add    %al,%dl
0x00000000000c999a:  loop   0xc9996

----------------
IN: 
0x00000000000c9996:  lods   %es:(%si),%al
0x00000000000c9998:  add    %al,%dl
0x00000000000c999a:  loop   0xc9996

----------------
IN: 
0x00000000000c999c:  jne    0xc9979

----------------
IN: 
0x00000000000c999e:  mov    $0x326,%si
0x00000000000c99a1:  xor    %di,%di
0x00000000000c99a3:  call   0xc9ca7

----------------
IN: 
0x00000000000c99a6:  pushal 
0x00000000000c99a8:  movzbl 0x2,%ecx
0x00000000000c99ae:  add    0x35b,%cx
0x00000000000c99b2:  add    $0x7,%cx
0x00000000000c99b5:  and    $0xfffffff8,%cx
0x00000000000c99b8:  shl    $0x5,%ecx
0x00000000000c99bc:  mov    $0x18ae1000,%ebx
0x00000000000c99c2:  mov    $0x2ea,%bp
0x00000000000c99c5:  call   0xc9a96

----------------
IN: 
0x00000000000c9a96:  push   %eax
0x00000000000c9a98:  push   %di
0x00000000000c9a99:  mov    $0x20,%di
0x00000000000c9a9c:  push   %ebx
0x00000000000c9a9e:  push   $0x1
0x00000000000c9aa0:  lcall  *%es:0x7

----------------
IN: 
0x000000003ffb9732:  mov    0x2(%ebx),%ecx
0x000000003ffb9735:  xor    %eax,%eax
0x000000003ffb9737:  xor    %edx,%edx
0x000000003ffb9739:  cmp    $0xffffffff,%ecx
0x000000003ffb973c:  je     0x3ffb9765

----------------
IN: 
0x000000003ffb973e:  mov    0x3ffbfe97(,%edx,4),%eax
0x000000003ffb9745:  mov    (%eax),%eax
0x000000003ffb9747:  test   %eax,%eax
0x000000003ffb9749:  je     0x3ffb975a

----------------
IN: 
0x000000003ffb974b:  cmp    %eax,0x8(%eax)
0x000000003ffb974e:  jne    0x3ffb9745

----------------
IN: 
0x000000003ffb9745:  mov    (%eax),%eax
0x000000003ffb9747:  test   %eax,%eax
0x000000003ffb9749:  je     0x3ffb975a

----------------
IN: 
0x000000003ffb975a:  inc    %edx
0x000000003ffb975b:  cmp    $0x5,%edx
0x000000003ffb975e:  jne    0x3ffb973e

----------------
IN: 
0x000000003ffb9750:  cmp    %ecx,0x28(%eax)
0x000000003ffb9753:  jne    0x3ffb9745

----------------
IN: 
0x000000003ffb9760:  jmp    0x3ffb9765

----------------
IN: 
0x00000000000c9aa5:  add    $0x6,%sp
0x00000000000c9aa8:  push   %dx
0x00000000000c9aa9:  push   %ax
0x00000000000c9aaa:  pop    %esi
0x00000000000c9aac:  inc    %esi
0x00000000000c9aae:  je     0xc9abc

----------------
IN: 
0x00000000000c9ab0:  dec    %esi
0x00000000000c9ab2:  je     0xc9abc

----------------
IN: 
0x00000000000c9abc:  push   $0x2
0x00000000000c9abe:  push   %ebx
0x00000000000c9ac0:  push   %ecx
0x00000000000c9ac2:  push   $0x0
0x00000000000c9ac4:  lcall  *%es:0x7

----------------
IN: 
0x000000003ffb964d:  mov    $0x3ffbfeab,%edi
0x000000003ffb9652:  mov    $0x3ffbfeaf,%eax
0x000000003ffb9657:  jmp    0x3ffb9663

----------------
IN: 
0x000000003ffb9663:  test   %esi,%esi
0x000000003ffb9665:  jne    0x3ffb96ab

----------------
IN: 
0x000000003ffb96f5:  mov    %ebx,%ecx
0x000000003ffb96f7:  mov    %esi,%edx
0x000000003ffb96f9:  mov    %edi,%eax
0x000000003ffb96fb:  call   0x3ffaeed1

----------------
IN: 
0x000000003ffb970b:  mov    %edx,%eax
0x000000003ffb970d:  mov    %edx,0x8(%esp)
0x000000003ffb9711:  call   0x3ffaeeb1

----------------
IN: 
0x000000003ffb9716:  mov    0x8(%esp),%edx
0x000000003ffb971a:  cmp    %eax,%edx
0x000000003ffb971c:  je     0x3ffb972a

----------------
IN: 
0x000000003ffb971e:  test   %eax,%eax
0x000000003ffb9720:  je     0x3ffb972a

----------------
IN: 
0x000000003ffb9722:  cmp    0xc(%eax),%edx
0x000000003ffb9725:  je     0x3ffb972a

----------------
IN: 
0x000000003ffb9727:  mov    %ebp,0x14(%eax)
0x000000003ffb972a:  mov    %edx,%eax
0x000000003ffb972c:  jmp    0x3ffb9765

----------------
IN: 
0x00000000000c9ac9:  add    $0xc,%sp
0x00000000000c9acc:  push   %dx
0x00000000000c9acd:  push   %ax
0x00000000000c9ace:  pop    %esi
0x00000000000c9ad0:  mov    $0x2b,%di
0x00000000000c9ad3:  mov    %di,%ax
0x00000000000c9ad5:  xor    %di,%di
0x00000000000c9ad7:  call   0xc9c80

----------------
IN: 
0x00000000000c9ada:  mov    %esi,%eax
0x00000000000c9add:  call   0xc9cb4

----------------
IN: 
0x00000000000c9cb4:  ror    $0x10,%eax
0x00000000000c9cb8:  call   0xc9cbf

----------------
IN: 
0x00000000000c9cbb:  ror    $0x10,%eax
0x00000000000c9cbf:  xchg   %al,%ah
0x00000000000c9cc1:  call   0xc9cc6

----------------
IN: 
0x00000000000c9ae0:  inc    %esi
0x00000000000c9ae2:  je     0xc9ae6

----------------
IN: 
0x00000000000c9ae4:  dec    %esi
0x00000000000c9ae6:  pop    %di
0x00000000000c9ae7:  pop    %eax
0x00000000000c9ae9:  ret    

----------------
IN: 
0x00000000000c99c8:  mov    %esi,0x357
0x00000000000c99cd:  je     0xc99ef

----------------
IN: 
0x00000000000c99cf:  push   %es
0x00000000000c99d0:  xor    %ax,%ax
0x00000000000c99d2:  mov    %ax,%es
0x00000000000c99d4:  mov    %esi,%edi
0x00000000000c99d7:  xor    %esi,%esi
0x00000000000c99da:  movzbl 0x2,%ecx
0x00000000000c99e0:  shl    $0x7,%ecx
0x00000000000c99e4:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000c99e4:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x00000000000c99e8:  pop    %es
0x00000000000c99e9:  mov    0x9f,%al
0x00000000000c99ec:  mov    %al,0x2
0x00000000000c99ef:  mov    $0x9ba0,%ecx
0x00000000000c99f5:  add    $0x1fff,%ecx
0x00000000000c99fc:  and    $0xffffe000,%ecx
0x00000000000c9a03:  mov    %ecx,%ebx
0x00000000000c9a06:  shr    $0xc,%bx
0x00000000000c9a09:  or     $0x18ae2000,%ebx
0x00000000000c9a10:  mov    $0x301,%bp
0x00000000000c9a13:  call   0xc9a96

----------------
IN: 
0x00000000000c9a16:  mov    %esi,0x35d
0x00000000000c9a1b:  popal  
0x00000000000c9a1d:  xor    %bx,%bx
0x00000000000c9a1f:  xor    %si,%si
0x00000000000c9a21:  movzbw 0x2,%cx
0x00000000000c9a26:  shl    $0x9,%cx
0x00000000000c9a29:  lods   %ds:(%si),%al
0x00000000000c9a2a:  add    %al,%bl
0x00000000000c9a2c:  loop   0xc9a29

----------------
IN: 
0x00000000000c9a29:  lods   %ds:(%si),%al
0x00000000000c9a2a:  add    %al,%bl
0x00000000000c9a2c:  loop   0xc9a29

----------------
IN: 
0x00000000000c9a2e:  sub    %bl,0x6
0x00000000000c9a32:  xor    %di,%di
0x00000000000c9a34:  call   0xc9c9f

----------------
IN: 
0x00000000000c9a37:  mov    %gs,%ax
0x00000000000c9a39:  call   0xc9cbf

----------------
IN: 
0x00000000000c9a3c:  movzbw 0x2,%cx
0x00000000000c9a41:  shl    $0x9,%cx
0x00000000000c9a44:  mov    %ax,%es
0x00000000000c9a46:  xor    %si,%si
0x00000000000c9a48:  xor    %di,%di
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4a:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x00000000000c9a4d:  testb  $0x7,0x355
0x00000000000c9a52:  jne    0xc9a84

----------------
IN: 
0x00000000000c9a54:  mov    $0x332,%si
0x00000000000c9a57:  xor    %di,%di
0x00000000000c9a59:  call   0xc9ca7

----------------
IN: 
0x00000000000c9ca7:  push   %ax
0x00000000000c9ca8:  lods   %ds:(%si),%al
0x00000000000c9ca9:  test   %al,%al
0x00000000000c9cab:  je     0xc9cb2

----------------
IN: 
0x00000000000c9cad:  call   0xc9c80

----------------
IN: 
0x00000000000c9c80:  push   %ax
0x00000000000c9c81:  push   %bx
0x00000000000c9c82:  push   %bp
0x00000000000c9c83:  test   %di,%di
0x00000000000c9c85:  je     0xc9c8c

----------------
IN: 
0x00000000000c9c8c:  mov    $0x7,%bx
0x00000000000c9c8f:  mov    $0xe,%ah
0x00000000000c9c91:  cmp    $0xa,%al
0x00000000000c9c93:  jne    0xc9c99

----------------
IN: 
0x00000000000c9c95:  int    $0x10

----------------
IN: 
0x00000000000c9c97:  mov    $0xd,%al
0x00000000000c9c99:  int    $0x10

----------------
IN: 
0x00000000000c9c9b:  pop    %bp
0x00000000000c9c9c:  pop    %bx
0x00000000000c9c9d:  pop    %ax
0x00000000000c9c9e:  ret    

----------------
IN: 
0x00000000000c9cb0:  jmp    0xc9ca8

----------------
IN: 
0x00000000000c9ca8:  lods   %ds:(%si),%al
0x00000000000c9ca9:  test   %al,%al
0x00000000000c9cab:  je     0xc9cb2

----------------
IN: 
0x00000000000c9c99:  int    $0x10

----------------
IN: 
0x00000000000c9cb2:  pop    %ax
0x00000000000c9cb3:  ret    

----------------
IN: 
0x00000000000c9a5c:  mov    $0x70,%si
0x00000000000c9a5f:  call   0xc9ca7

----------------
IN: 
0x00000000000c9a62:  mov    $0x34e,%si
0x00000000000c9a65:  call   0xc9ca7

----------------
IN: 
0x00000000000c9a68:  mov    $0xff02,%bx
0x00000000000c9a6b:  call   0xc9c35

----------------
IN: 
0x00000000000c9c35:  push   %cx
0x00000000000c9c36:  push   %ax
0x00000000000c9c37:  mov    $0x1,%ah
0x00000000000c9c39:  int    $0x16

----------------
IN: 
0x00000000000fe82e:  pushl  $0xc217
0x00000000000fe834:  jmp    0xfd5a6

----------------
IN: 
0x00000000000fd5a6:  cli    
0x00000000000fd5a7:  cld    
0x00000000000fd5a8:  push   %ds
0x00000000000fd5a9:  push   %eax
0x00000000000fd5ab:  mov    $0xe000,%eax
0x00000000000fd5b1:  mov    %ax,%ds
0x00000000000fd5b3:  mov    0xf7f0,%eax
0x00000000000fd5b7:  sub    $0x2e,%eax
0x00000000000fd5bb:  addr32 popl 0x1c(%eax)
0x00000000000fd5c0:  addr32 popw (%eax)
0x00000000000fd5c3:  addr32 mov %edi,0x4(%eax)
0x00000000000fd5c8:  addr32 mov %esi,0x8(%eax)
0x00000000000fd5cd:  addr32 mov %ebp,0xc(%eax)
0x00000000000fd5d2:  addr32 mov %ebx,0x10(%eax)
0x00000000000fd5d7:  addr32 mov %edx,0x14(%eax)
0x00000000000fd5dc:  addr32 mov %ecx,0x18(%eax)
0x00000000000fd5e1:  pop    %ecx
0x00000000000fd5e3:  addr32 mov %es,0x2(%eax)
0x00000000000fd5e7:  addr32 mov %esp,0x26(%eax)
0x00000000000fd5ec:  addr32 mov %ss,0x2a(%eax)
0x00000000000fd5f0:  addr32 popl 0x20(%eax)
0x00000000000fd5f5:  addr32 popw 0x24(%eax)
0x00000000000fd5f9:  mov    %ds,%dx
0x00000000000fd5fb:  mov    %dx,%ss

----------------
IN: 
0x00000000000fd5fd:  mov    %eax,%esp

----------------
IN: 
0x00000000000fd600:  calll  *%ecx

----------------
IN: 
0x00000000000fc217:  push   %ebx
0x00000000000fc219:  mov    %eax,%ebx
0x00000000000fc21c:  calll  0xf7a53

----------------
IN: 
0x00000000000f7a53:  push   %esi
0x00000000000f7a55:  push   %ebx
0x00000000000f7a57:  push   %edx
0x00000000000f7a59:  mov    $0x40,%ebx
0x00000000000f7a5f:  mov    %bx,%es
0x00000000000f7a61:  mov    %es:0x17,%al
0x00000000000f7a65:  shr    $0x4,%al
0x00000000000f7a68:  and    $0x7,%eax
0x00000000000f7a6c:  addr32 mov %al,0x3(%esp)
0x00000000000f7a71:  mov    %bx,%es
0x00000000000f7a73:  mov    %es:0x97,%cl
0x00000000000f7a78:  mov    %ecx,%esi
0x00000000000f7a7b:  mov    %cl,%dl
0x00000000000f7a7d:  and    $0x7,%edx
0x00000000000f7a81:  cmp    %dl,%al
0x00000000000f7a83:  je     0xf7aae

----------------
IN: 
0x00000000000f7aae:  pop    %eax
0x00000000000f7ab0:  pop    %ebx
0x00000000000f7ab2:  pop    %esi
0x00000000000f7ab4:  retl   

----------------
IN: 
0x00000000000fc222:  addr32 mov 0x1d(%ebx),%al
0x00000000000fc226:  cmp    $0xa,%al
0x00000000000fc228:  je     0xfc2bb

----------------
IN: 
0x00000000000fc22c:  ja     0xfc256

----------------
IN: 
0x00000000000fc22e:  cmp    $0x2,%al
0x00000000000fc230:  je     0xfc288

----------------
IN: 
0x00000000000fc232:  ja     0xfc244

----------------
IN: 
0x00000000000fc234:  test   %al,%al
0x00000000000fc236:  je     0xfc283

----------------
IN: 
0x00000000000fc238:  dec    %al
0x00000000000fc23a:  jne    0xfc31d

----------------
IN: 
0x00000000000fc23e:  xor    %ecx,%ecx
0x00000000000fc241:  jmp    0xfc2d1

----------------
IN: 
0x00000000000fc2d1:  xor    %edx,%edx
0x00000000000fc2d4:  mov    %ebx,%eax
0x00000000000fc2d7:  pop    %ebx
0x00000000000fc2d9:  jmp    0xf7836

----------------
IN: 
0x00000000000f7836:  push   %ebp
0x00000000000f7838:  push   %edi
0x00000000000f783a:  push   %esi
0x00000000000f783c:  push   %ebx
0x00000000000f783e:  push   %ebx
0x00000000000f7840:  mov    %eax,%ebx
0x00000000000f7843:  mov    %edx,%edi
0x00000000000f7846:  addr32 mov %ecx,(%esp)
0x00000000000f784b:  calll  0xf77f4

----------------
IN: 
0x00000000000f77ff:  mov    $0x77f4,%ecx
0x00000000000f7805:  xor    %edx,%edx
0x00000000000f7808:  xor    %eax,%eax
0x00000000000f780b:  jmp    0xf76e9

----------------
IN: 
0x00000000000f7851:  mov    $0x40,%esi
0x00000000000f7857:  mov    $0x40,%ebp
0x00000000000f785d:  mov    %si,%es
0x00000000000f785f:  mov    %es:0x1a,%ax
0x00000000000f7863:  mov    %si,%es
0x00000000000f7865:  mov    %es:0x1c,%dx
0x00000000000f786a:  cmp    %dx,%ax
0x00000000000f786c:  jne    0xf7883

----------------
IN: 
0x00000000000f786e:  test   %edi,%edi
0x00000000000f7871:  jne    0xf787b

----------------
IN: 
0x00000000000f7873:  addr32 orw $0x40,0x24(%ebx)
0x00000000000f7878:  jmp    0xf7909

----------------
IN: 
0x00000000000f7909:  pop    %eax
0x00000000000f790b:  pop    %ebx
0x00000000000f790d:  pop    %esi
0x00000000000f790f:  pop    %edi
0x00000000000f7911:  pop    %ebp
0x00000000000f7913:  retl   

----------------
IN: 
0x00000000000fd603:  mov    %esp,%eax
0x00000000000fd606:  addr32 mov 0x2a(%eax),%ss

----------------
IN: 
0x00000000000fd60a:  addr32 mov 0x26(%eax),%esp

----------------
IN: 
0x00000000000fd60f:  pop    %edx
0x00000000000fd611:  pop    %dx
0x00000000000fd612:  addr32 pushw 0x24(%eax)
0x00000000000fd616:  addr32 pushl 0x20(%eax)
0x00000000000fd61b:  addr32 mov 0x4(%eax),%edi
0x00000000000fd620:  addr32 mov 0x8(%eax),%esi
0x00000000000fd625:  addr32 mov 0xc(%eax),%ebp
0x00000000000fd62a:  addr32 mov 0x10(%eax),%ebx
0x00000000000fd62f:  addr32 mov 0x14(%eax),%edx
0x00000000000fd634:  addr32 mov 0x18(%eax),%ecx
0x00000000000fd639:  addr32 mov 0x2(%eax),%es
0x00000000000fd63d:  addr32 pushw (%eax)
0x00000000000fd640:  addr32 pushl 0x1c(%eax)
0x00000000000fd645:  pop    %eax
0x00000000000fd647:  pop    %ds
0x00000000000fd648:  iret   

----------------
IN: 
0x00000000000c9c3b:  je     0xc9c43

----------------
IN: 
0x00000000000c9c43:  mov    $0x0,%cx
0x00000000000c9c46:  dec    %cx
0x00000000000c9c47:  js     0xc9c5e

----------------
IN: 
0x00000000000c9c5e:  pop    %ax
0x00000000000c9c5f:  pop    %cx
0x00000000000c9c60:  ret    

----------------
IN: 
0x00000000000c9a6e:  pushf  
0x00000000000c9a6f:  xor    %di,%di
0x00000000000c9a71:  call   0xc9cfd

----------------
IN: 
0x00000000000c9cfd:  push   %ax
0x00000000000c9cfe:  push   %cx
0x00000000000c9cff:  mov    $0xd,%al
0x00000000000c9d01:  call   0xc9c80

----------------
IN: 
0x00000000000c9d04:  mov    $0x4f,%cx
0x00000000000c9d07:  call   0xc9c9f

----------------
IN: 
0x00000000000c9c9f:  push   %ax
0x00000000000c9ca0:  mov    $0x20,%al
0x00000000000c9ca2:  call   0xc9c80

----------------
IN: 
0x00000000000c9ca5:  pop    %ax
0x00000000000c9ca6:  ret    

----------------
IN: 
0x00000000000c9d0a:  loop   0xc9d07

----------------
IN: 
0x00000000000c9d07:  call   0xc9c9f

----------------
IN: 
0x00000000000c9d0c:  call   0xc9c80

----------------
IN: 
0x00000000000c9d0f:  pop    %cx
0x00000000000c9d10:  pop    %ax
0x00000000000c9d11:  ret    

----------------
IN: 
0x00000000000c9a74:  mov    $0x352,%si
0x00000000000c9a77:  call   0xc9ca7

----------------
IN: 
0x00000000000c9a7a:  popf   

----------------
IN: 
0x00000000000c9a7b:  jne    0xc9a84

----------------
IN: 
0x00000000000c9a84:  mov    $0xa,%al
0x00000000000c9a86:  xor    %di,%di
0x00000000000c9a88:  call   0xc9c80

----------------
IN: 
0x00000000000c9a8b:  pop    %gs
0x00000000000c9a8d:  pop    %fs
0x00000000000c9a8f:  pop    %es
0x00000000000c9a90:  pop    %ds
0x00000000000c9a91:  popa   
0x00000000000c9a92:  mov    $0x20,%ax
0x00000000000c9a95:  lret   

----------------
IN: 
0x000000003ffb50e0:  lea    0x18(%esp),%ecx
0x000000003ffb50e4:  xor    %edx,%edx
0x000000003ffb50e6:  mov    $0xf4eec,%eax
0x000000003ffb50eb:  call   0x3ffb1cbf

----------------
IN: 
0x000000003ffaf0dc:  mov    %ebx,%eax
0x000000003ffaf0de:  pop    %ebx
0x000000003ffaf0df:  pop    %esi
0x000000003ffaf0e0:  pop    %edi
0x000000003ffaf0e1:  pop    %ebp
0x000000003ffaf0e2:  ret    

----------------
IN: 
0x000000003ffb1ce1:  call   0x3ffb078a

----------------
IN: 
0x000000003ffb078a:  push   %edi
0x000000003ffb078b:  push   %esi
0x000000003ffb078c:  push   %ebx
0x000000003ffb078d:  mov    %eax,%esi
0x000000003ffb078f:  mov    0x84(%eax),%edi
0x000000003ffb0795:  mov    %edi,%eax
0x000000003ffb0797:  call   0x3ffaf015

----------------
IN: 
0x000000003ffb079c:  mov    %eax,%ebx
0x000000003ffb079e:  test   %eax,%eax
0x000000003ffb07a0:  jne    0x3ffb07b5

----------------
IN: 
0x000000003ffb07b5:  mov    %edi,%ecx
0x000000003ffb07b7:  mov    %eax,%edx
0x000000003ffb07b9:  mov    %esi,%eax
0x000000003ffb07bb:  call   *0x88(%esi)

----------------
IN: 
0x000000003ffb07c1:  test   %eax,%eax
0x000000003ffb07c3:  setg   %al
0x000000003ffb07c6:  movzbl %al,%eax
0x000000003ffb07c9:  neg    %eax
0x000000003ffb07cb:  and    %ebx,%eax
0x000000003ffb07cd:  pop    %ebx
0x000000003ffb07ce:  pop    %esi
0x000000003ffb07cf:  pop    %edi
0x000000003ffb07d0:  ret    

----------------
IN: 
0x000000003ffb1ce6:  test   %eax,%eax
0x000000003ffb1ce8:  je     0x3ffb1cd1

----------------
IN: 
0x000000003ffb1cea:  xor    %ebp,%ebp
0x000000003ffb1cec:  test   %esi,%esi
0x000000003ffb1cee:  je     0x3ffb1d00

----------------
IN: 
0x000000003ffb1cf0:  lea    -0xc0000(%eax),%edx
0x000000003ffb1cf6:  shr    $0xb,%edx
0x000000003ffb1cf9:  mov    %ebx,(%esi,%edx,8)
0x000000003ffb1cfc:  mov    %ebp,0x4(%esi,%edx,8)
0x000000003ffb1d00:  mov    0x4(%esp),%ecx
0x000000003ffb1d04:  xor    %edx,%edx
0x000000003ffb1d06:  call   0x3ffb1c0a

----------------
IN: 
0x000000003ffb1d0b:  jmp    0x3ffb1cd1

----------------
IN: 
0x000000003ffb1cd1:  mov    %ebx,%edx
0x000000003ffb1cd3:  mov    (%esp),%eax
0x000000003ffb1cd6:  call   0x3ffaf0a5

----------------
IN: 
0x000000003ffaf0be:  mov    (%edi),%ebx
0x000000003ffaf0c0:  jmp    0x3ffaf0d4

----------------
IN: 
0x000000003ffb50f0:  xor    %eax,%eax
0x000000003ffb50f2:  call   0x3ffaf015

----------------
IN: 
0x000000003ffb50f7:  cmp    0x3ffbfe93,%ebx
0x000000003ffb50fd:  jae    0x3ffb5284

----------------
IN: 
0x000000003ffb5103:  cmpw   $0xaa55,(%ebx)
0x000000003ffb5108:  je     0x3ffb5119

----------------
IN: 
0x000000003ffb5119:  mov    %ebx,%eax
0x000000003ffb511b:  call   0xf2793

----------------
IN: 
0x000000003ffb5120:  test   %eax,%eax
0x000000003ffb5122:  je     0x3ffb510a

----------------
IN: 
0x000000003ffb5124:  movzbl 0x2(%ebx),%eax
0x000000003ffb5128:  shl    $0x9,%eax
0x000000003ffb512b:  add    $0x7ff,%eax
0x000000003ffb5130:  and    $0xfffff800,%eax
0x000000003ffb5135:  add    %ebx,%eax
0x000000003ffb5137:  mov    %eax,0x14(%esp)
0x000000003ffb513b:  movzwl 0x1a(%ebx),%esi
0x000000003ffb513f:  add    %ebx,%esi
0x000000003ffb5141:  cmpl   $0x506e5024,(%esi)
0x000000003ffb5147:  jne    0x3ffb514d

----------------
IN: 
0x000000003ffb5149:  test   %esi,%esi
0x000000003ffb514b:  jne    0x3ffb5189

----------------
IN: 
0x000000003ffb5189:  mov    %ebx,%eax
0x000000003ffb518b:  shr    $0x4,%eax
0x000000003ffb518e:  movzwl %ax,%eax
0x000000003ffb5191:  mov    %eax,%edi
0x000000003ffb5193:  shl    $0x4,%edi
0x000000003ffb5196:  mov    %edi,0xc(%esp)
0x000000003ffb519a:  movl   $0x1,0x10(%esp)
0x000000003ffb51a2:  shl    $0x10,%eax
0x000000003ffb51a5:  mov    %eax,0x8(%esp)
0x000000003ffb51a9:  mov    0x10(%esp),%eax
0x000000003ffb51ad:  lea    -0x1(%eax),%ecx
0x000000003ffb51b0:  cmpw   $0x0,0x1a(%esi)
0x000000003ffb51b5:  je     0x3ffb520c

----------------
IN: 
0x000000003ffb51b7:  mov    %ebx,%edx
0x000000003ffb51b9:  lea    0x18(%esp),%eax
0x000000003ffb51bd:  call   0x3ffb4fea

----------------
IN: 
0x000000003ffb4fea:  push   %esi
0x000000003ffb4feb:  push   %ebx
0x000000003ffb4fec:  sub    $0x110,%esp
0x000000003ffb4ff2:  mov    %ecx,%esi
0x000000003ffb4ff4:  sub    $0xc0000,%edx
0x000000003ffb4ffa:  shr    $0xb,%edx
0x000000003ffb4ffd:  mov    (%eax,%edx,8),%ecx
0x000000003ffb5000:  mov    0x4(%eax,%edx,8),%eax
0x000000003ffb5004:  mov    %eax,%ebx
0x000000003ffb5006:  or     %ecx,%ebx
0x000000003ffb5008:  je     0x3ffb5073

----------------
IN: 
0x000000003ffb500a:  test   $0x2,%al
0x000000003ffb500c:  lea    0x10(%esp),%ebx
0x000000003ffb5010:  je     0x3ffb5024

----------------
IN: 
0x000000003ffb5012:  mov    $0xf4eab,%edx
0x000000003ffb5017:  mov    %ebx,%eax
0x000000003ffb5019:  call   0x3ffb4e81

----------------
IN: 
0x000000003ffb501e:  test   %esi,%esi
0x000000003ffb5020:  je     0x3ffb506a

----------------
IN: 
0x000000003ffb506a:  mov    %ebx,%eax
0x000000003ffb506c:  call   0x3ffb1d15

----------------
IN: 
0x000000003ffb5071:  jmp    0x3ffb5076

----------------
IN: 
0x000000003ffb5076:  add    $0x110,%esp
0x000000003ffb507c:  pop    %ebx
0x000000003ffb507d:  pop    %esi
0x000000003ffb507e:  ret    

----------------
IN: 
0x000000003ffb51c2:  mov    0x10(%esi),%dx
0x000000003ffb51c6:  movzwl 0x1a(%esi),%ecx
0x000000003ffb51ca:  mov    $0xf4ebc,%edi
0x000000003ffb51cf:  test   %dx,%dx
0x000000003ffb51d2:  je     0x3ffb51db

----------------
IN: 
0x000000003ffb51d4:  movzwl %dx,%edi
0x000000003ffb51d7:  add    0xc(%esp),%edi
0x000000003ffb51db:  or     0x8(%esp),%ecx
0x000000003ffb51df:  mov    0x3ffbfe7b,%edx
0x000000003ffb51e5:  mov    %edx,0x4(%esp)
0x000000003ffb51e9:  mov    %eax,%edx
0x000000003ffb51eb:  test   %eax,%eax
0x000000003ffb51ed:  jns    0x3ffb51f3

----------------
IN: 
0x000000003ffb51ef:  mov    0x4(%esp),%edx
0x000000003ffb51f3:  mov    %edi,(%esp)
0x000000003ffb51f6:  mov    $0x80,%eax
0x000000003ffb51fb:  call   0x3ffb07d1

----------------
IN: 
0x000000003ffb5200:  movl   $0x270f,0x3ffbfe7b
0x000000003ffb520a:  jmp    0x3ffb525c

----------------
IN: 
0x000000003ffb525c:  movzwl 0x6(%esi),%esi
0x000000003ffb5260:  test   %si,%si
0x000000003ffb5263:  je     0x3ffb527b

----------------
IN: 
0x000000003ffb527b:  mov    0x14(%esp),%ebx
0x000000003ffb527f:  jmp    0x3ffb50f7

----------------
IN: 
0x000000003ffb514d:  xor    %ecx,%ecx
0x000000003ffb514f:  mov    %ebx,%edx
0x000000003ffb5151:  lea    0x18(%esp),%eax
0x000000003ffb5155:  call   0x3ffb4fea

----------------
IN: 
0x000000003ffb5024:  add    $0x4,%ecx
0x000000003ffb5027:  mov    %ecx,0xc(%esp)
0x000000003ffb502b:  movl   $0xf4eb4,0x8(%esp)
0x000000003ffb5033:  movl   $0x100,0x4(%esp)
0x000000003ffb503b:  mov    %ebx,(%esp)
0x000000003ffb503e:  call   0x3ffb46a8

----------------
IN: 
0x000000003ffb5043:  test   %esi,%esi
0x000000003ffb5045:  je     0x3ffb506a

----------------
IN: 
0x000000003ffb515a:  shr    $0x4,%ebx
0x000000003ffb515d:  mov    %ebx,%ecx
0x000000003ffb515f:  shl    $0x10,%ecx
0x000000003ffb5162:  or     $0x3,%ecx
0x000000003ffb5165:  mov    0x3ffbfe7f,%ebx
0x000000003ffb516b:  mov    %eax,%edx
0x000000003ffb516d:  test   %eax,%eax
0x000000003ffb516f:  jns    0x3ffb5173

----------------
IN: 
0x000000003ffb5171:  mov    %ebx,%edx
0x000000003ffb5173:  movl   $0xf4ec4,(%esp)
0x000000003ffb517a:  mov    $0x81,%eax
0x000000003ffb517f:  call   0x3ffb07d1

----------------
IN: 
0x000000003ffb083d:  cmp    -0x10(%ebx),%esi
0x000000003ffb0840:  jl     0x3ffb0826

----------------
IN: 
0x000000003ffb0842:  jg     0x3ffb085d

----------------
IN: 
0x000000003ffb5184:  jmp    0x3ffb527b

----------------
IN: 
0x000000003ffb5284:  lea    -0xc(%ebp),%esp
0x000000003ffb5287:  pop    %ebx
0x000000003ffb5288:  pop    %esi
0x000000003ffb5289:  pop    %edi
0x000000003ffb528a:  pop    %ebp
0x000000003ffb528b:  ret    

----------------
IN: 
0x000000003ffbb8c7:  mov    $0x1,%edx
0x000000003ffbb8cc:  xor    %ecx,%ecx
0x000000003ffbb8ce:  mov    $0xf5d16,%eax
0x000000003ffbb8d3:  call   0x3ffb01ef

----------------
IN: 
0x000000003ffbb8d8:  or     %eax,%edx
0x000000003ffbb8da:  je     0x3ffbd126

----------------
IN: 
0x000000003ffbd126:  call   0x3ffb0301

----------------
IN: 
0x000000003ffbd12b:  mov    $0xf6014,%eax
0x000000003ffbd130:  call   0x3ffb1d15

----------------
IN: 
0x000000003ffbd135:  test   %eax,%eax
0x000000003ffbd137:  js     0x3ffbd14e

----------------
IN: 
0x000000003ffbd14e:  mov    0x3ffbfe77,%eax
0x000000003ffbd153:  lea    -0x10(%eax),%ebp
0x000000003ffbd156:  cmp    $0xfffffff0,%ebp
0x000000003ffbd159:  je     0x3ffbd53f

----------------
IN: 
0x000000003ffbd15f:  mov    0x0(%ebp),%eax
0x000000003ffbd162:  cmp    $0x2,%eax
0x000000003ffbd165:  je     0x3ffbd1f2

----------------
IN: 
0x000000003ffbd1f2:  mov    0x4(%ebp),%ebx
0x000000003ffbd1f5:  movzbl 0x475,%eax
0x000000003ffbd1fc:  mov    %eax,0x3c(%esp)
0x000000003ffbd200:  mov    %ebx,%ecx
0x000000003ffbd202:  mov    $0x475,%edx
0x000000003ffbd207:  mov    $0xf6b4c,%eax
0x000000003ffbd20c:  call   0x3ffb05ee

----------------
IN: 
0x000000003ffb05ee:  push   %ebx
0x000000003ffb05ef:  movzbl (%edx),%ebx
0x000000003ffb05f2:  cmp    $0xf,%bl
0x000000003ffb05f5:  jbe    0x3ffb0607

----------------
IN: 
0x000000003ffb0607:  mov    %ecx,(%eax,%ebx,4)
0x000000003ffb060a:  incb   (%edx)
0x000000003ffb060c:  pop    %ebx
0x000000003ffb060d:  ret    

----------------
IN: 
0x000000003ffbd211:  cmpb   $0x20,(%ebx)
0x000000003ffbd214:  jne    0x3ffbd23a

----------------
IN: 
0x000000003ffbd216:  mov    0x14(%ebx),%ecx
0x000000003ffbd219:  mov    %cl,%al
0x000000003ffbd21b:  shr    $0x2,%al
0x000000003ffbd21e:  add    $0x39,%eax
0x000000003ffbd221:  or     $0xffffff80,%eax
0x000000003ffbd224:  out    %al,$0x70
0x000000003ffbd226:  in     $0x71,%al
0x000000003ffbd228:  movzbl %al,%eax
0x000000003ffbd22b:  and    $0x3,%ecx
0x000000003ffbd22e:  add    %ecx,%ecx
0x000000003ffbd230:  sar    %cl,%eax
0x000000003ffbd232:  and    $0x3,%eax
0x000000003ffbd235:  jmp    0x3ffbd2cc

----------------
IN: 
0x000000003ffbd2cc:  mov    %al,0x19(%ebx)
0x000000003ffbd2cf:  mov    0x1c(%ebx),%edi
0x000000003ffbd2d2:  mov    %di,0x30(%esp)
0x000000003ffbd2d7:  movzwl 0x1e(%ebx),%ecx
0x000000003ffbd2db:  mov    0x20(%ebx),%edi
0x000000003ffbd2de:  mov    %di,0x34(%esp)
0x000000003ffbd2e3:  mov    0xc(%ebx),%edi
0x000000003ffbd2e6:  mov    %edi,0x40(%esp)
0x000000003ffbd2ea:  mov    0x10(%ebx),%edx
0x000000003ffbd2ed:  cmp    $0x2,%al
0x000000003ffbd2ef:  je     0x3ffbd39d

----------------
IN: 
0x000000003ffbd2f5:  cmp    $0x3,%al
0x000000003ffbd2f7:  je     0x3ffbd36f

----------------
IN: 
0x000000003ffbd2f9:  dec    %al
0x000000003ffbd2fb:  jne    0x3ffbd3d0

----------------
IN: 
0x000000003ffbd301:  cmp    $0x0,%edx
0x000000003ffbd304:  ja     0x3ffbd7d6

----------------
IN: 
0x000000003ffbd30a:  cmp    $0xfb0400,%edi
0x000000003ffbd310:  ja     0x3ffbd7d6

----------------
IN: 
0x000000003ffbd316:  mov    $0x3f,%esi
0x000000003ffbd31b:  mov    %edi,%eax
0x000000003ffbd31d:  xor    %edx,%edx
0x000000003ffbd31f:  div    %esi
0x000000003ffbd321:  mov    %eax,%edx
0x000000003ffbd323:  shr    $0xa,%edx
0x000000003ffbd326:  mov    $0xff,%esi
0x000000003ffbd32b:  cmp    $0x80,%dx
0x000000003ffbd330:  ja     0x3ffbd358

----------------
IN: 
0x000000003ffbd332:  mov    $0x80,%esi
0x000000003ffbd337:  cmp    $0x40,%dx
0x000000003ffbd33b:  ja     0x3ffbd358

----------------
IN: 
0x000000003ffbd33d:  mov    $0x40,%esi
0x000000003ffbd342:  cmp    $0x20,%dx
0x000000003ffbd346:  ja     0x3ffbd358

----------------
IN: 
0x000000003ffbd348:  mov    $0x10,%esi
0x000000003ffbd34d:  cmp    $0x10,%dx
0x000000003ffbd351:  jbe    0x3ffbd358

----------------
IN: 
0x000000003ffbd353:  mov    $0x20,%esi
0x000000003ffbd358:  movzwl %si,%edi
0x000000003ffbd35b:  xor    %edx,%edx
0x000000003ffbd35d:  div    %edi
0x000000003ffbd35f:  mov    %eax,%edi
0x000000003ffbd361:  mov    $0xf5cd3,%eax
0x000000003ffbd366:  movw   $0x3f,0x28(%esp)
0x000000003ffbd36d:  jmp    0x3ffbd3e4

----------------
IN: 
0x000000003ffbd3e4:  cmp    $0x400,%di
0x000000003ffbd3e9:  jbe    0x3ffbd3f0

----------------
IN: 
0x000000003ffbd3f0:  mov    0x40(%esp),%edx
0x000000003ffbd3f4:  mov    %edx,0x24(%esp)
0x000000003ffbd3f8:  movzwl 0x28(%esp),%edx
0x000000003ffbd3fd:  mov    %edx,0x20(%esp)
0x000000003ffbd401:  movzwl %si,%edx
0x000000003ffbd404:  mov    %edx,0x1c(%esp)
0x000000003ffbd408:  movzwl %di,%edx
0x000000003ffbd40b:  mov    %edx,0x18(%esp)
0x000000003ffbd40f:  mov    %eax,0x14(%esp)
0x000000003ffbd413:  movzwl 0x34(%esp),%eax
0x000000003ffbd418:  mov    %eax,0x10(%esp)
0x000000003ffbd41c:  movzwl 0x30(%esp),%eax
0x000000003ffbd421:  mov    %eax,0xc(%esp)
0x000000003ffbd425:  mov    %ecx,0x8(%esp)
0x000000003ffbd429:  mov    %ebx,0x4(%esp)
0x000000003ffbd42d:  movl   $0xf6019,(%esp)
0x000000003ffbd434:  call   0xf1cc0

----------------
IN: 
0x000000003ffbd439:  mov    %si,0x2(%ebx)
0x000000003ffbd43d:  mov    %di,0x4(%ebx)
0x000000003ffbd441:  mov    0x28(%esp),%eax
0x000000003ffbd445:  mov    %ax,0x6(%ebx)
0x000000003ffbd449:  cmpl   $0x1,0x3c(%esp)
0x000000003ffbd44e:  jg     0x3ffbd511

----------------
IN: 
0x000000003ffbd454:  mov    0x1e(%ebx),%dx
0x000000003ffbd458:  mov    0x1c(%ebx),%eax
0x000000003ffbd45b:  mov    %ax,0x30(%esp)
0x000000003ffbd460:  mov    0x20(%ebx),%ebx
0x000000003ffbd463:  mov    %bx,0x34(%esp)
0x000000003ffbd468:  movzwl 0x40e,%eax
0x000000003ffbd46f:  mov    0x3c(%esp),%ebx
0x000000003ffbd473:  lea    0x3(%ebx,%eax,1),%ecx
0x000000003ffbd477:  shl    $0x4,%ecx
0x000000003ffbd47a:  lea    0xd(%ecx),%ebx
0x000000003ffbd47d:  movw   $0xffff,0x5(%ebx)
0x000000003ffbd483:  cmpw   $0x9,0x30(%esp)
0x000000003ffbd489:  sbb    %eax,%eax
0x000000003ffbd48b:  and    $0xfffffff8,%eax
0x000000003ffbd48e:  sub    $0x38,%eax
0x000000003ffbd491:  mov    %al,0x8(%ebx)
0x000000003ffbd494:  mov    %dx,0xc(%ebx)
0x000000003ffbd498:  mov    %di,0xd(%ecx)
0x000000003ffbd49c:  mov    %esi,%eax
0x000000003ffbd49e:  mov    %al,0x2(%ebx)
0x000000003ffbd4a1:  mov    0x28(%esp),%al
0x000000003ffbd4a5:  mov    %al,0xe(%ebx)
0x000000003ffbd4a8:  cmp    %dx,%di
0x000000003ffbd4ab:  jne    0x3ffbd4bf

----------------
IN: 
0x000000003ffbd4bf:  mov    %dx,0x9(%ebx)
0x000000003ffbd4c3:  mov    0x30(%esp),%al
0x000000003ffbd4c7:  mov    %al,0xb(%ebx)
0x000000003ffbd4ca:  mov    0x34(%esp),%al
0x000000003ffbd4ce:  mov    %al,0x4(%ebx)
0x000000003ffbd4d1:  movb   $0xa0,0x3(%ebx)
0x000000003ffbd4d5:  mov    $0x10,%edx
0x000000003ffbd4da:  mov    %ebx,%eax
0x000000003ffbd4dc:  call   0xf152e

----------------
IN: 
0x000000003ffbd4e1:  sub    %al,0xf(%ebx)
0x000000003ffbd4e4:  cmpl   $0x0,0x3c(%esp)
0x000000003ffbd4e9:  mov    0x40e,%ax
0x000000003ffbd4ef:  jne    0x3ffbd502

----------------
IN: 
0x000000003ffbd4f1:  movw   $0x3d,0x104
0x000000003ffbd4fa:  mov    %ax,0x106
0x000000003ffbd500:  jmp    0x3ffbd511

----------------
IN: 
0x000000003ffbd511:  xor    %edx,%edx
0x000000003ffbd513:  mov    $0x2,%eax
0x000000003ffbd518:  jmp    0x3ffbd532

----------------
IN: 
0x000000003ffbd532:  call   0x3ffaf0e3

----------------
IN: 
0x000000003ffaf0e3:  push   %ebx
0x000000003ffaf0e4:  cmp    $0x2,%eax
0x000000003ffaf0e7:  jne    0x3ffaf120

----------------
IN: 
0x000000003ffaf0e9:  mov    0x3ffbff27,%ecx
0x000000003ffaf0ef:  lea    0x1(%ecx),%ebx
0x000000003ffaf0f2:  mov    %ebx,0x3ffbff27
0x000000003ffaf0f8:  test   %ecx,%ecx
0x000000003ffaf0fa:  jne    0x3ffaf136

----------------
IN: 
0x000000003ffaf0fc:  mov    0xf6518,%ecx
0x000000003ffaf102:  cmp    $0x13,%ecx
0x000000003ffaf105:  ja     0x3ffaf136

----------------
IN: 
0x000000003ffaf107:  lea    0x1(%ecx),%ebx
0x000000003ffaf10a:  mov    %ebx,0xf6518
0x000000003ffaf110:  mov    %eax,0xf651c(,%ecx,8)
0x000000003ffaf117:  mov    %edx,0xf6520(,%ecx,8)
0x000000003ffaf11e:  jmp    0x3ffaf136

----------------
IN: 
0x000000003ffaf136:  pop    %ebx
0x000000003ffaf137:  ret    

----------------
IN: 
0x000000003ffbd537:  mov    0x10(%ebp),%eax
0x000000003ffbd53a:  jmp    0x3ffbd153

----------------
IN: 
0x000000003ffbd153:  lea    -0x10(%eax),%ebp
0x000000003ffbd156:  cmp    $0xfffffff0,%ebp
0x000000003ffbd159:  je     0x3ffbd53f

----------------
IN: 
0x000000003ffbd16b:  jg     0x3ffbd175

----------------
IN: 
0x000000003ffbd175:  cmp    $0x3,%eax
0x000000003ffbd178:  je     0x3ffbd51a

----------------
IN: 
0x000000003ffbd17e:  cmp    $0x81,%eax
0x000000003ffbd183:  jne    0x3ffbd52c

----------------
IN: 
0x000000003ffbd189:  movzwl 0x4(%ebp),%edx
0x000000003ffbd18d:  movzwl 0x6(%ebp),%eax
0x000000003ffbd191:  shl    $0x4,%eax
0x000000003ffbd194:  xor    %ecx,%ecx
0x000000003ffbd196:  call   0xf270e

Servicing hardware INT=0x08
----------------
IN: 
0x00000000000ca803:  push   %es
0x00000000000ca804:  push   %cs
0x00000000000ca805:  pop    %es
0x00000000000ca806:  xor    %ax,%ax
0x00000000000ca808:  mov    $0x1000,%cx
0x00000000000ca80b:  lea    0x300,%di
0x00000000000ca80f:  cld    
0x00000000000ca810:  rep stos %ax,%es:(%di)

----------------
IN: 
0x00000000000ca810:  rep stos %ax,%es:(%di)

----------------
IN: 
0x00000000000ca812:  pop    %es
0x00000000000ca813:  mov    $0x20,%ax
0x00000000000ca816:  out    %ax,$0x7e
0x00000000000ca818:  lret   

----------------
IN: 
0x000000003ffbd19b:  jmp    0x3ffbd511

----------------
IN: 
0x000000003ffbd16d:  dec    %eax
0x000000003ffbd16e:  je     0x3ffbd1a0

----------------
IN: 
0x000000003ffbd1a0:  mov    0x4(%ebp),%ecx
0x000000003ffbd1a3:  mov    $0xf6bcc,%edx
0x000000003ffbd1a8:  mov    $0xf6b0c,%eax
0x000000003ffbd1ad:  call   0x3ffb05ee

----------------
IN: 
0x000000003ffbd1b2:  cmpb   $0x1,0xf6bcc
0x000000003ffbd1b9:  jne    0x3ffbd1d5

----------------
IN: 
0x000000003ffbd1bb:  mov    0x410,%eax
0x000000003ffbd1c0:  and    $0xffffffbe,%eax
0x000000003ffbd1c3:  or     $0x1,%eax
0x000000003ffbd1c6:  mov    %ax,0x410
0x000000003ffbd1cc:  movb   $0x7,0x48f
0x000000003ffbd1d3:  jmp    0x3ffbd1e6

----------------
IN: 
0x000000003ffbd1e6:  xor    %edx,%edx
0x000000003ffbd1e8:  mov    $0x1,%eax
0x000000003ffbd1ed:  jmp    0x3ffbd532

----------------
IN: 
0x000000003ffaf120:  cmp    $0x1,%eax
0x000000003ffaf123:  jne    0x3ffaf0fc

----------------
IN: 
0x000000003ffaf125:  mov    0x3ffbff23,%ecx
0x000000003ffaf12b:  lea    0x1(%ecx),%ebx
0x000000003ffaf12e:  mov    %ebx,0x3ffbff23
0x000000003ffaf134:  jmp    0x3ffaf0f8

----------------
IN: 
0x000000003ffaf0f8:  test   %ecx,%ecx
0x000000003ffaf0fa:  jne    0x3ffaf136

----------------
IN: 
0x000000003ffbd51a:  mov    0x4(%ebp),%ecx
0x000000003ffbd51d:  mov    $0x3ffbff3b,%edx
0x000000003ffbd522:  mov    $0xf6b8c,%eax
0x000000003ffbd527:  call   0x3ffb05ee

----------------
IN: 
0x000000003ffbd52c:  mov    0x4(%ebp),%edx
0x000000003ffbd52f:  mov    0x0(%ebp),%eax
0x000000003ffbd532:  call   0x3ffaf0e3

----------------
IN: 
0x000000003ffbd53f:  xor    %edx,%edx
0x000000003ffbd541:  mov    $0x1,%eax
0x000000003ffbd546:  call   0x3ffaf0e3

----------------
IN: 
0x000000003ffbd54b:  xor    %edx,%edx
0x000000003ffbd54d:  mov    $0x2,%eax
0x000000003ffbd552:  call   0x3ffaf0e3

----------------
IN: 
0x000000003ffbd557:  cmpb   $0x0,0x3ffbff3b
0x000000003ffbd55e:  je     0x3ffbd5b9

----------------
IN: 
0x000000003ffbd560:  call   0x3ffb05ba

----------------
IN: 
0x000000003ffb05ba:  push   %ebx
0x000000003ffb05bb:  xor    %ebx,%ebx
0x000000003ffb05bd:  cmpl   $0x0,0xf6b08
0x000000003ffb05c4:  jne    0x3ffb05ea

----------------
IN: 
0x000000003ffb05c6:  mov    $0x800,%eax
0x000000003ffb05cb:  call   0x3ffaef64

----------------
IN: 
0x000000003ffaef64:  mov    $0x10,%ecx
0x000000003ffaef69:  mov    %eax,%edx
0x000000003ffaef6b:  mov    $0x3ffbfebb,%eax
0x000000003ffaef70:  jmp    0x3ffaeed1

----------------
IN: 
0x000000003ffb05d0:  test   %eax,%eax
0x000000003ffb05d2:  jne    0x3ffb05e5

----------------
IN: 
0x000000003ffb05e5:  mov    %eax,0xf6b08
0x000000003ffb05ea:  mov    %ebx,%eax
0x000000003ffb05ec:  pop    %ebx
0x000000003ffb05ed:  ret    

----------------
IN: 
0x000000003ffbd565:  test   %eax,%eax
0x000000003ffbd567:  js     0x3ffbd5b9

----------------
IN: 
0x000000003ffbd569:  mov    $0x24,%eax
0x000000003ffbd56e:  call   0x3ffaef75

----------------
IN: 
0x000000003ffbd573:  mov    %eax,%ebx
0x000000003ffbd575:  test   %eax,%eax
0x000000003ffbd577:  jne    0x3ffbd591

----------------
IN: 
0x000000003ffbd591:  mov    %eax,0xf6b04
0x000000003ffbd596:  mov    $0x24,%ecx
0x000000003ffbd59b:  xor    %edx,%edx
0x000000003ffbd59d:  call   0xf118c

----------------
IN: 
0x000000003ffbd5a2:  movb   $0x40,(%ebx)
0x000000003ffbd5a5:  movw   $0x200,0x1a(%ebx)
0x000000003ffbd5ab:  movl   $0xffffffff,0xc(%ebx)
0x000000003ffbd5b2:  movl   $0xffffffff,0x10(%ebx)
0x000000003ffbd5b9:  movl   $0x0,0xf65f0
0x000000003ffbd5c3:  movl   $0x0,0xf65f7
0x000000003ffbd5cd:  call   0xf12e6

----------------
IN: 
0x000000003ffbd5d2:  mov    %eax,%ebx
0x000000003ffbd5d4:  mov    0x3ffbfe93,%eax
0x000000003ffbd5d9:  mov    %ebx,%ecx
0x000000003ffbd5db:  sub    %eax,%ecx
0x000000003ffbd5dd:  xor    %edx,%edx
0x000000003ffbd5df:  call   0xf118c

----------------
IN: 
0x000000003ffbd5e4:  movw   $0xaa55,(%ebx)
0x000000003ffbd5e9:  mov    $0xf0000,%edx
0x000000003ffbd5ee:  sub    %ebx,%edx
0x000000003ffbd5f0:  shr    $0x9,%edx
0x000000003ffbd5f3:  cmp    $0xff,%edx
0x000000003ffbd5f9:  jle    0x3ffbd600

----------------
IN: 
0x000000003ffbd600:  mov    %dl,0x2(%ebx)
0x000000003ffbd603:  movzwl 0x413,%ecx
0x000000003ffbd60a:  shl    $0xa,%ecx
0x000000003ffbd60d:  mov    %ecx,%eax
0x000000003ffbd60f:  cltd   
0x000000003ffbd610:  movl   $0x2,0x8(%esp)
0x000000003ffbd618:  mov    $0xa0000,%esi
0x000000003ffbd61d:  sub    %ecx,%esi
0x000000003ffbd61f:  mov    %esi,(%esp)
0x000000003ffbd622:  movl   $0x0,0x4(%esp)
0x000000003ffbd62a:  call   0x3ffb0e3e

----------------
IN: 
0x000000003ffb0db7:  add    0x8(%ecx),%eax
0x000000003ffb0dba:  adc    0xc(%ecx),%edx
0x000000003ffb0dbd:  cmp    %edx,0x10(%esp)
0x000000003ffb0dc1:  jb     0x3ffb0dd4

----------------
IN: 
0x000000003ffb0dc3:  ja     0x3ffb0dcb

----------------
IN: 
0x000000003ffb0dc5:  cmp    %eax,0xc(%esp)
0x000000003ffb0dc9:  jb     0x3ffb0dd4

----------------
IN: 
0x000000003ffb0dcb:  mov    %esi,%eax
0x000000003ffb0dcd:  call   0x3ffaf76e

----------------
IN: 
0x000000003ffaf76e:  mov    0xf6604,%edx
0x000000003ffaf774:  lea    -0x1(%edx),%ecx
0x000000003ffaf777:  mov    %ecx,0xf6604
0x000000003ffaf77d:  sub    %eax,%ecx
0x000000003ffaf77f:  imul   $0x14,%ecx,%ecx
0x000000003ffaf782:  lea    0x1(%eax),%edx
0x000000003ffaf785:  imul   $0x14,%edx,%edx
0x000000003ffaf788:  add    $0xf6608,%edx
0x000000003ffaf78e:  imul   $0x14,%eax,%eax
0x000000003ffaf791:  add    $0xf6608,%eax
0x000000003ffaf796:  jmp    0x3ffaf731

----------------
IN: 
0x000000003ffaf739:  mov    %eax,%edi
0x000000003ffaf73b:  mov    %edx,%esi
0x000000003ffaf73d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffaf73d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000000003ffaf73f:  jmp    0x3ffaf769

----------------
IN: 
0x000000003ffaf769:  pop    %ebx
0x000000003ffaf76a:  pop    %esi
0x000000003ffaf76b:  pop    %edi
0x000000003ffaf76c:  pop    %ebp
0x000000003ffaf76d:  ret    

----------------
IN: 
0x000000003ffb0dd2:  jmp    0x3ffb0d8f

----------------
IN: 
0x000000003ffb0d8f:  cmp    0xf6604,%esi
0x000000003ffb0d95:  jge    0x3ffb0e03

----------------
IN: 
0x000000003ffbd62f:  mov    0x3ffbfeb3,%esi
0x000000003ffbd635:  xor    %edi,%edi
0x000000003ffbd637:  test   %esi,%esi
0x000000003ffbd639:  je     0x3ffbd641

----------------
IN: 
0x000000003ffbd63b:  mov    %esi,%edi
0x000000003ffbd63d:  mov    (%esi),%esi
0x000000003ffbd63f:  jmp    0x3ffbd637

----------------
IN: 
0x000000003ffbd637:  test   %esi,%esi
0x000000003ffbd639:  je     0x3ffbd641

----------------
IN: 
0x000000003ffbd641:  mov    0xc(%edi),%eax
0x000000003ffbd644:  mov    0x10(%edi),%ecx
0x000000003ffbd647:  sub    %eax,%ecx
0x000000003ffbd649:  xor    %edx,%edx
0x000000003ffbd64b:  call   0xf118c

----------------
IN: 
0x000000003ffbd650:  mov    0x10(%edi),%eax
0x000000003ffbd653:  mov    %eax,0x10(%esp)
0x000000003ffbd657:  mov    0xc(%edi),%eax
0x000000003ffbd65a:  mov    %eax,0xc(%esp)
0x000000003ffbd65e:  mov    %ebx,0x8(%esp)
0x000000003ffbd662:  mov    0x3ffbfe93,%eax
0x000000003ffbd667:  mov    %eax,0x4(%esp)
0x000000003ffbd66b:  movl   $0xf6054,(%esp)
0x000000003ffbd672:  call   0xf1cc0

----------------
IN: 
0x000000003ffbd677:  mov    0x3ffbfeb7,%eax
0x000000003ffbd67c:  test   %eax,%eax
0x000000003ffbd67e:  je     0x3ffbd686

----------------
IN: 
0x000000003ffbd680:  mov    %eax,%esi
0x000000003ffbd682:  mov    (%eax),%eax
0x000000003ffbd684:  jmp    0x3ffbd67c

----------------
IN: 
0x000000003ffbd67c:  test   %eax,%eax
0x000000003ffbd67e:  je     0x3ffbd686

----------------
IN: 
0x000000003ffbd686:  test   %esi,%esi
0x000000003ffbd688:  je     0x3ffbd6c6

----------------
IN: 
0x000000003ffbd68a:  mov    0xc(%esi),%ecx
0x000000003ffbd68d:  xor    %ebx,%ebx
0x000000003ffbd68f:  mov    0x10(%esi),%esi
0x000000003ffbd692:  sub    %ecx,%esi
0x000000003ffbd694:  and    $0xfffff000,%esi
0x000000003ffbd69a:  mov    %ecx,%eax
0x000000003ffbd69c:  mov    %ebx,%edx
0x000000003ffbd69e:  movl   $0x1,0x8(%esp)
0x000000003ffbd6a6:  mov    %esi,(%esp)
0x000000003ffbd6a9:  movl   $0x0,0x4(%esp)
0x000000003ffbd6b1:  call   0x3ffb0e3e

----------------
IN: 
0x000000003ffb0cef:  inc    %esi
0x000000003ffb0cf0:  jmp    0x3ffb0cb7

----------------
IN: 
0x000000003ffb0cb7:  cmp    %edx,%esi
0x000000003ffb0cb9:  jge    0x3ffb0d8c

----------------
IN: 
0x000000003ffb0d17:  mov    0xc(%esp),%edi
0x000000003ffb0d1b:  mov    0x10(%esp),%ebp
0x000000003ffb0d1f:  sub    %ecx,%edi
0x000000003ffb0d21:  sbb    %ebx,%ebp
0x000000003ffb0d23:  mov    %edi,0x24(%esp)
0x000000003ffb0d27:  mov    %ebp,0x28(%esp)
0x000000003ffb0d2b:  mov    %ecx,0x14(%esp)
0x000000003ffb0d2f:  mov    %ebx,0x18(%esp)
0x000000003ffb0d33:  jmp    0x3ffb0d8c

----------------
IN: 
0x000000003ffb0dd4:  mov    0xc(%esp),%edi
0x000000003ffb0dd8:  mov    0x10(%esp),%ebp
0x000000003ffb0ddc:  mov    %edi,(%ecx)
0x000000003ffb0dde:  mov    %ebp,0x4(%ecx)
0x000000003ffb0de1:  sub    %edi,%eax
0x000000003ffb0de3:  sbb    %ebp,%edx
0x000000003ffb0de5:  mov    %eax,0x8(%ecx)
0x000000003ffb0de8:  mov    %edx,0xc(%ecx)
0x000000003ffb0deb:  mov    0x2c(%esp),%ebx
0x000000003ffb0def:  cmp    0x10(%ecx),%ebx
0x000000003ffb0df2:  jne    0x3ffb0e03

----------------
IN: 
0x000000003ffbd6b6:  mov    %esi,0x4(%esp)
0x000000003ffbd6ba:  movl   $0xf607b,(%esp)
0x000000003ffbd6c1:  call   0xf1cc0

----------------
IN: 
0x000000003ffbd6c6:  call   0x3ffaf057

----------------
IN: 
0x000000003ffbd6cb:  mov    0xf6604,%eax
0x000000003ffbd6d0:  mov    %eax,0x4(%esp)
0x000000003ffbd6d4:  movl   $0xf609a,(%esp)
0x000000003ffbd6db:  call   0xf1cc0

----------------
IN: 
0x000000003ffbd6e0:  mov    $0xf6608,%esi
0x000000003ffbd6e5:  xor    %edi,%edi
0x000000003ffbd6e7:  cmp    0xf6604,%edi
0x000000003ffbd6ed:  jge    0x3ffbd78a

----------------
IN: 
0x000000003ffbd6f3:  mov    (%esi),%eax
0x000000003ffbd6f5:  mov    0x4(%esi),%edx
0x000000003ffbd6f8:  mov    %eax,%ecx
0x000000003ffbd6fa:  mov    %edx,%ebx
0x000000003ffbd6fc:  add    0x8(%esi),%ecx
0x000000003ffbd6ff:  adc    0xc(%esi),%ebx
0x000000003ffbd702:  mov    %ecx,0x28(%esp)
0x000000003ffbd706:  mov    %ebx,0x2c(%esp)
0x000000003ffbd70a:  mov    0x10(%esi),%ebx
0x000000003ffbd70d:  cmp    $0x3,%ebx
0x000000003ffbd710:  je     0x3ffbd745

----------------
IN: 
0x000000003ffbd712:  ja     0x3ffbd728

----------------
IN: 
0x000000003ffbd714:  mov    $0xf5cd7,%ecx
0x000000003ffbd719:  cmp    $0x1,%ebx
0x000000003ffbd71c:  je     0x3ffbd751

----------------
IN: 
0x000000003ffbd751:  mov    %ecx,0x1c(%esp)
0x000000003ffbd755:  mov    %ebx,0x18(%esp)
0x000000003ffbd759:  mov    0x28(%esp),%ecx
0x000000003ffbd75d:  mov    0x2c(%esp),%ebx
0x000000003ffbd761:  mov    %ecx,0x10(%esp)
0x000000003ffbd765:  mov    %ebx,0x14(%esp)
0x000000003ffbd769:  mov    %eax,0x8(%esp)
0x000000003ffbd76d:  mov    %edx,0xc(%esp)
0x000000003ffbd771:  mov    %edi,0x4(%esp)
0x000000003ffbd775:  movl   $0xf60b2,(%esp)
0x000000003ffbd77c:  call   0xf1cc0

----------------
IN: 
0x000000003ffbd781:  inc    %edi
0x000000003ffbd782:  add    $0x14,%esi
0x000000003ffbd785:  jmp    0x3ffbd6e7

----------------
IN: 
0x000000003ffbd6e7:  cmp    0xf6604,%edi
0x000000003ffbd6ed:  jge    0x3ffbd78a

----------------
IN: 
0x000000003ffbd71e:  mov    $0xf5cdb,%ecx
0x000000003ffbd723:  cmp    $0x2,%ebx
0x000000003ffbd726:  jmp    0x3ffbd73c

----------------
IN: 
0x000000003ffbd73c:  je     0x3ffbd751

----------------
IN: 
0x00000000000f1a84:  sub    $0x8,%ecx
0x00000000000f1a87:  mov    %eax,(%esp)
0x00000000000f1a8a:  mov    0x4(%esp),%esi
0x00000000000f1a8e:  mov    %esi,%eax
0x00000000000f1a90:  call   0xf1125

----------------
IN: 
0x000000003ffbd78a:  movl   $0x2,0xf6c30
0x000000003ffbd794:  mov    0xfffff,%bl
0x000000003ffbd79a:  mov    $0x10000,%edx
0x000000003ffbd79f:  mov    $0xf0000,%eax
0x000000003ffbd7a4:  call   0xf152e

----------------
IN: 
0x000000003ffbd7a9:  sub    %eax,%ebx
0x000000003ffbd7ab:  mov    %bl,0xfffff
0x000000003ffbd7b1:  call   0xf2842

----------------
IN: 
0x00000000000f2842:  testb  $0x2,0xf65e0
0x00000000000f2849:  jne    0xf2893

----------------
IN: 
0x00000000000f284b:  mov    0xf64cc,%ecx
0x00000000000f2851:  test   %ecx,%ecx
0x00000000000f2853:  jns    0xf2865

----------------
IN: 
0x00000000000f2865:  movzwl %cx,%ecx
0x00000000000f2868:  mov    %ecx,%eax
0x00000000000f286a:  shl    $0x8,%eax
0x00000000000f286d:  or     $0x80000000,%eax
0x00000000000f2872:  mov    $0xcf8,%edx
0x00000000000f2877:  out    %eax,(%dx)
0x00000000000f2878:  mov    $0xfe,%dl
0x00000000000f287a:  in     (%dx),%ax
0x00000000000f287c:  mov    $0x59,%edx
0x00000000000f2881:  cmp    $0x1237,%ax
0x00000000000f2885:  je     0xf288c

----------------
IN: 
0x00000000000f288c:  mov    %ecx,%eax
0x00000000000f288e:  jmp    0xf13e7

----------------
IN: 
0x00000000000f13e7:  push   %ebp
0x00000000000f13e8:  push   %edi
0x00000000000f13e9:  push   %esi
0x00000000000f13ea:  push   %ebx
0x00000000000f13eb:  push   %esi
0x00000000000f13ec:  mov    %eax,%esi
0x00000000000f13ee:  mov    %edx,%edi
0x00000000000f13f0:  movzwl %ax,%ebp
0x00000000000f13f3:  wbinvd 
0x00000000000f13f5:  call   0xf12e6

----------------
IN: 
0x00000000000f13fa:  mov    %eax,(%esp)
0x00000000000f13fd:  mov    $0x1,%ebx
0x00000000000f1402:  lea    0x17(%ebx),%eax
0x00000000000f1405:  shl    $0xf,%eax
0x00000000000f1408:  lea    (%ebx,%edi,1),%edx
0x00000000000f140b:  lea    0x8000(%eax),%ecx
0x00000000000f1411:  cmp    %ecx,(%esp)
0x00000000000f1414:  jae    0xf142f

----------------
IN: 
0x00000000000f142f:  mov    $0x11,%ecx
0x00000000000f1434:  mov    %ebp,%eax
0x00000000000f1436:  call   0xf1213

----------------
IN: 
0x00000000000f143b:  inc    %ebx
0x00000000000f143c:  cmp    $0x7,%ebx
0x00000000000f143f:  jne    0xf1402

----------------
IN: 
0x00000000000f1402:  lea    0x17(%ebx),%eax
0x00000000000f1405:  shl    $0xf,%eax
0x00000000000f1408:  lea    (%ebx,%edi,1),%edx
0x00000000000f140b:  lea    0x8000(%eax),%ecx
0x00000000000f1411:  cmp    %ecx,(%esp)
0x00000000000f1414:  jae    0xf142f

----------------
IN: 
0x00000000000f1416:  add    $0x4000,%eax
0x00000000000f141b:  cmp    %eax,(%esp)
0x00000000000f141e:  jb     0xf1441

----------------
IN: 
0x00000000000f1420:  movzwl %si,%eax
0x00000000000f1423:  mov    $0x31,%ecx
0x00000000000f1428:  call   0xf1213

----------------
IN: 
0x00000000000f142d:  jmp    0xf1441

----------------
IN: 
0x00000000000f1441:  movzwl %si,%eax
0x00000000000f1444:  mov    $0x10,%ecx
0x00000000000f1449:  mov    %edi,%edx
0x00000000000f144b:  pop    %ebx
0x00000000000f144c:  pop    %ebx
0x00000000000f144d:  pop    %esi
0x00000000000f144e:  pop    %edi
0x00000000000f144f:  pop    %ebp
0x00000000000f1450:  jmp    0xf1213

----------------
IN: 
0x000000003ffbd7b6:  call   0xf2de8

----------------
IN: 
0x00000000000f2de8:  sub    $0x28,%esp
0x00000000000f2deb:  mov    $0x89000,%ecx
0x00000000000f2df0:  xor    %edx,%edx
0x00000000000f2df2:  mov    $0x7000,%eax
0x00000000000f2df7:  call   0xf118c

----------------
IN: 
0x00000000000f2dfc:  mov    $0x26,%ecx
0x00000000000f2e01:  xor    %edx,%edx
0x00000000000f2e03:  lea    0x2(%esp),%eax
0x00000000000f2e07:  call   0xf118c

----------------
IN: 
0x00000000000f2e0c:  movw   $0x200,0x26(%esp)
0x00000000000f2e13:  movw   $0xf000,0x24(%esp)
0x00000000000f2e1a:  mov    $0xfd347,%eax
0x00000000000f2e1f:  mov    %ax,0x22(%esp)
0x00000000000f2e24:  lea    0x2(%esp),%eax
0x00000000000f2e28:  call   0xf1c1b

----------------
IN: 
0x00000000000fd347:  int    $0x19

----------------
IN: 
0x00000000000fe6f2:  jmp    0xfd688

----------------
IN: 
0x00000000000fd688:  xor    %ax,%ax
0x00000000000fd68a:  mov    %ax,%ss

----------------
IN: 
0x00000000000fd68c:  mov    $0x7000,%esp

----------------
IN: 
0x00000000000fd692:  mov    $0xf4297,%edx
0x00000000000fd698:  jmp    0xfd1be

----------------
IN: 
0x00000000000f4297:  sub    $0x8,%esp
0x00000000000f429a:  movl   $0xf6430,0x4(%esp)
0x00000000000f42a2:  movl   $0xf637c,(%esp)
0x00000000000f42a9:  call   0xf1cc0

----------------
IN: 
0x00000000000f42ae:  movl   $0xf6387,(%esp)
0x00000000000f42b5:  call   0xf1cc0

----------------
IN: 
0x00000000000f42ba:  movl   $0x0,0xef790
0x00000000000f42c4:  xor    %eax,%eax
0x00000000000f42c6:  add    $0x8,%esp
0x00000000000f42c9:  jmp    0xf4139

----------------
IN: 
0x00000000000f4139:  push   %ebx
0x00000000000f413a:  sub    $0x30,%esp
0x00000000000f413d:  mov    %eax,%ebx
0x00000000000f413f:  cmp    0xf6518,%eax
0x00000000000f4145:  jl     0xf414c

----------------
IN: 
0x00000000000f414c:  lea    0xf651c(,%ebx,8),%edx
0x00000000000f4153:  mov    0xf651c(,%ebx,8),%eax
0x00000000000f415a:  cmp    $0x3,%eax
0x00000000000f415d:  je     0xf41c2

----------------
IN: 
0x00000000000f415f:  jg     0xf4187

----------------
IN: 
0x00000000000f4161:  cmp    $0x1,%eax
0x00000000000f4164:  je     0xf41a7

----------------
IN: 
0x00000000000f4166:  cmp    $0x2,%eax
0x00000000000f4169:  jne    0xf422b

----------------
IN: 
0x00000000000f416f:  movl   $0xf6300,(%esp)
0x00000000000f4176:  call   0xf2a42

Servicing hardware INT=0x08
----------------
IN: 
0x00000000000f417b:  mov    $0x1,%edx
0x00000000000f4180:  mov    $0x80,%eax
0x00000000000f4185:  jmp    0xf41bb

----------------
IN: 
0x00000000000f41bb:  call   0xf2a55

----------------
IN: 
0x00000000000f2a55:  push   %esi
0x00000000000f2a56:  push   %ebx
0x00000000000f2a57:  sub    $0x2c,%esp
0x00000000000f2a5a:  mov    %eax,%ebx
0x00000000000f2a5c:  mov    %edx,%esi
0x00000000000f2a5e:  mov    $0x26,%ecx
0x00000000000f2a63:  xor    %edx,%edx
0x00000000000f2a65:  lea    0x6(%esp),%eax
0x00000000000f2a69:  call   0xf118c

----------------
IN: 
0x00000000000f2a6e:  movw   $0x200,0x2a(%esp)
0x00000000000f2a75:  mov    %bl,0x1a(%esp)
0x00000000000f2a79:  movw   $0x7c0,0x8(%esp)
0x00000000000f2a80:  movb   $0x2,0x23(%esp)
0x00000000000f2a85:  movb   $0x1,0x22(%esp)
0x00000000000f2a8a:  movb   $0x1,0x1e(%esp)
0x00000000000f2a8f:  movw   $0xf000,0x28(%esp)
0x00000000000f2a96:  mov    $0xfd33b,%eax
0x00000000000f2a9b:  mov    %ax,0x26(%esp)
0x00000000000f2aa0:  lea    0x6(%esp),%eax
0x00000000000f2aa4:  call   0xf1c1b

----------------
IN: 
0x00000000000fd33b:  int    $0x13

----------------
IN: 
0x00000000000fe3fe:  jmp    0xfd649

----------------
IN: 
0x00000000000fd649:  pushl  $0xd01e
0x00000000000fd64f:  jmp    0xfd5a6

----------------
IN: 
0x00000000000fd01e:  push   %esi
0x00000000000fd020:  push   %ebx
0x00000000000fd022:  addr32 mov 0x14(%eax),%dl
0x00000000000fd026:  addr32 cmpb $0x4b,0x1d(%eax)
0x00000000000fd02b:  jne    0xfd164

----------------
IN: 
0x00000000000fd164:  mov    $0xe000,%ecx
0x00000000000fd16a:  movzwl %cx,%ecx
0x00000000000fd16e:  mov    %cx,%es
0x00000000000fd170:  mov    %es:-0x842,%bl
0x00000000000fd175:  test   %bl,%bl
0x00000000000fd177:  je     0xfd1b3

----------------
IN: 
0x00000000000fd1b3:  movzbl %dl,%edx
0x00000000000fd1b7:  pop    %ebx
0x00000000000fd1b9:  pop    %esi
0x00000000000fd1bb:  jmp    0xfeed2

----------------
IN: 
0x00000000000feed2:  test   %dl,%dl
0x00000000000feed4:  js     0xfef0c

----------------
IN: 
0x00000000000fef0c:  cmp    $0xdf,%dl
0x00000000000fef0f:  jbe    0xfef2a

----------------
IN: 
0x00000000000fef2a:  add    $0xffffff80,%edx
0x00000000000fef2e:  cmp    $0xf,%dl
0x00000000000fef31:  ja     0xfef49

----------------
IN: 
0x00000000000fef33:  movzbl %dl,%edx
0x00000000000fef37:  addr32 mov %cs:0x6b4c(,%edx,4),%edx
0x00000000000fef41:  test   %edx,%edx
0x00000000000fef44:  je     0xfef49

----------------
IN: 
0x00000000000fef46:  jmp    0xfb50c

----------------
IN: 
0x00000000000fb50c:  push   %ebx
0x00000000000fb50e:  mov    %eax,%ebx
0x00000000000fb511:  mov    $0x40,%ecx
0x00000000000fb517:  mov    %cx,%es
0x00000000000fb519:  xor    %eax,%eax
0x00000000000fb51c:  mov    %al,%es:0x8e
0x00000000000fb520:  addr32 mov 0x1d(%ebx),%al
0x00000000000fb524:  cmp    $0x14,%al
0x00000000000fb526:  je     0xfb670

----------------
IN: 
0x00000000000fb52a:  ja     0xfb598

----------------
IN: 
0x00000000000fb52c:  cmp    $0x5,%al
0x00000000000fb52e:  je     0xfb646

----------------
IN: 
0x00000000000fb532:  ja     0xfb560

----------------
IN: 
0x00000000000fb534:  cmp    $0x2,%al
0x00000000000fb536:  je     0xfb630

----------------
IN: 
0x00000000000fb630:  mov    $0x2,%ecx
0x00000000000fb636:  jmp    0xfb63e

----------------
IN: 
0x00000000000fb63e:  mov    %ebx,%eax
0x00000000000fb641:  pop    %ebx
0x00000000000fb643:  jmp    0xfe2cc

----------------
IN: 
0x00000000000fe2cc:  push   %edi
0x00000000000fe2ce:  push   %esi
0x00000000000fe2d0:  push   %ebx
0x00000000000fe2d2:  sub    $0x18,%esp
0x00000000000fe2d6:  mov    %eax,%ebx
0x00000000000fe2d9:  addr32 mov %edx,0x10(%esp)
0x00000000000fe2df:  addr32 mov %cl,0x16(%esp)
0x00000000000fe2e4:  addr32 movzbl 0x1c(%eax),%ecx
0x00000000000fe2ea:  addr32 mov 0x19(%eax),%al
0x00000000000fe2ee:  addr32 mov %al,0x2(%esp)
0x00000000000fe2f3:  addr32 movzbl 0x18(%ebx),%esi
0x00000000000fe2f9:  mov    %esi,%eax
0x00000000000fe2fc:  and    $0x3f,%eax
0x00000000000fe300:  addr32 mov %al,0x3(%esp)
0x00000000000fe305:  movzbl %al,%edi
0x00000000000fe309:  addr32 mov 0x15(%ebx),%al
0x00000000000fe30d:  addr32 mov %al,0x1(%esp)
0x00000000000fe312:  mov    %cl,%al
0x00000000000fe314:  dec    %al
0x00000000000fe316:  js     0xfe31c

----------------
IN: 
0x00000000000fe318:  test   %di,%di
0x00000000000fe31a:  jne    0xfe325

----------------
IN: 
0x00000000000fe325:  shl    $0x2,%esi
0x00000000000fe329:  and    $0x300,%si
0x00000000000fe32d:  addr32 movzbl 0x2(%esp),%eax
0x00000000000fe334:  or     %eax,%esi
0x00000000000fe337:  addr32 mov %cx,0x14(%esp)
0x00000000000fe33c:  mov    %edx,%eax
0x00000000000fe33f:  calll  0xf7b17

----------------
IN: 
0x00000000000f7b17:  mov    %cs:0x6b04,%edx
0x00000000000f7b1d:  cmp    %edx,%eax
0x00000000000f7b20:  jne    0xf7b51

----------------
IN: 
0x00000000000f7b51:  push   %ebx
0x00000000000f7b53:  addr32 mov %cs:-0xefffc(%eax),%cx
0x00000000000f7b5b:  addr32 mov %cs:-0xefffe(%eax),%bx
0x00000000000f7b63:  addr32 mov %cs:-0xefffa(%eax),%dx
0x00000000000f7b6b:  shl    $0x10,%ecx
0x00000000000f7b6f:  movzwl %bx,%eax
0x00000000000f7b73:  or     %ecx,%eax
0x00000000000f7b76:  movzwl %dx,%edx
0x00000000000f7b7a:  pop    %ebx
0x00000000000f7b7c:  retl   

----------------
IN: 
0x00000000000fe345:  mov    %eax,%ecx
0x00000000000fe348:  shr    $0x10,%ecx
0x00000000000fe34c:  cmp    %cx,%si
0x00000000000fe34e:  jae    0xfe35f

----------------
IN: 
0x00000000000fe350:  addr32 movzbl 0x1(%esp),%ecx
0x00000000000fe357:  cmp    %ax,%cx
0x00000000000fe359:  jae    0xfe35f

----------------
IN: 
0x00000000000fe35b:  cmp    %dx,%di
0x00000000000fe35d:  jbe    0xfe367

----------------
IN: 
0x00000000000fe367:  addr32 movzbl 0x3(%esp),%ecx
0x00000000000fe36e:  movzwl %si,%esi
0x00000000000fe372:  movzwl %ax,%eax
0x00000000000fe376:  imul   %eax,%esi
0x00000000000fe37a:  addr32 movzbl 0x1(%esp),%eax
0x00000000000fe381:  add    %eax,%esi
0x00000000000fe384:  movzwl %dx,%edx
0x00000000000fe388:  imul   %edx,%esi
0x00000000000fe38c:  addr32 lea -0x1(%ecx,%esi,1),%eax
0x00000000000fe392:  addr32 mov %eax,0x4(%esp)
0x00000000000fe398:  addr32 movl $0x0,0x8(%esp)
0x00000000000fe3a2:  addr32 movzwl 0x2(%ebx),%eax
0x00000000000fe3a8:  shl    $0x4,%eax
0x00000000000fe3ac:  addr32 movzwl 0x10(%ebx),%edx
0x00000000000fe3b2:  add    %edx,%eax
0x00000000000fe3b5:  addr32 mov %eax,0xc(%esp)
0x00000000000fe3bb:  addr32 lea 0x4(%esp),%eax
0x00000000000fe3c1:  calll  0xf76da

----------------
IN: 
0x00000000000f76da:  mov    %ss,%dx
0x00000000000f76dc:  movzwl %dx,%edx
0x00000000000f76e0:  mov    $0xbc4a,%ecx
0x00000000000f76e6:  jmp    0xfe694

----------------
IN: 
0x00000000000fe694:  push   %edi
0x00000000000fe696:  push   %esi
0x00000000000fe698:  push   %ebx
0x00000000000fe69a:  push   %ebx
0x00000000000fe69c:  mov    %eax,%ebx
0x00000000000fe69f:  addr32 mov %edx,(%esp)
0x00000000000fe6a4:  mov    %ecx,%esi
0x00000000000fe6a7:  calll  0xf74e1

----------------
IN: 
0x00000000000fe6ad:  test   %eax,%eax
0x00000000000fe6b0:  addr32 mov (%esp),%edx
0x00000000000fe6b5:  mov    %ebx,%eax
0x00000000000fe6b8:  je     0xfe6bf

----------------
IN: 
0x00000000000fe6ba:  calll  *%esi

----------------
IN: 
0x00000000000fbc4a:  push   %ebp
0x00000000000fbc4c:  push   %edi
0x00000000000fbc4e:  push   %esi
0x00000000000fbc50:  push   %ebx
0x00000000000fbc52:  sub    $0x14,%esp
0x00000000000fbc56:  mov    %eax,%ebp
0x00000000000fbc59:  mov    %edx,%ebx
0x00000000000fbc5c:  mov    %ss,%ax
0x00000000000fbc5e:  mov    %ax,%es
0x00000000000fbc60:  mov    $0x14,%ecx
0x00000000000fbc66:  mov    %ebp,%esi
0x00000000000fbc69:  mov    %esp,%edi
0x00000000000fbc6c:  mov    %ds,%ax
0x00000000000fbc6e:  mov    %dx,%ds
0x00000000000fbc70:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000fbc70:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000fbc72:  mov    %ax,%ds
0x00000000000fbc74:  mov    %esp,%eax
0x00000000000fbc77:  calll  0xfb8a1

----------------
IN: 
0x00000000000fb8a1:  push   %ebp
0x00000000000fb8a3:  push   %edi
0x00000000000fb8a5:  push   %esi
0x00000000000fb8a7:  push   %ebx
0x00000000000fb8a9:  sub    $0x8,%esp
0x00000000000fb8ad:  mov    %eax,%esi
0x00000000000fb8b0:  addr32 mov 0x10(%eax),%edi
0x00000000000fb8b5:  addr32 mov 0xc(%eax),%ebx
0x00000000000fb8ba:  addr32 mov %cs:-0xf0000(%ebx),%al
0x00000000000fb8c2:  cmp    $0x60,%al
0x00000000000fb8c4:  je     0xfbbf4

----------------
IN: 
0x00000000000fb8c8:  ja     0xfb8fb

----------------
IN: 
0x00000000000fb8ca:  cmp    $0x30,%al
0x00000000000fb8cc:  je     0xfbc39

----------------
IN: 
0x00000000000fb8d0:  ja     0xfb8e6

----------------
IN: 
0x00000000000fb8d2:  cmp    $0x20,%al
0x00000000000fb8d4:  je     0xfb9ca

----------------
IN: 
0x00000000000fb9ca:  addr32 mov 0x12(%esi),%al
0x00000000000fb9ce:  cmp    $0x5,%al
0x00000000000fb9d0:  ja     0xfb9e5

----------------
IN: 
0x00000000000fb9d2:  cmp    $0x4,%al
0x00000000000fb9d4:  jae    0xfbc39

----------------
IN: 
0x00000000000fb9d8:  cmp    $0x2,%al
0x00000000000fb9da:  je     0xfb9f4

----------------
IN: 
0x00000000000fb9f4:  xor    %edx,%edx
0x00000000000fb9f7:  jmp    0xfb9ff

----------------
IN: 
0x00000000000fb9ff:  mov    %esi,%eax
0x00000000000fba02:  calll  0xf9299

----------------
IN: 
0x00000000000f9299:  push   %ebp
0x00000000000f929b:  push   %edi
0x00000000000f929d:  push   %esi
0x00000000000f929f:  push   %ebx
0x00000000000f92a1:  sub    $0xc,%esp
0x00000000000f92a5:  mov    %eax,%edi
0x00000000000f92a8:  mov    %edx,%ebp
0x00000000000f92ab:  addr32 mov (%eax),%ebx
0x00000000000f92af:  addr32 mov 0x4(%eax),%esi
0x00000000000f92b4:  mov    $0xc,%ecx
0x00000000000f92ba:  xor    %edx,%edx
0x00000000000f92bd:  mov    %esp,%eax
0x00000000000f92c0:  calll  0xf7505

----------------
IN: 
0x00000000000f92c6:  addr32 mov 0x10(%edi),%ecx
0x00000000000f92cb:  cmp    $0xff,%cx
0x00000000000f92cf:  ja     0xf92ec

----------------
IN: 
0x00000000000f92d1:  movzwl %cx,%eax
0x00000000000f92d5:  xor    %edx,%edx
0x00000000000f92d8:  add    %ebx,%eax
0x00000000000f92db:  adc    %esi,%edx
0x00000000000f92de:  cmp    $0x0,%edx
0x00000000000f92e2:  ja     0xf92ec

----------------
IN: 
0x00000000000f92e4:  cmp    $0xfffffff,%eax
0x00000000000f92ea:  jbe    0xf933c

----------------
IN: 
0x00000000000f933c:  cmp    $0x1,%ebp
0x00000000000f9340:  sbb    %eax,%eax
0x00000000000f9343:  and    $0xfffffff0,%eax
0x00000000000f9347:  add    $0x30,%eax
0x00000000000f934b:  addr32 mov %al,0x6(%esp)
0x00000000000f9350:  addr32 mov %cl,0x1(%esp)
0x00000000000f9355:  addr32 mov %bl,0x2(%esp)
0x00000000000f935a:  mov    %ebx,%eax
0x00000000000f935d:  mov    %esi,%edx
0x00000000000f9360:  shrd   $0x8,%edx,%eax
0x00000000000f9365:  shr    $0x8,%edx
0x00000000000f9369:  addr32 mov %al,0x3(%esp)
0x00000000000f936e:  mov    %ebx,%eax
0x00000000000f9371:  mov    %esi,%edx
0x00000000000f9374:  shrd   $0x10,%edx,%eax
0x00000000000f9379:  shr    $0x10,%edx
0x00000000000f937d:  addr32 mov %al,0x4(%esp)
0x00000000000f9382:  mov    %ebx,%eax
0x00000000000f9385:  mov    %esi,%edx
0x00000000000f9388:  shrd   $0x18,%edx,%eax
0x00000000000f938d:  shr    $0x18,%edx
0x00000000000f9391:  mov    %al,%bl
0x00000000000f9393:  and    $0xf,%ebx
0x00000000000f9397:  or     $0x40,%ebx
0x00000000000f939b:  addr32 mov %bl,0x5(%esp)
0x00000000000f93a0:  addr32 mov 0xc(%edi),%ecx

----------------
IN: 
0x00000000000f93a5:  addr32 mov %cs:-0xeffdc(%ecx),%eax
0x00000000000f93ae:  addr32 mov %cs:-0xf0000(%eax),%si
0x00000000000f93b6:  addr32 mov %cs:-0xefffe(%eax),%bx
0x00000000000f93be:  add    $0x2,%ebx
0x00000000000f93c2:  mov    $0xa,%al
0x00000000000f93c4:  mov    %ebx,%edx
0x00000000000f93c7:  out    %al,(%dx)
0x00000000000f93c8:  mov    %esp,%edx
0x00000000000f93cb:  mov    %ecx,%eax
0x00000000000f93ce:  calll  0xf9159

----------------
IN: 
0x00000000000f9159:  push   %ebp
0x00000000000f915b:  push   %edi
0x00000000000f915d:  push   %esi
0x00000000000f915f:  push   %ebx
0x00000000000f9161:  mov    %edx,%edi
0x00000000000f9164:  addr32 mov %cs:-0xeffdc(%eax),%edx
0x00000000000f916d:  addr32 mov %cs:-0xeffd8(%eax),%bl
0x00000000000f9175:  addr32 mov %cs:-0xf0000(%edx),%si
0x00000000000f917d:  movzwl %si,%ebp
0x00000000000f9181:  mov    %ebp,%eax
0x00000000000f9184:  calll  0xf9149

----------------
IN: 
0x00000000000f9149:  movzwl %ax,%ecx
0x00000000000f914d:  xor    %edx,%edx
0x00000000000f9150:  mov    $0x80,%eax
0x00000000000f9156:  jmp    0xf90d6

----------------
IN: 
0x00000000000f90d6:  push   %ebp
0x00000000000f90d8:  push   %edi
0x00000000000f90da:  push   %esi
0x00000000000f90dc:  push   %ebx
0x00000000000f90de:  mov    %eax,%esi
0x00000000000f90e1:  mov    %edx,%edi
0x00000000000f90e4:  mov    %ecx,%ebp
0x00000000000f90e7:  mov    $0x7d00,%eax
0x00000000000f90ed:  calll  0xf84b7

----------------
IN: 
0x00000000000f84b7:  push   %ebx
0x00000000000f84b9:  mov    %eax,%ebx
0x00000000000f84bc:  calll  0xf8386

----------------
IN: 
0x00000000000f8386:  mov    %cs:0x6900,%dx
0x00000000000f838b:  test   %dx,%dx
0x00000000000f838d:  jne    0xf83aa

----------------
IN: 
0x00000000000f83aa:  push   %esi
0x00000000000f83ac:  push   %ebx
0x00000000000f83ae:  cmp    $0x40,%dx
0x00000000000f83b1:  je     0xf83e9

----------------
IN: 
0x00000000000f83b3:  in     (%dx),%eax
0x00000000000f83b5:  mov    $0xe000,%edx
0x00000000000f83bb:  movzwl %dx,%edx
0x00000000000f83bf:  mov    %dx,%es
0x00000000000f83c1:  mov    %es:-0x858,%ecx
0x00000000000f83c7:  and    $0xffffff,%eax
0x00000000000f83cd:  mov    %ecx,%ebx
0x00000000000f83d0:  and    $0xff000000,%ebx
0x00000000000f83d7:  or     %ebx,%eax
0x00000000000f83da:  cmp    %ecx,%eax
0x00000000000f83dd:  jae    0xf83e5

----------------
IN: 
0x00000000000f83e5:  mov    %dx,%es
0x00000000000f83e7:  jmp    0xf842a

----------------
IN: 
0x00000000000f842a:  mov    %eax,%es:0xf7a8
0x00000000000f842f:  pop    %ebx
0x00000000000f8431:  pop    %esi
0x00000000000f8433:  retl   

----------------
IN: 
0x00000000000f84c2:  mov    %cs:0x6904,%edx
0x00000000000f84c8:  imul   %ebx,%edx
0x00000000000f84cc:  add    %edx,%eax
0x00000000000f84cf:  pop    %ebx
0x00000000000f84d1:  retl   

----------------
IN: 
0x00000000000f90f3:  mov    %eax,%ebx
0x00000000000f90f6:  add    $0x7,%ebp
0x00000000000f90fa:  mov    %ebp,%edx
0x00000000000f90fd:  in     (%dx),%al
0x00000000000f90fe:  mov    %esi,%edx
0x00000000000f9101:  and    %eax,%edx
0x00000000000f9104:  mov    %edi,%ecx
0x00000000000f9107:  cmp    %cl,%dl
0x00000000000f9109:  jne    0xf9111

----------------
IN: 
0x00000000000f910b:  movzbl %al,%eax
0x00000000000f910f:  jmp    0xf913f

----------------
IN: 
0x00000000000f913f:  pop    %ebx
0x00000000000f9141:  pop    %esi
0x00000000000f9143:  pop    %edi
0x00000000000f9145:  pop    %ebp
0x00000000000f9147:  retl   

----------------
IN: 
0x00000000000f918a:  test   %eax,%eax
0x00000000000f918d:  js     0xf9256

----------------
IN: 
0x00000000000f9191:  addr32 mov 0x5(%edi),%al
0x00000000000f9195:  and    $0x4f,%eax
0x00000000000f9199:  cmp    $0x1,%bl
0x00000000000f919c:  sbb    %ecx,%ecx
0x00000000000f919f:  and    $0xfffffff0,%ecx
0x00000000000f91a3:  sub    $0x50,%ecx
0x00000000000f91a7:  or     %eax,%ecx
0x00000000000f91aa:  addr32 lea 0x6(%esi),%edx
0x00000000000f91af:  in     (%dx),%al
0x00000000000f91b0:  mov    %al,%bl
0x00000000000f91b2:  mov    %cl,%al
0x00000000000f91b4:  out    %al,(%dx)
0x00000000000f91b5:  xor    %ecx,%ebx
0x00000000000f91b8:  and    $0x10,%bl
0x00000000000f91bb:  jne    0xf9204

----------------
IN: 
0x00000000000f91bd:  addr32 mov 0x6(%edi),%cl
0x00000000000f91c1:  mov    %ecx,%eax
0x00000000000f91c4:  and    $0xee,%eax
0x00000000000f91ca:  cmp    $0x24,%eax
0x00000000000f91ce:  jne    0xf921a

----------------
IN: 
0x00000000000f921a:  addr32 mov (%edi),%al
0x00000000000f921d:  addr32 lea 0x1(%esi),%edx
0x00000000000f9222:  out    %al,(%dx)
0x00000000000f9223:  addr32 mov 0x1(%edi),%al
0x00000000000f9227:  addr32 lea 0x2(%esi),%edx
0x00000000000f922c:  out    %al,(%dx)
0x00000000000f922d:  addr32 mov 0x2(%edi),%al
0x00000000000f9231:  addr32 lea 0x3(%esi),%edx
0x00000000000f9236:  out    %al,(%dx)
0x00000000000f9237:  addr32 mov 0x3(%edi),%al
0x00000000000f923b:  addr32 lea 0x4(%esi),%edx
0x00000000000f9240:  out    %al,(%dx)
0x00000000000f9241:  addr32 mov 0x4(%edi),%al
0x00000000000f9245:  addr32 lea 0x5(%esi),%edx
0x00000000000f924a:  out    %al,(%dx)
0x00000000000f924b:  addr32 lea 0x7(%esi),%edx
0x00000000000f9250:  mov    %cl,%al
0x00000000000f9252:  out    %al,(%dx)
0x00000000000f9253:  xor    %eax,%eax
0x00000000000f9256:  pop    %ebx
0x00000000000f9258:  pop    %esi
0x00000000000f925a:  pop    %edi
0x00000000000f925c:  pop    %ebp
0x00000000000f925e:  retl   

----------------
IN: 
0x00000000000f93d4:  mov    %eax,%ecx
0x00000000000f93d7:  test   %eax,%eax
0x00000000000f93da:  jne    0xf9400

----------------
IN: 
0x00000000000f93dc:  movzwl %si,%eax
0x00000000000f93e0:  calll  0xf9260

----------------
IN: 
0x00000000000f9260:  push   %ebx
0x00000000000f9262:  mov    %eax,%ebx
0x00000000000f9265:  calll  0xf8496

----------------
IN: 
0x00000000000f8496:  mov    %cs:0x6904,%eax
0x00000000000f849b:  imul   $0x190,%eax,%eax
0x00000000000f84a2:  add    $0xf423f,%eax
0x00000000000f84a8:  mov    $0xf4240,%ecx
0x00000000000f84ae:  xor    %edx,%edx
0x00000000000f84b1:  div    %ecx
0x00000000000f84b4:  jmp    0xf8451

----------------
IN: 
0x00000000000f8451:  push   %ebx
0x00000000000f8453:  mov    %eax,%ebx
0x00000000000f8456:  calll  0xf8386

----------------
IN: 
0x00000000000f845c:  add    %eax,%ebx
0x00000000000f845f:  mov    %ebx,%eax
0x00000000000f8462:  calll  0xf8435

----------------
IN: 
0x00000000000f8435:  push   %ebx
0x00000000000f8437:  mov    %eax,%ebx
0x00000000000f843a:  calll  0xf8386

----------------
IN: 
0x00000000000f8440:  sub    %ebx,%eax
0x00000000000f8443:  test   %eax,%eax
0x00000000000f8446:  setg   %al
0x00000000000f8449:  movzbl %al,%eax
0x00000000000f844d:  pop    %ebx
0x00000000000f844f:  retl   

----------------
IN: 
0x00000000000f8468:  test   %eax,%eax
0x00000000000f846b:  jne    0xf8471

----------------
IN: 
0x00000000000f8471:  pop    %ebx
0x00000000000f8473:  retl   

----------------
IN: 
0x00000000000f926b:  movzwl %bx,%eax
0x00000000000f926f:  calll  0xf9149

----------------
IN: 
0x00000000000f9275:  test   %eax,%eax
0x00000000000f9278:  js     0xf9295

----------------
IN: 
0x00000000000f927a:  test   $0x1,%al
0x00000000000f927c:  jne    0xf928f

----------------
IN: 
0x00000000000f927e:  and    $0x8,%eax
0x00000000000f9282:  cmp    $0x1,%eax
0x00000000000f9286:  sbb    %eax,%eax
0x00000000000f9289:  and    $0xfffffffb,%eax
0x00000000000f928d:  jmp    0xf9295

----------------
IN: 
0x00000000000f9295:  pop    %ebx
0x00000000000f9297:  retl   

----------------
IN: 
0x00000000000f93e6:  mov    %eax,%ecx
0x00000000000f93e9:  test   %eax,%eax
0x00000000000f93ec:  jne    0xf9400

----------------
IN: 
0x00000000000f93ee:  mov    $0x200,%cx
0x00000000000f93f1:  mov    %ebp,%edx
0x00000000000f93f4:  mov    %edi,%eax
0x00000000000f93f7:  calll  0xfe837

----------------
IN: 
0x00000000000fe837:  push   %ebp
0x00000000000fe839:  push   %edi
0x00000000000fe83b:  push   %esi
0x00000000000fe83d:  push   %ebx
0x00000000000fe83f:  sub    $0x18,%esp
0x00000000000fe843:  mov    %eax,%ebx
0x00000000000fe846:  addr32 mov %edx,0x8(%esp)
0x00000000000fe84c:  mov    %ecx,%edx
0x00000000000fe84f:  addr32 mov %ecx,0xc(%esp)
0x00000000000fe855:  addr32 mov 0xc(%eax),%eax
0x00000000000fe85a:  addr32 mov %cs:-0xeffdc(%eax),%eax
0x00000000000fe863:  addr32 mov %cs:-0xf0000(%eax),%di
0x00000000000fe86b:  addr32 mov %di,0x10(%esp)
0x00000000000fe870:  addr32 mov %cs:-0xefffe(%eax),%si
0x00000000000fe878:  addr32 movzwl 0x10(%ebx),%ebp
0x00000000000fe87e:  addr32 mov 0x8(%ebx),%eax
0x00000000000fe883:  addr32 mov %eax,(%esp)
0x00000000000fe888:  mov    $0x2,%ecx
0x00000000000fe88e:  mov    %edx,%eax
0x00000000000fe891:  cltd   
0x00000000000fe893:  idiv   %ecx
0x00000000000fe896:  movzwl %ax,%eax
0x00000000000fe89a:  addr32 mov %eax,0x4(%esp)
0x00000000000fe8a0:  addr32 lea 0x2(%esi),%eax
0x00000000000fe8a5:  addr32 mov %ax,0x12(%esp)
0x00000000000fe8aa:  movzwl %di,%eax
0x00000000000fe8ae:  addr32 mov %eax,0x14(%esp)
0x00000000000fe8b4:  addr32 cmpl $0x0,0x8(%esp)
0x00000000000fe8bb:  je     0xfe8e1

----------------
IN: 
0x00000000000fe8e1:  addr32 mov (%esp),%edi
0x00000000000fe8e6:  mov    %edi,%eax
0x00000000000fe8e9:  shr    $0x4,%eax
0x00000000000fe8ed:  mov    %ax,%es
0x00000000000fe8ef:  and    $0xf,%edi
0x00000000000fe8f3:  addr32 mov 0x4(%esp),%ecx
0x00000000000fe8f9:  addr32 mov 0x10(%esp),%edx
0x00000000000fe8ff:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000fe8ff:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000fe902:  addr32 mov 0xc(%esp),%eax
0x00000000000fe908:  addr32 add %eax,(%esp)
0x00000000000fe90d:  addr32 mov 0x12(%esp),%dx
0x00000000000fe912:  in     (%dx),%al
0x00000000000fe913:  addr32 mov 0x14(%esp),%eax
0x00000000000fe919:  calll  0xf9149

----------------
IN: 
0x00000000000fe91f:  test   %eax,%eax
0x00000000000fe922:  jns    0xfe92a

----------------
IN: 
0x00000000000fe92a:  dec    %ebp
0x00000000000fe92c:  je     0xfe948

----------------
IN: 
0x00000000000fe948:  mov    %eax,%edx
0x00000000000fe94b:  and    $0x89,%edx
0x00000000000fe952:  addr32 cmpl $0x0,0x8(%esp)
0x00000000000fe959:  je     0xfe964

----------------
IN: 
0x00000000000fe964:  cmp    $0x1,%edx
0x00000000000fe968:  sbb    %eax,%eax
0x00000000000fe96b:  not    %eax
0x00000000000fe96e:  and    $0xfffffff9,%eax
0x00000000000fe972:  add    $0x18,%esp
0x00000000000fe976:  pop    %ebx
0x00000000000fe978:  pop    %esi
0x00000000000fe97a:  pop    %edi
0x00000000000fe97c:  pop    %ebp
0x00000000000fe97e:  retl   

----------------
IN: 
0x00000000000f93fd:  mov    %eax,%ecx
0x00000000000f9400:  mov    $0x8,%al
0x00000000000f9402:  mov    %ebx,%edx
0x00000000000f9405:  out    %al,(%dx)
0x00000000000f9406:  cmp    $0x1,%ecx
0x00000000000f940a:  sbb    %eax,%eax
0x00000000000f940d:  not    %eax
0x00000000000f9410:  and    $0xc,%eax
0x00000000000f9414:  add    $0xc,%esp
0x00000000000f9418:  pop    %ebx
0x00000000000f941a:  pop    %esi
0x00000000000f941c:  pop    %edi
0x00000000000f941e:  pop    %ebp
0x00000000000f9420:  retl   

----------------
IN: 
0x00000000000fba08:  jmp    0xfbc1e

----------------
IN: 
0x00000000000fbc1e:  test   %eax,%eax
0x00000000000fbc21:  jne    0xfbc2b

----------------
IN: 
0x00000000000fbc23:  jmp    0xfbc3c

----------------
IN: 
0x00000000000fbc3c:  add    $0x8,%esp
0x00000000000fbc40:  pop    %ebx
0x00000000000fbc42:  pop    %esi
0x00000000000fbc44:  pop    %edi
0x00000000000fbc46:  pop    %ebp
0x00000000000fbc48:  retl   

----------------
IN: 
0x00000000000fbc7d:  mov    %bx,%es
0x00000000000fbc7f:  addr32 mov 0x10(%esp),%edx
0x00000000000fbc85:  addr32 mov %dx,%es:0x10(%ebp)
0x00000000000fbc8a:  add    $0x14,%esp
0x00000000000fbc8e:  pop    %ebx
0x00000000000fbc90:  pop    %esi
0x00000000000fbc92:  pop    %edi
0x00000000000fbc94:  pop    %ebp
0x00000000000fbc96:  retl   

----------------
IN: 
0x00000000000fe6bd:  jmp    0xfe6e8

----------------
IN: 
0x00000000000fe6e8:  pop    %edx
0x00000000000fe6ea:  pop    %ebx
0x00000000000fe6ec:  pop    %esi
0x00000000000fe6ee:  pop    %edi
0x00000000000fe6f0:  retl   

----------------
IN: 
0x00000000000fe3c7:  addr32 mov 0x14(%esp),%edx
0x00000000000fe3cd:  addr32 mov %dl,0x1c(%ebx)
0x00000000000fe3d1:  or     $0x60,%ah
0x00000000000fe3d4:  mov    %eax,%edx
0x00000000000fe3d7:  mov    %ebx,%eax
0x00000000000fe3da:  calll  0xf7dd8

----------------
IN: 
0x00000000000f7dd8:  mov    $0x40,%ecx
0x00000000000f7dde:  addr32 cmpb $0x0,0x14(%eax)
0x00000000000f7de3:  js     0xf7dee

----------------
IN: 
0x00000000000f7dee:  mov    %cx,%es
0x00000000000f7df0:  mov    %dl,%es:0x74
0x00000000000f7df5:  test   %dl,%dl
0x00000000000f7df7:  je     0xf7e04

----------------
IN: 
0x00000000000f7e04:  jmp    0xfff45

----------------
IN: 
0x00000000000fe3e0:  add    $0x18,%esp
0x00000000000fe3e4:  pop    %ebx
0x00000000000fe3e6:  pop    %esi
0x00000000000fe3e8:  pop    %edi
0x00000000000fe3ea:  retl   

----------------
IN: 
0x00000000000fd33d:  lret   

----------------
IN: 
0x00000000000f2aa9:  testb  $0x1,0x2a(%esp)
0x00000000000f2aae:  je     0xf2ab9

----------------
IN: 
0x00000000000f2ab9:  test   %esi,%esi
0x00000000000f2abb:  je     0xf2ad6

----------------
IN: 
0x00000000000f2abd:  cmpw   $0xaa55,0x7dfe
0x00000000000f2ac6:  je     0xf2ad6

----------------
IN: 
0x00000000000f2ad6:  movzbl %bl,%edx
0x00000000000f2ad9:  mov    $0x7c00,%eax
0x00000000000f2ade:  call   0xf27e6

----------------
IN: 
0x00000000000f27e6:  push   %esi
0x00000000000f27e7:  push   %ebx
0x00000000000f27e8:  sub    $0x34,%esp
0x00000000000f27eb:  mov    %eax,%ebx
0x00000000000f27ed:  mov    %edx,%esi
0x00000000000f27ef:  movzwl %ax,%eax
0x00000000000f27f2:  mov    %eax,0x8(%esp)
0x00000000000f27f6:  mov    %ebx,%eax
0x00000000000f27f8:  shr    $0x10,%eax
0x00000000000f27fb:  mov    %eax,0x4(%esp)
0x00000000000f27ff:  movl   $0xf4649,(%esp)
0x00000000000f2806:  call   0xf1cc0

----------------
IN: 
0x00000000000f280b:  mov    $0x26,%ecx
0x00000000000f2810:  xor    %edx,%edx
0x00000000000f2812:  lea    0xe(%esp),%eax
0x00000000000f2816:  call   0xf118c

----------------
IN: 
0x00000000000f281b:  movw   $0x200,0x32(%esp)
0x00000000000f2822:  mov    %ebx,0x2e(%esp)
0x00000000000f2826:  mov    %esi,%eax
0x00000000000f2828:  mov    %al,0x22(%esp)
0x00000000000f282c:  movw   $0xaa55,0x2a(%esp)
0x00000000000f2833:  lea    0xe(%esp),%eax
0x00000000000f2837:  call   0xf1c1b

----------------
IN: 
0x0000000000007c00:  jmp    0x7c5a

----------------
IN: 
0x0000000000007c00:  jmp    0x7c5a

----------------
IN: 
0x0000000000007c5a:  jmp    0x7c97

----------------
IN: 
0x0000000000007c97:  mov    $0x7cd0,%si
0x0000000000007c9a:  call   0x7c5c

----------------
IN: 
0x0000000000007c5c:  mov    $0x5,%ah
0x0000000000007c5e:  mov    $0x0,%al
0x0000000000007c60:  int    $0x10

----------------
IN: 
0x00000000000c4d65:  cli    
0x00000000000c4d66:  cld    
0x00000000000c4d67:  push   %ds
0x00000000000c4d68:  push   %eax
0x00000000000c4d6a:  mov    %cs:-0x7740,%ds
0x00000000000c4d6f:  mov    $0x1d2,%eax
0x00000000000c4d75:  addr32 popl 0x1c(%eax)
0x00000000000c4d7a:  addr32 popw (%eax)
0x00000000000c4d7d:  addr32 mov %edi,0x4(%eax)
0x00000000000c4d82:  addr32 mov %esi,0x8(%eax)
0x00000000000c4d87:  addr32 mov %ebp,0xc(%eax)
0x00000000000c4d8c:  addr32 mov %ebx,0x10(%eax)
0x00000000000c4d91:  addr32 mov %edx,0x14(%eax)
0x00000000000c4d96:  addr32 mov %ecx,0x18(%eax)
0x00000000000c4d9b:  addr32 mov %es,0x2(%eax)
0x00000000000c4d9f:  addr32 mov %esp,0x26(%eax)
0x00000000000c4da4:  addr32 mov %ss,0x2a(%eax)
0x00000000000c4da8:  addr32 popl 0x20(%eax)
0x00000000000c4dad:  addr32 popw 0x24(%eax)
0x00000000000c4db1:  mov    %ds,%dx
0x00000000000c4db3:  mov    %dx,%ss

----------------
IN: 
0x00000000000c4db5:  mov    %eax,%esp

----------------
IN: 
0x00000000000c4db8:  mov    $0x8000,%ecx
0x00000000000c4dbe:  addr32 lea (%ecx,%ecx,1),%ecx
0x00000000000c4dc3:  cmp    $0x10000,%ecx
0x00000000000c4dca:  jne    0xc4c65

----------------
IN: 
0x00000000000c4dce:  push   %ax
0x00000000000c4dcf:  call   0xc3da6

----------------
IN: 
0x00000000000c3da6:  push   %ebp
0x00000000000c3da8:  mov    %esp,%ebp
0x00000000000c3dab:  push   %edi
0x00000000000c3dad:  push   %esi
0x00000000000c3daf:  push   %ebx
0x00000000000c3db1:  sub    $0x8,%esp
0x00000000000c3db5:  mov    %eax,%ebx
0x00000000000c3db8:  addr32 mov 0x1d(%eax),%al
0x00000000000c3dbc:  cmp    $0xb,%al
0x00000000000c3dbe:  je     0xc40ad

----------------
IN: 
0x00000000000c3dc2:  ja     0xc3e72

----------------
IN: 
0x00000000000c3dc6:  cmp    $0x5,%al
0x00000000000c3dc8:  je     0xc3f91

----------------
IN: 
0x00000000000c3f91:  addr32 movzbl 0x1c(%ebx),%ebx
0x00000000000c3f97:  cmp    $0x7,%bl
0x00000000000c3f9a:  ja     0xc4c37

----------------
IN: 
0x00000000000c3f9e:  push   %ax
0x00000000000c3f9f:  call   0xc0fc9

----------------
IN: 
0x00000000000c0fc9:  push   %ebp
0x00000000000c0fcb:  mov    %esp,%ebp
0x00000000000c0fce:  mov    $0x40,%eax
0x00000000000c0fd4:  mov    %ax,%es
0x00000000000c0fd6:  mov    %es:0xba,%ax
0x00000000000c0fda:  and    $0x1ff,%eax
0x00000000000c0fe0:  pop    %ebp
0x00000000000c0fe2:  jmp    0xc0f58

----------------
IN: 
0x00000000000c0f58:  mov    $0x5228,%edx
0x00000000000c0f5e:  addr32 mov %cs:(%edx),%cx
0x00000000000c0f62:  movzwl %cx,%ecx
0x00000000000c0f66:  cmp    %eax,%ecx
0x00000000000c0f69:  jne    0xc0f73

----------------
IN: 
0x00000000000c0f73:  addr32 mov %cs:0x2(%edx),%cx
0x00000000000c0f78:  movzwl %cx,%ecx
0x00000000000c0f7c:  cmp    %eax,%ecx
0x00000000000c0f7f:  je     0xc0f6b

----------------
IN: 
0x00000000000c0f81:  add    $0x20,%edx
0x00000000000c0f85:  cmp    $0x5428,%edx
0x00000000000c0f8c:  jb     0xc0f5e

----------------
IN: 
0x00000000000c0f5e:  addr32 mov %cs:(%edx),%cx
0x00000000000c0f62:  movzwl %cx,%ecx
0x00000000000c0f66:  cmp    %eax,%ecx
0x00000000000c0f69:  jne    0xc0f73

----------------
IN: 
0x00000000000c0f8e:  push   %ebp
0x00000000000c0f90:  mov    %esp,%ebp
0x00000000000c0f93:  push   %ebx
0x00000000000c0f95:  mov    $0x5848,%ecx
0x00000000000c0f9b:  cmp    $0x5b08,%ecx
0x00000000000c0fa2:  je     0xc0fbf

----------------
IN: 
0x00000000000c0fa4:  mov    %ecx,%edx
0x00000000000c0fa7:  addr32 mov %cs:(%ecx),%bx
0x00000000000c0fab:  add    $0x2c,%ecx
0x00000000000c0faf:  movzwl %bx,%ebx
0x00000000000c0fb3:  cmp    %eax,%ebx
0x00000000000c0fb6:  jne    0xc0f9b

----------------
IN: 
0x00000000000c0f9b:  cmp    $0x5b08,%ecx
0x00000000000c0fa2:  je     0xc0fbf

----------------
IN: 
0x00000000000c0fb8:  addr32 lea 0x2(%edx),%eax
0x00000000000c0fbd:  jmp    0xc0fc2

----------------
IN: 
0x00000000000c0fc2:  pop    %ebx
0x00000000000c0fc4:  pop    %ebp
0x00000000000c0fc6:  ret    $0x2

----------------
IN: 
0x00000000000c3fa2:  mov    %eax,%edi
0x00000000000c3fa5:  test   %eax,%eax
0x00000000000c3fa8:  je     0xc4c37

----------------
IN: 
0x00000000000c3fac:  mov    %bl,%cl
0x00000000000c3fae:  xor    %edx,%edx
0x00000000000c3fb1:  xor    %eax,%eax
0x00000000000c3fb4:  push   %ax
0x00000000000c3fb5:  call   0xc12a1

----------------
IN: 
0x00000000000c12a1:  push   %ebp
0x00000000000c12a3:  mov    %esp,%ebp
0x00000000000c12a6:  push   %esi
0x00000000000c12a8:  push   %ebx
0x00000000000c12aa:  mov    $0x40,%ebx
0x00000000000c12b0:  mov    %bx,%es
0x00000000000c12b2:  mov    %es:0x4a,%si
0x00000000000c12b7:  mov    %bx,%es
0x00000000000c12b9:  mov    %es:0x4c,%bx
0x00000000000c12be:  movzwl %bx,%ebx
0x00000000000c12c2:  movzbl %cl,%ecx
0x00000000000c12c6:  imul   %ecx,%ebx
0x00000000000c12ca:  movzbl %al,%eax
0x00000000000c12ce:  addr32 lea (%ebx,%eax,2),%eax
0x00000000000c12d3:  movzbl %dl,%edx
0x00000000000c12d7:  movzwl %si,%ecx
0x00000000000c12db:  add    %ecx,%ecx
0x00000000000c12de:  imul   %ecx,%edx
0x00000000000c12e2:  add    %edx,%eax
0x00000000000c12e5:  pop    %ebx
0x00000000000c12e7:  pop    %esi
0x00000000000c12e9:  pop    %ebp
0x00000000000c12eb:  ret    $0x2

----------------
IN: 
0x00000000000c3fb8:  mov    %eax,%esi
0x00000000000c3fbb:  mov    %eax,%edx
0x00000000000c3fbe:  mov    %edi,%eax
0x00000000000c3fc1:  push   %ax
0x00000000000c3fc2:  call   0xc1ab9

----------------
IN: 
0x00000000000c1ab9:  push   %ebp
0x00000000000c1abb:  mov    %esp,%ebp
0x00000000000c1abe:  push   %edi
0x00000000000c1ac0:  push   %esi
0x00000000000c1ac2:  push   %ebx
0x00000000000c1ac4:  mov    %eax,%esi
0x00000000000c1ac7:  mov    %edx,%edi
0x00000000000c1aca:  push   %ax
0x00000000000c1acb:  call   0xc06b0

----------------
IN: 
0x00000000000c06b0:  push   %ebp
0x00000000000c06b2:  mov    %esp,%ebp
0x00000000000c06b5:  mov    $0x3cc,%edx
0x00000000000c06bb:  in     (%dx),%al
0x00000000000c06bc:  mov    $0x3b4,%ecx
0x00000000000c06c2:  test   $0x1,%al
0x00000000000c06c4:  je     0xc06c8

----------------
IN: 
0x00000000000c06c6:  mov    $0xd4,%cl
0x00000000000c06c8:  mov    %ecx,%eax
0x00000000000c06cb:  pop    %ebp
0x00000000000c06cd:  ret    $0x2

----------------
IN: 
0x00000000000c1ace:  mov    %eax,%ebx
0x00000000000c1ad1:  mov    %esi,%eax
0x00000000000c1ad4:  push   %ax
0x00000000000c1ad5:  call   0xc06d0

----------------
IN: 
0x00000000000c06d0:  push   %ebp
0x00000000000c06d2:  mov    %esp,%ebp
0x00000000000c06d5:  addr32 mov %cs:(%eax),%dl
0x00000000000c06d9:  cmp    $0x1,%dl
0x00000000000c06dc:  je     0xc06f9

----------------
IN: 
0x00000000000c06de:  jb     0xc06f1

----------------
IN: 
0x00000000000c06f1:  mov    $0x2,%eax
0x00000000000c06f7:  jmp    0xc070d

----------------
IN: 
0x00000000000c070d:  pop    %ebp
0x00000000000c070f:  ret    $0x2

----------------
IN: 
0x00000000000c1ad8:  imul   %edi,%eax
0x00000000000c1adc:  mov    $0x4,%esi
0x00000000000c1ae2:  cltd   
0x00000000000c1ae4:  idiv   %esi
0x00000000000c1ae7:  mov    %eax,%ecx
0x00000000000c1aea:  shl    $0x8,%eax
0x00000000000c1aee:  or     $0xd,%eax
0x00000000000c1af2:  mov    %ebx,%edx
0x00000000000c1af5:  out    %ax,(%dx)
0x00000000000c1af6:  mov    %ecx,%eax
0x00000000000c1af9:  and    $0xff00,%eax
0x00000000000c1aff:  or     $0xc,%eax
0x00000000000c1b03:  out    %ax,(%dx)
0x00000000000c1b04:  mov    $0x1d,%al
0x00000000000c1b06:  out    %al,(%dx)
0x00000000000c1b07:  addr32 lea 0x1(%ebx),%esi
0x00000000000c1b0c:  mov    %esi,%edx
0x00000000000c1b0f:  in     (%dx),%al
0x00000000000c1b10:  mov    %ecx,%edx
0x00000000000c1b13:  and    $0x800,%edx
0x00000000000c1b1a:  sar    $0x4,%edx
0x00000000000c1b1e:  and    $0x7f,%eax
0x00000000000c1b22:  or     %edx,%eax
0x00000000000c1b25:  mov    %esi,%edx
0x00000000000c1b28:  out    %al,(%dx)
0x00000000000c1b29:  mov    $0x1b,%al
0x00000000000c1b2b:  mov    %ebx,%edx
0x00000000000c1b2e:  out    %al,(%dx)
0x00000000000c1b2f:  mov    %esi,%edx
0x00000000000c1b32:  in     (%dx),%al
0x00000000000c1b33:  mov    %ecx,%edx
0x00000000000c1b36:  and    $0x100,%edx
0x00000000000c1b3d:  sar    $0x8,%edx
0x00000000000c1b41:  and    $0x600,%ecx
0x00000000000c1b48:  sar    $0x7,%ecx
0x00000000000c1b4c:  or     %edx,%ecx
0x00000000000c1b4f:  and    $0xfffffff2,%eax
0x00000000000c1b53:  or     %eax,%ecx
0x00000000000c1b56:  mov    %cl,%al
0x00000000000c1b58:  mov    %esi,%edx
0x00000000000c1b5b:  out    %al,(%dx)

----------------
IN: 
0x00000000000c1b5c:  xor    %eax,%eax
0x00000000000c1b5f:  pop    %ebx
0x00000000000c1b61:  pop    %esi
0x00000000000c1b63:  pop    %edi
0x00000000000c1b65:  pop    %ebp
0x00000000000c1b67:  ret    $0x2

----------------
IN: 
0x00000000000c3fc5:  mov    $0x40,%eax
0x00000000000c3fcb:  mov    %ax,%es
0x00000000000c3fcd:  mov    %si,%es:0x4e
0x00000000000c3fd2:  mov    %ax,%es
0x00000000000c3fd4:  mov    %bl,%es:0x62
0x00000000000c3fd9:  push   %esi
0x00000000000c3fdb:  push   %ebx
0x00000000000c3fdd:  pushl  $0x512c
0x00000000000c3fe3:  push   %ax
0x00000000000c3fe4:  call   0xc274b

----------------
IN: 
0x00000000000c274b:  push   %ebp
0x00000000000c274d:  mov    %esp,%ebp
0x00000000000c2750:  push   %edi
0x00000000000c2752:  push   %esi
0x00000000000c2754:  push   %ebx
0x00000000000c2756:  sub    $0x8,%esp
0x00000000000c275a:  addr32 lea 0xc(%ebp),%ebx
0x00000000000c275f:  addr32 mov 0x8(%ebp),%eax
0x00000000000c2764:  addr32 mov %cs:(%eax),%al
0x00000000000c2768:  test   %al,%al
0x00000000000c276a:  je     0xc2949

----------------
IN: 
0x00000000000c276e:  cmp    $0x25,%al
0x00000000000c2770:  je     0xc277a

----------------
IN: 
0x00000000000c2772:  mov    %cs:-0x6faa,%dx
0x00000000000c2777:  jmp    0xc2931

----------------
IN: 
0x00000000000c2931:  out    %al,(%dx)
0x00000000000c2932:  addr32 mov 0x8(%ebp),%edi
0x00000000000c2937:  jmp    0xc293c

----------------
IN: 
0x00000000000c293c:  addr32 lea 0x1(%edi),%eax
0x00000000000c2941:  addr32 mov %eax,0x8(%ebp)
0x00000000000c2946:  jmp    0xc275f

----------------
IN: 
0x00000000000c275f:  addr32 mov 0x8(%ebp),%eax
0x00000000000c2764:  addr32 mov %cs:(%eax),%al
0x00000000000c2768:  test   %al,%al
0x00000000000c276a:  je     0xc2949

----------------
IN: 
0x00000000000c277a:  addr32 mov 0x8(%ebp),%eax
0x00000000000c277f:  addr32 lea 0x1(%eax),%edi
0x00000000000c2784:  addr32 movb $0x20,-0x11(%ebp)
0x00000000000c2789:  xor    %edx,%edx
0x00000000000c278c:  addr32 mov %cs:(%edi),%al
0x00000000000c2790:  addr32 mov %al,-0x10(%ebp)
0x00000000000c2794:  mov    %eax,%esi
0x00000000000c2797:  sub    $0x30,%esi
0x00000000000c279b:  mov    %esi,%ecx
0x00000000000c279e:  cmp    $0x9,%cl
0x00000000000c27a1:  ja     0xc27ca

----------------
IN: 
0x00000000000c27a3:  cmp    $0x30,%al
0x00000000000c27a5:  jne    0xc27ac

----------------
IN: 
0x00000000000c27a7:  test   %edx,%edx
0x00000000000c27aa:  je     0xc27be

----------------
IN: 
0x00000000000c27be:  addr32 movb $0x30,-0x11(%ebp)
0x00000000000c27c3:  xor    %edx,%edx
0x00000000000c27c6:  inc    %edi
0x00000000000c27c8:  jmp    0xc278c

----------------
IN: 
0x00000000000c278c:  addr32 mov %cs:(%edi),%al
0x00000000000c2790:  addr32 mov %al,-0x10(%ebp)
0x00000000000c2794:  mov    %eax,%esi
0x00000000000c2797:  sub    $0x30,%esi
0x00000000000c279b:  mov    %esi,%ecx
0x00000000000c279e:  cmp    $0x9,%cl
0x00000000000c27a1:  ja     0xc27ca

----------------
IN: 
0x00000000000c27ac:  imul   $0xa,%edx,%edx
0x00000000000c27b0:  addr32 movsbl -0x10(%ebp),%ecx
0x00000000000c27b6:  addr32 lea -0x30(%edx,%ecx,1),%edx
0x00000000000c27bc:  jmp    0xc27c6

----------------
IN: 
0x00000000000c27c6:  inc    %edi
0x00000000000c27c8:  jmp    0xc278c

----------------
IN: 
0x00000000000c27ca:  mov    %edi,%esi
0x00000000000c27cd:  xor    %ecx,%ecx
0x00000000000c27d0:  cmp    $0x6c,%al
0x00000000000c27d2:  jne    0xc27ea

----------------
IN: 
0x00000000000c27ea:  cmp    $0x64,%al
0x00000000000c27ec:  je     0xc2843

----------------
IN: 
0x00000000000c27ee:  jg     0xc280d

----------------
IN: 
0x00000000000c280d:  cmp    $0x73,%al
0x00000000000c280f:  je     0xc290f

----------------
IN: 
0x00000000000c2813:  jg     0xc2838

----------------
IN: 
0x00000000000c2838:  cmp    $0x75,%al
0x00000000000c283a:  je     0xc286a

----------------
IN: 
0x00000000000c283c:  cmp    $0x78,%al
0x00000000000c283e:  je     0xc2883

----------------
IN: 
0x00000000000c2883:  addr32 mov (%ebx),%eax
0x00000000000c2887:  addr32 mov %eax,-0x10(%ebp)
0x00000000000c288c:  test   %cl,%cl
0x00000000000c288e:  addr32 movsbl -0x11(%ebp),%ecx
0x00000000000c2894:  je     0xc28be

----------------
IN: 
0x00000000000c28be:  addr32 lea 0x4(%ebx),%esi
0x00000000000c28c3:  addr32 mov -0x10(%ebp),%eax
0x00000000000c28c8:  push   %ax
0x00000000000c28c9:  call   0xc11c9

----------------
IN: 
0x00000000000c11c9:  push   %ebp
0x00000000000c11cb:  mov    %esp,%ebp
0x00000000000c11ce:  push   %edi
0x00000000000c11d0:  push   %esi
0x00000000000c11d2:  push   %ebx
0x00000000000c11d4:  mov    %eax,%edi
0x00000000000c11d7:  mov    %cl,%al
0x00000000000c11d9:  mov    %edi,%ecx
0x00000000000c11dc:  mov    $0x1,%ebx
0x00000000000c11e2:  shr    $0x4,%ecx
0x00000000000c11e6:  je     0xc11ec

----------------
IN: 
0x00000000000c11ec:  mov    %edx,%esi
0x00000000000c11ef:  sub    %ebx,%esi
0x00000000000c11f2:  test   %esi,%esi
0x00000000000c11f5:  jle    0xc1201

----------------
IN: 
0x00000000000c11f7:  mov    %cs:-0x6faa,%dx
0x00000000000c11fc:  out    %al,(%dx)
0x00000000000c11fd:  dec    %esi
0x00000000000c11ff:  jmp    0xc11f2

----------------
IN: 
0x00000000000c11f2:  test   %esi,%esi
0x00000000000c11f5:  jle    0xc1201

----------------
IN: 
0x00000000000c1201:  mov    %ebx,%edx
0x00000000000c1204:  mov    %edi,%eax
0x00000000000c1207:  pop    %ebx
0x00000000000c1209:  pop    %esi
0x00000000000c120b:  pop    %edi
0x00000000000c120d:  pop    %ebp
0x00000000000c120f:  jmp    0xc1128

----------------
IN: 
0x00000000000c1128:  push   %ebp
0x00000000000c112a:  mov    %esp,%ebp
0x00000000000c112d:  push   %ebx
0x00000000000c112f:  mov    %eax,%ebx
0x00000000000c1132:  cmp    $0x4,%edx
0x00000000000c1136:  je     0xc118e

----------------
IN: 
0x00000000000c1138:  jg     0xc1148

----------------
IN: 
0x00000000000c113a:  cmp    $0x2,%edx
0x00000000000c113e:  je     0xc11ac

----------------
IN: 
0x00000000000c1140:  jg     0xc119d

----------------
IN: 
0x00000000000c1142:  dec    %edx
0x00000000000c1144:  je     0xc11bb

----------------
IN: 
0x00000000000c11bb:  mov    %ebx,%eax
0x00000000000c11be:  and    $0xf,%eax
0x00000000000c11c2:  pop    %ebx
0x00000000000c11c4:  pop    %ebp
0x00000000000c11c6:  jmp    0xc1105

----------------
IN: 
0x00000000000c1105:  push   %ebp
0x00000000000c1107:  mov    %esp,%ebp
0x00000000000c110a:  mov    %eax,%edx
0x00000000000c110d:  addr32 lea 0x57(%eax),%eax
0x00000000000c1112:  cmp    $0x9,%edx
0x00000000000c1116:  ja     0xc111d

----------------
IN: 
0x00000000000c1118:  addr32 lea 0x30(%edx),%eax
0x00000000000c111d:  mov    %cs:-0x6faa,%dx
0x00000000000c1122:  out    %al,(%dx)
0x00000000000c1123:  pop    %ebp
0x00000000000c1125:  ret    $0x2

----------------
IN: 
0x00000000000c28cc:  jmp    0xc2939

----------------
IN: 
0x00000000000c2939:  mov    %esi,%ebx
0x00000000000c293c:  addr32 lea 0x1(%edi),%eax
0x00000000000c2941:  addr32 mov %eax,0x8(%ebp)
0x00000000000c2946:  jmp    0xc275f

----------------
IN: 
0x00000000000c2949:  pop    %eax
0x00000000000c294b:  pop    %edx
0x00000000000c294d:  pop    %ebx
0x00000000000c294f:  pop    %esi
0x00000000000c2951:  pop    %edi
0x00000000000c2953:  pop    %ebp
0x00000000000c2955:  ret    $0x2

----------------
IN: 
0x00000000000c3fe7:  add    $0xc,%esp
0x00000000000c3feb:  mov    %ebx,%eax
0x00000000000c3fee:  push   %ax
0x00000000000c3fef:  call   0xc1252

----------------
IN: 
0x00000000000c1252:  push   %ebp
0x00000000000c1254:  mov    %esp,%ebp
0x00000000000c1257:  mov    %al,%dl
0x00000000000c1259:  inc    %al
0x00000000000c125b:  jne    0xc126a

----------------
IN: 
0x00000000000c126a:  mov    $0xfe0000,%eax
0x00000000000c1270:  cmp    $0x7,%dl
0x00000000000c1273:  ja     0xc129c

----------------
IN: 
0x00000000000c1275:  mov    $0x40,%eax
0x00000000000c127b:  mov    %ax,%es
0x00000000000c127d:  movzbl %dl,%edx
0x00000000000c1281:  addr32 mov %es:0x50(%edx,%edx,1),%cx
0x00000000000c1287:  xor    %eax,%eax
0x00000000000c128a:  mov    %cl,%al
0x00000000000c128c:  shr    $0x8,%cx
0x00000000000c128f:  mov    %cl,%ah
0x00000000000c1291:  shl    $0x10,%edx
0x00000000000c1295:  movzwl %ax,%eax
0x00000000000c1299:  or     %edx,%eax
0x00000000000c129c:  pop    %ebp
0x00000000000c129e:  ret    $0x2

----------------
IN: 
0x00000000000c3ff2:  mov    %eax,%ecx
0x00000000000c3ff5:  shr    $0x10,%ecx
0x00000000000c3ff9:  movzbl %ah,%edx
0x00000000000c3ffd:  addr32 lea -0xc(%ebp),%esp
0x00000000000c4002:  pop    %ebx
0x00000000000c4004:  pop    %esi
0x00000000000c4006:  pop    %edi
0x00000000000c4008:  pop    %ebp
0x00000000000c400a:  jmp    0xc12ee

----------------
IN: 
0x00000000000c12ee:  cmp    $0x7,%cl
0x00000000000c12f1:  ja     0xc137a

----------------
IN: 
0x00000000000c12f5:  push   %ebp
0x00000000000c12f7:  mov    %esp,%ebp
0x00000000000c12fa:  push   %edi
0x00000000000c12fc:  push   %esi
0x00000000000c12fe:  push   %ebx
0x00000000000c1300:  push   %ebx
0x00000000000c1302:  mov    $0x40,%edi
0x00000000000c1308:  mov    %di,%es
0x00000000000c130a:  movzbl %cl,%esi
0x00000000000c130e:  addr32 mov %esi,-0x10(%ebp)
0x00000000000c1313:  mov    %edx,%ebx
0x00000000000c1316:  shl    $0x8,%ebx
0x00000000000c131a:  movzbl %al,%esi
0x00000000000c131e:  or     %esi,%ebx
0x00000000000c1321:  addr32 mov -0x10(%ebp),%esi
0x00000000000c1326:  addr32 mov %bx,%es:0x50(%esi,%esi,1)
0x00000000000c132c:  mov    %di,%es
0x00000000000c132e:  mov    %es:0x62,%bl
0x00000000000c1333:  cmp    %bl,%cl
0x00000000000c1335:  jne    0xc1370

----------------
IN: 
0x00000000000c1337:  push   %ax
0x00000000000c1338:  call   0xc12a1

----------------
IN: 
0x00000000000c133b:  mov    %eax,%ebx
0x00000000000c133e:  push   %ax
0x00000000000c133f:  call   0xc06b0

----------------
IN: 
0x00000000000c1342:  mov    %eax,%ecx
0x00000000000c1345:  mov    $0x2,%esi
0x00000000000c134b:  mov    %ebx,%eax
0x00000000000c134e:  cltd   
0x00000000000c1350:  idiv   %esi
0x00000000000c1353:  mov    %eax,%ebx
0x00000000000c1356:  and    $0xff00,%eax
0x00000000000c135c:  or     $0xe,%eax
0x00000000000c1360:  mov    %ecx,%edx
0x00000000000c1363:  out    %ax,(%dx)
0x00000000000c1364:  mov    %ebx,%eax
0x00000000000c1367:  shl    $0x8,%eax
0x00000000000c136b:  or     $0xf,%eax
0x00000000000c136f:  out    %ax,(%dx)
0x00000000000c1370:  pop    %eax
0x00000000000c1372:  pop    %ebx
0x00000000000c1374:  pop    %esi
0x00000000000c1376:  pop    %edi
0x00000000000c1378:  pop    %ebp
0x00000000000c137a:  ret    $0x2

----------------
IN: 
0x00000000000c4dd2:  mov    %esp,%eax
0x00000000000c4dd5:  addr32 mov 0x2a(%eax),%ss

----------------
IN: 
0x00000000000c4dd9:  addr32 mov 0x26(%eax),%esp

----------------
IN: 
0x00000000000c4dde:  pop    %edx
0x00000000000c4de0:  pop    %dx
0x00000000000c4de1:  addr32 pushw 0x24(%eax)
0x00000000000c4de5:  addr32 pushl 0x20(%eax)
0x00000000000c4dea:  addr32 mov 0x4(%eax),%edi
0x00000000000c4def:  addr32 mov 0x8(%eax),%esi
0x00000000000c4df4:  addr32 mov 0xc(%eax),%ebp
0x00000000000c4df9:  addr32 mov 0x10(%eax),%ebx
0x00000000000c4dfe:  addr32 mov 0x14(%eax),%edx
0x00000000000c4e03:  addr32 mov 0x18(%eax),%ecx
0x00000000000c4e08:  addr32 mov 0x2(%eax),%es
0x00000000000c4e0c:  addr32 pushw (%eax)
0x00000000000c4e0f:  addr32 pushl 0x1c(%eax)
0x00000000000c4e14:  pop    %eax
0x00000000000c4e16:  pop    %ds
0x00000000000c4e17:  iret   

----------------
IN: 
0x0000000000007c62:  mov    $0xe,%ah
0x0000000000007c64:  mov    $0x0,%al
0x0000000000007c66:  lods   %ds:(%si),%al
0x0000000000007c67:  test   %al,%al
0x0000000000007c69:  je     0x7c6f

----------------
IN: 
0x0000000000007c6b:  int    $0x10

----------------
IN: 
0x00000000000c3e72:  cmp    $0x11,%al
0x00000000000c3e74:  je     0xc4445

----------------
IN: 
0x00000000000c3e78:  ja     0xc3eb0

----------------
IN: 
0x00000000000c3e7a:  cmp    $0xe,%al
0x00000000000c3e7c:  je     0xc4169

----------------
IN: 
0x00000000000c4169:  addr32 mov 0x1c(%ebx),%dl
0x00000000000c416d:  addr32 mov 0x10(%ebx),%al
0x00000000000c4171:  addr32 lea -0xc(%ebp),%esp
0x00000000000c4176:  pop    %ebx
0x00000000000c4178:  pop    %esi
0x00000000000c417a:  pop    %edi
0x00000000000c417c:  pop    %ebp
0x00000000000c417e:  jmp    0xc2531

----------------
IN: 
0x00000000000c2531:  push   %ebp
0x00000000000c2533:  mov    %esp,%ebp
0x00000000000c2536:  push   %ebx
0x00000000000c2538:  sub    $0x8,%esp
0x00000000000c253c:  mov    %al,%bl
0x00000000000c253e:  addr32 mov %edx,-0xc(%ebp)
0x00000000000c2543:  mov    $0xff,%eax
0x00000000000c2549:  push   %ax
0x00000000000c254a:  call   0xc1252

----------------
IN: 
0x00000000000c125d:  mov    $0x40,%eax
0x00000000000c1263:  mov    %ax,%es
0x00000000000c1265:  mov    %es:0x62,%dl
0x00000000000c126a:  mov    $0xfe0000,%eax
0x00000000000c1270:  cmp    $0x7,%dl
0x00000000000c1273:  ja     0xc129c

----------------
IN: 
0x00000000000c254d:  addr32 mov %eax,-0x8(%ebp)
0x00000000000c2552:  pushl  $0x0
0x00000000000c2555:  mov    %bl,%cl
0x00000000000c2557:  addr32 mov -0xc(%ebp),%edx
0x00000000000c255c:  addr32 lea -0x8(%ebp),%eax
0x00000000000c2561:  push   %ax
0x00000000000c2562:  call   0xc244c

----------------
IN: 
0x00000000000c244c:  push   %ebp
0x00000000000c244e:  mov    %esp,%ebp
0x00000000000c2451:  push   %edi
0x00000000000c2453:  push   %esi
0x00000000000c2455:  push   %ebx
0x00000000000c2457:  push   %ebx
0x00000000000c2459:  mov    %eax,%ebx
0x00000000000c245c:  cmp    $0x8,%dl
0x00000000000c245f:  je     0xc247a

----------------
IN: 
0x00000000000c2461:  ja     0xc246a

----------------
IN: 
0x00000000000c246a:  cmp    $0xa,%dl
0x00000000000c246d:  je     0xc2488

----------------
IN: 
0x00000000000c246f:  cmp    $0xd,%dl
0x00000000000c2472:  jne    0xc248e

----------------
IN: 
0x00000000000c248e:  addr32 mov 0x8(%ebp),%al
0x00000000000c2492:  push   %eax
0x00000000000c2494:  mov    %ebx,%eax
0x00000000000c2497:  push   %ax
0x00000000000c2498:  call   0xc22ba

----------------
IN: 
0x00000000000c22ba:  push   %ebp
0x00000000000c22bc:  mov    %esp,%ebp
0x00000000000c22bf:  push   %edi
0x00000000000c22c1:  push   %esi
0x00000000000c22c3:  push   %ebx
0x00000000000c22c5:  sub    $0xc,%esp
0x00000000000c22c9:  mov    %eax,%ebx
0x00000000000c22cc:  addr32 mov %dl,-0xd(%ebp)
0x00000000000c22d0:  mov    %ecx,%edi
0x00000000000c22d3:  addr32 mov (%eax),%al
0x00000000000c22d6:  addr32 mov %al,-0xe(%ebp)
0x00000000000c22da:  addr32 mov 0x1(%ebx),%dl
0x00000000000c22de:  addr32 mov %edx,-0x18(%ebp)
0x00000000000c22e3:  addr32 mov 0x2(%ebx),%cl
0x00000000000c22e7:  addr32 mov %ecx,-0x14(%ebp)
0x00000000000c22ec:  push   %ax
0x00000000000c22ed:  call   0xc0fc9

----------------
IN: 
0x00000000000c22f0:  mov    %eax,%esi
0x00000000000c22f3:  test   %eax,%eax
0x00000000000c22f6:  je     0xc235b

----------------
IN: 
0x00000000000c22f8:  addr32 mov %cs:(%eax),%al
0x00000000000c22fc:  test   %al,%al
0x00000000000c22fe:  addr32 mov -0x14(%ebp),%ecx
0x00000000000c2303:  addr32 mov -0x18(%ebp),%edx
0x00000000000c2308:  je     0xc2325

----------------
IN: 
0x00000000000c2325:  addr32 mov -0xe(%ebp),%al
0x00000000000c2329:  push   %ax
0x00000000000c232a:  call   0xc12a1

----------------
IN: 
0x00000000000c232d:  addr32 mov %cs:0xa(%esi),%dx
0x00000000000c2332:  addr32 cmpb $0x0,0x8(%ebp)
0x00000000000c2337:  je     0xc2351

----------------
IN: 
0x00000000000c2351:  mov    %dx,%es
0x00000000000c2353:  addr32 mov -0xd(%ebp),%cl
0x00000000000c2357:  addr32 mov %cl,%es:(%eax)
0x00000000000c235b:  addr32 mov (%ebx),%al
0x00000000000c235e:  inc    %eax
0x00000000000c2360:  addr32 mov %al,(%ebx)
0x00000000000c2363:  mov    $0x40,%edx
0x00000000000c2369:  mov    %dx,%es
0x00000000000c236b:  mov    %es:0x4a,%dx
0x00000000000c2370:  movzbl %al,%eax
0x00000000000c2374:  cmp    %dx,%ax
0x00000000000c2376:  jne    0xc2380

----------------
IN: 
0x00000000000c2380:  addr32 lea -0xc(%ebp),%esp
0x00000000000c2385:  pop    %ebx
0x00000000000c2387:  pop    %esi
0x00000000000c2389:  pop    %edi
0x00000000000c238b:  pop    %ebp
0x00000000000c238d:  ret    $0x2

----------------
IN: 
0x00000000000c249b:  pop    %eax
0x00000000000c249d:  mov    $0x40,%edi
0x00000000000c24a3:  mov    %di,%es
0x00000000000c24a5:  mov    %es:0x84,%al
0x00000000000c24a9:  mov    %al,%cl
0x00000000000c24ab:  addr32 mov %al,-0xd(%ebp)
0x00000000000c24af:  addr32 mov 0x1(%ebx),%al
0x00000000000c24b3:  cmp    %al,%cl
0x00000000000c24b5:  jae    0xc2521

----------------
IN: 
0x00000000000c2521:  addr32 lea -0xc(%ebp),%esp
0x00000000000c2526:  pop    %ebx
0x00000000000c2528:  pop    %esi
0x00000000000c252a:  pop    %edi
0x00000000000c252c:  pop    %ebp
0x00000000000c252e:  ret    $0x2

----------------
IN: 
0x00000000000c2565:  pop    %ebx
0x00000000000c2567:  addr32 mov -0x6(%ebp),%cl
0x00000000000c256b:  addr32 mov -0x7(%ebp),%dl
0x00000000000c256f:  addr32 mov -0x8(%ebp),%al
0x00000000000c2573:  push   %ax
0x00000000000c2574:  call   0xc12ee

----------------
IN: 
0x00000000000c2577:  addr32 mov -0x4(%ebp),%ebx
0x00000000000c257c:  mov    %ebp,%esp
0x00000000000c257f:  pop    %ebp
0x00000000000c2581:  ret    $0x2

----------------
IN: 
0x0000000000007c6d:  jmp    0x7c66

----------------
IN: 
0x0000000000007c66:  lods   %ds:(%si),%al
0x0000000000007c67:  test   %al,%al
0x0000000000007c69:  je     0x7c6f

----------------
IN: 
0x0000000000007c6f:  ret    

----------------
IN: 
0x0000000000007c9d:  cld    
0x0000000000007c9e:  movw   $0x600,0x7cba
0x0000000000007ca4:  call   0x7c79

----------------
IN: 
0x0000000000007c79:  push   %ax
0x0000000000007c7a:  push   %dx
0x0000000000007c7b:  push   %si
0x0000000000007c7c:  mov    $0xe2e,%ax
0x0000000000007c7f:  int    $0x10

----------------
IN: 
0x0000000000007c81:  mov    $0x0,%ax
0x0000000000007c84:  mov    $0x80,%dl
0x0000000000007c86:  int    $0x13

----------------
IN: 
0x00000000000fe3fe:  jmp    0xfd649

----------------
IN: 
0x00000000000fd649:  pushl  $0xd01e
0x00000000000fd64f:  jmp    0xfd5a6

----------------
IN: 
0x00000000000fd5a6:  cli    
0x00000000000fd5a7:  cld    
0x00000000000fd5a8:  push   %ds
0x00000000000fd5a9:  push   %eax
0x00000000000fd5ab:  mov    $0xe000,%eax
0x00000000000fd5b1:  mov    %ax,%ds
0x00000000000fd5b3:  mov    0xf7f0,%eax
0x00000000000fd5b7:  sub    $0x2e,%eax
0x00000000000fd5bb:  addr32 popl 0x1c(%eax)
0x00000000000fd5c0:  addr32 popw (%eax)
0x00000000000fd5c3:  addr32 mov %edi,0x4(%eax)
0x00000000000fd5c8:  addr32 mov %esi,0x8(%eax)
0x00000000000fd5cd:  addr32 mov %ebp,0xc(%eax)
0x00000000000fd5d2:  addr32 mov %ebx,0x10(%eax)
0x00000000000fd5d7:  addr32 mov %edx,0x14(%eax)
0x00000000000fd5dc:  addr32 mov %ecx,0x18(%eax)
0x00000000000fd5e1:  pop    %ecx
0x00000000000fd5e3:  addr32 mov %es,0x2(%eax)
0x00000000000fd5e7:  addr32 mov %esp,0x26(%eax)
0x00000000000fd5ec:  addr32 mov %ss,0x2a(%eax)
0x00000000000fd5f0:  addr32 popl 0x20(%eax)
0x00000000000fd5f5:  addr32 popw 0x24(%eax)
0x00000000000fd5f9:  mov    %ds,%dx
0x00000000000fd5fb:  mov    %dx,%ss

----------------
IN: 
0x00000000000fd5fd:  mov    %eax,%esp

----------------
IN: 
0x00000000000fd600:  calll  *%ecx

----------------
IN: 
0x00000000000fd01e:  push   %esi
0x00000000000fd020:  push   %ebx
0x00000000000fd022:  addr32 mov 0x14(%eax),%dl
0x00000000000fd026:  addr32 cmpb $0x4b,0x1d(%eax)
0x00000000000fd02b:  jne    0xfd164

----------------
IN: 
0x00000000000fd164:  mov    $0xe000,%ecx
0x00000000000fd16a:  movzwl %cx,%ecx
0x00000000000fd16e:  mov    %cx,%es
0x00000000000fd170:  mov    %es:-0x842,%bl
0x00000000000fd175:  test   %bl,%bl
0x00000000000fd177:  je     0xfd1b3

----------------
IN: 
0x00000000000fd1b3:  movzbl %dl,%edx
0x00000000000fd1b7:  pop    %ebx
0x00000000000fd1b9:  pop    %esi
0x00000000000fd1bb:  jmp    0xfeed2

----------------
IN: 
0x00000000000feed2:  test   %dl,%dl
0x00000000000feed4:  js     0xfef0c

----------------
IN: 
0x00000000000fef0c:  cmp    $0xdf,%dl
0x00000000000fef0f:  jbe    0xfef2a

----------------
IN: 
0x00000000000fef2a:  add    $0xffffff80,%edx
0x00000000000fef2e:  cmp    $0xf,%dl
0x00000000000fef31:  ja     0xfef49

----------------
IN: 
0x00000000000fef33:  movzbl %dl,%edx
0x00000000000fef37:  addr32 mov %cs:0x6b4c(,%edx,4),%edx
0x00000000000fef41:  test   %edx,%edx
0x00000000000fef44:  je     0xfef49

----------------
IN: 
0x00000000000fef46:  jmp    0xfb50c

----------------
IN: 
0x00000000000fb50c:  push   %ebx
0x00000000000fb50e:  mov    %eax,%ebx
0x00000000000fb511:  mov    $0x40,%ecx
0x00000000000fb517:  mov    %cx,%es
0x00000000000fb519:  xor    %eax,%eax
0x00000000000fb51c:  mov    %al,%es:0x8e
0x00000000000fb520:  addr32 mov 0x1d(%ebx),%al
0x00000000000fb524:  cmp    $0x14,%al
0x00000000000fb526:  je     0xfb670

----------------
IN: 
0x00000000000fb52a:  ja     0xfb598

----------------
IN: 
0x00000000000fb52c:  cmp    $0x5,%al
0x00000000000fb52e:  je     0xfb646

----------------
IN: 
0x00000000000fb532:  ja     0xfb560

----------------
IN: 
0x00000000000fb534:  cmp    $0x2,%al
0x00000000000fb536:  je     0xfb630

----------------
IN: 
0x00000000000fb53a:  ja     0xfb54b

----------------
IN: 
0x00000000000fb53c:  test   %al,%al
0x00000000000fb53e:  je     0xfb5fb

----------------
IN: 
0x00000000000fb5fb:  mov    %ebx,%eax
0x00000000000fb5fe:  pop    %ebx
0x00000000000fb600:  jmp    0xf7ecf

----------------
IN: 
0x00000000000f7ecf:  push   %ebx
0x00000000000f7ed1:  sub    $0x14,%esp
0x00000000000f7ed5:  mov    %eax,%ebx
0x00000000000f7ed8:  addr32 mov %edx,0xc(%esp)
0x00000000000f7ede:  addr32 movb $0x0,0x12(%esp)
0x00000000000f7ee4:  mov    %esp,%eax
0x00000000000f7ee7:  calll  0xf76da

----------------
IN: 
0x00000000000f76da:  mov    %ss,%dx
0x00000000000f76dc:  movzwl %dx,%edx
0x00000000000f76e0:  mov    $0xbc4a,%ecx
0x00000000000f76e6:  jmp    0xfe694

----------------
IN: 
0x00000000000fe694:  push   %edi
0x00000000000fe696:  push   %esi
0x00000000000fe698:  push   %ebx
0x00000000000fe69a:  push   %ebx
0x00000000000fe69c:  mov    %eax,%ebx
0x00000000000fe69f:  addr32 mov %edx,(%esp)
0x00000000000fe6a4:  mov    %ecx,%esi
0x00000000000fe6a7:  calll  0xf74e1

----------------
IN: 
0x00000000000f74e1:  mov    %ss,%dx
0x00000000000f74e3:  movzwl %dx,%edx
0x00000000000f74e7:  xor    %eax,%eax
0x00000000000f74ea:  cmp    $0xe000,%edx
0x00000000000f74f1:  jne    0xf7503

----------------
IN: 
0x00000000000f74f3:  mov    %esp,%eax
0x00000000000f74f6:  cmp    $0xf7f8,%eax
0x00000000000f74fc:  seta   %al
0x00000000000f74ff:  movzbl %al,%eax
0x00000000000f7503:  retl   

----------------
IN: 
0x00000000000fe6ad:  test   %eax,%eax
0x00000000000fe6b0:  addr32 mov (%esp),%edx
0x00000000000fe6b5:  mov    %ebx,%eax
0x00000000000fe6b8:  je     0xfe6bf

----------------
IN: 
0x00000000000fe6ba:  calll  *%esi

----------------
IN: 
0x00000000000fbc4a:  push   %ebp
0x00000000000fbc4c:  push   %edi
0x00000000000fbc4e:  push   %esi
0x00000000000fbc50:  push   %ebx
0x00000000000fbc52:  sub    $0x14,%esp
0x00000000000fbc56:  mov    %eax,%ebp
0x00000000000fbc59:  mov    %edx,%ebx
0x00000000000fbc5c:  mov    %ss,%ax
0x00000000000fbc5e:  mov    %ax,%es
0x00000000000fbc60:  mov    $0x14,%ecx
0x00000000000fbc66:  mov    %ebp,%esi
0x00000000000fbc69:  mov    %esp,%edi
0x00000000000fbc6c:  mov    %ds,%ax
0x00000000000fbc6e:  mov    %dx,%ds
0x00000000000fbc70:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000fbc70:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x00000000000fbc72:  mov    %ax,%ds
0x00000000000fbc74:  mov    %esp,%eax
0x00000000000fbc77:  calll  0xfb8a1

----------------
IN: 
0x00000000000fb8a1:  push   %ebp
0x00000000000fb8a3:  push   %edi
0x00000000000fb8a5:  push   %esi
0x00000000000fb8a7:  push   %ebx
0x00000000000fb8a9:  sub    $0x8,%esp
0x00000000000fb8ad:  mov    %eax,%esi
0x00000000000fb8b0:  addr32 mov 0x10(%eax),%edi
0x00000000000fb8b5:  addr32 mov 0xc(%eax),%ebx
0x00000000000fb8ba:  addr32 mov %cs:-0xf0000(%ebx),%al
0x00000000000fb8c2:  cmp    $0x60,%al
0x00000000000fb8c4:  je     0xfbbf4

----------------
IN: 
0x00000000000fb8c8:  ja     0xfb8fb

----------------
IN: 
0x00000000000fb8ca:  cmp    $0x30,%al
0x00000000000fb8cc:  je     0xfbc39

----------------
IN: 
0x00000000000fb8d0:  ja     0xfb8e6

----------------
IN: 
0x00000000000fb8d2:  cmp    $0x20,%al
0x00000000000fb8d4:  je     0xfb9ca

----------------
IN: 
0x00000000000fb9ca:  addr32 mov 0x12(%esi),%al
0x00000000000fb9ce:  cmp    $0x5,%al
0x00000000000fb9d0:  ja     0xfb9e5

----------------
IN: 
0x00000000000fb9d2:  cmp    $0x4,%al
0x00000000000fb9d4:  jae    0xfbc39

----------------
IN: 
0x00000000000fb9d8:  cmp    $0x2,%al
0x00000000000fb9da:  je     0xfb9f4

----------------
IN: 
0x00000000000fb9dc:  ja     0xfb9f9

----------------
IN: 
0x00000000000fb9de:  test   %al,%al
0x00000000000fb9e0:  je     0xfba0b

----------------
IN: 
0x00000000000fba0b:  addr32 mov %cs:-0xeffdc(%ebx),%eax
0x00000000000fba14:  addr32 mov %cs:-0xeffd8(%ebx),%cl
0x00000000000fba1c:  addr32 mov %ecx,0x4(%esp)
0x00000000000fba22:  addr32 mov %cs:-0xf0000(%eax),%di
0x00000000000fba2a:  addr32 mov %cs:-0xefffe(%eax),%ax
0x00000000000fba32:  addr32 lea 0x2(%eax),%edx
0x00000000000fba37:  addr32 mov %dx,0x2(%esp)
0x00000000000fba3c:  mov    $0xe,%al
0x00000000000fba3e:  out    %al,(%dx)
0x00000000000fba3f:  mov    $0x5,%eax
0x00000000000fba45:  calll  0xf8475

----------------
IN: 
0x00000000000f8475:  mov    %cs:0x6904,%edx
0x00000000000f847b:  imul   %eax,%edx
0x00000000000f847f:  addr32 lea 0x3e7(%edx),%eax
0x00000000000f8487:  mov    $0x3e8,%ecx
0x00000000000f848d:  xor    %edx,%edx
0x00000000000f8490:  div    %ecx
0x00000000000f8493:  jmp    0xf8451

----------------
IN: 
0x00000000000f8451:  push   %ebx
0x00000000000f8453:  mov    %eax,%ebx
0x00000000000f8456:  calll  0xf8386

----------------
IN: 
0x00000000000f8386:  mov    %cs:0x6900,%dx
0x00000000000f838b:  test   %dx,%dx
0x00000000000f838d:  jne    0xf83aa

----------------
IN: 
0x00000000000f83aa:  push   %esi
0x00000000000f83ac:  push   %ebx
0x00000000000f83ae:  cmp    $0x40,%dx
0x00000000000f83b1:  je     0xf83e9

----------------
IN: 
0x00000000000f83b3:  in     (%dx),%eax
0x00000000000f83b5:  mov    $0xe000,%edx
0x00000000000f83bb:  movzwl %dx,%edx
0x00000000000f83bf:  mov    %dx,%es
0x00000000000f83c1:  mov    %es:-0x858,%ecx
0x00000000000f83c7:  and    $0xffffff,%eax
0x00000000000f83cd:  mov    %ecx,%ebx
0x00000000000f83d0:  and    $0xff000000,%ebx
0x00000000000f83d7:  or     %ebx,%eax
0x00000000000f83da:  cmp    %ecx,%eax
0x00000000000f83dd:  jae    0xf83e5

----------------
IN: 
0x00000000000f83e5:  mov    %dx,%es
0x00000000000f83e7:  jmp    0xf842a

----------------
IN: 
0x00000000000f842a:  mov    %eax,%es:0xf7a8
0x00000000000f842f:  pop    %ebx
0x00000000000f8431:  pop    %esi
0x00000000000f8433:  retl   

----------------
IN: 
0x00000000000f845c:  add    %eax,%ebx
0x00000000000f845f:  mov    %ebx,%eax
0x00000000000f8462:  calll  0xf8435

----------------
IN: 
0x00000000000f8435:  push   %ebx
0x00000000000f8437:  mov    %eax,%ebx
0x00000000000f843a:  calll  0xf8386

----------------
IN: 
0x00000000000f8440:  sub    %ebx,%eax
0x00000000000f8443:  test   %eax,%eax
0x00000000000f8446:  setg   %al
0x00000000000f8449:  movzbl %al,%eax
0x00000000000f844d:  pop    %ebx
0x00000000000f844f:  retl   

----------------
IN: 
0x00000000000f8468:  test   %eax,%eax
0x00000000000f846b:  jne    0xf8471

----------------
IN: 
0x00000000000f8471:  pop    %ebx
0x00000000000f8473:  retl   

----------------
IN: 
0x00000000000fba4b:  mov    $0xa,%al
0x00000000000fba4d:  addr32 mov 0x2(%esp),%dx
0x00000000000fba52:  out    %al,(%dx)
0x00000000000fba53:  mov    %cs:0x6904,%eax
0x00000000000fba58:  add    %eax,%eax
0x00000000000fba5b:  calll  0xfe6ff

----------------
IN: 
0x00000000000fe6ff:  push   %ebx
0x00000000000fe701:  mov    %eax,%ebx
0x00000000000fe704:  calll  0xf8386

----------------
IN: 
0x00000000000fe70a:  add    %eax,%ebx
0x00000000000fe70d:  mov    %ebx,%eax
0x00000000000fe710:  calll  0xf8435

----------------
IN: 
0x00000000000fe716:  test   %eax,%eax
0x00000000000fe719:  jne    0xfe723

----------------
IN: 
0x00000000000fe71b:  calll  0xf77f4

----------------
IN: 
0x00000000000f77f4:  calll  0xf74e1

----------------
IN: 
0x00000000000f77fa:  test   %eax,%eax
0x00000000000f77fd:  je     0xf780e

----------------
IN: 
0x00000000000f77ff:  mov    $0x77f4,%ecx
0x00000000000f7805:  xor    %edx,%edx
0x00000000000f7808:  xor    %eax,%eax
0x00000000000f780b:  jmp    0xf76e9

----------------
IN: 
0x00000000000f76e9:  push   %edi
0x00000000000f76eb:  push   %esi
0x00000000000f76ed:  push   %ebx
0x00000000000f76ef:  push   %ebx
0x00000000000f76f1:  mov    %eax,%ebx
0x00000000000f76f4:  addr32 mov %edx,(%esp)
0x00000000000f76f9:  mov    %ecx,%esi
0x00000000000f76fc:  calll  0xf74e1

----------------
IN: 
0x00000000000f7702:  test   %eax,%eax
0x00000000000f7705:  addr32 mov (%esp),%edx
0x00000000000f770a:  mov    %ebx,%eax
0x00000000000f770d:  jne    0xf7714

----------------
IN: 
0x00000000000f7714:  mov    %esi,%ecx
0x00000000000f7717:  mov    -0x810,%esi
0x00000000000f771c:  mov    %ss,%bx
0x00000000000f771e:  mov    %esp,-0x810
0x00000000000f7723:  addr32 mov -0x4(%esi),%edi
0x00000000000f7728:  mov    %di,%ss

----------------
IN: 
0x00000000000f772a:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x00000000000f772e:  mov    %di,%ds
0x00000000000f7730:  calll  *%ecx

----------------
IN: 
0x00000000000f7503:  retl   

----------------
IN: 
0x00000000000f780e:  sti    

----------------
IN: 
0x00000000000f780f:  nop    

----------------
IN: 
0x00000000000f7810:  pause  

----------------
IN: 
0x00000000000f7812:  cli    
0x00000000000f7813:  cld    
0x00000000000f7814:  retl   

----------------
IN: 
0x00000000000f7733:  mov    %bx,%ds
0x00000000000f7735:  mov    %bx,%ss

----------------
IN: 
0x00000000000f7737:  mov    -0x810,%esp

----------------
IN: 
0x00000000000f773c:  mov    %esi,-0x810
0x00000000000f7741:  pop    %edx
0x00000000000f7743:  pop    %ebx
0x00000000000f7745:  pop    %esi
0x00000000000f7747:  pop    %edi
0x00000000000f7749:  retl   

----------------
IN: 
0x00000000000fe721:  jmp    0xfe70d

----------------
IN: 
0x00000000000fe70d:  mov    %ebx,%eax
0x00000000000fe710:  calll  0xf8435

----------------
IN: 
0x00000000000fe723:  pop    %ebx
0x00000000000fe725:  retl   

----------------
IN: 
0x00000000000fba61:  movzwl %di,%esi
0x00000000000fba65:  mov    %esi,%eax
0x00000000000fba68:  calll  0xf9149

----------------
IN: 
0x00000000000f9149:  movzwl %ax,%ecx
0x00000000000f914d:  xor    %edx,%edx
0x00000000000f9150:  mov    $0x80,%eax
0x00000000000f9156:  jmp    0xf90d6

----------------
IN: 
0x00000000000f90d6:  push   %ebp
0x00000000000f90d8:  push   %edi
0x00000000000f90da:  push   %esi
0x00000000000f90dc:  push   %ebx
0x00000000000f90de:  mov    %eax,%esi
0x00000000000f90e1:  mov    %edx,%edi
0x00000000000f90e4:  mov    %ecx,%ebp
0x00000000000f90e7:  mov    $0x7d00,%eax
0x00000000000f90ed:  calll  0xf84b7

----------------
IN: 
0x00000000000f84b7:  push   %ebx
0x00000000000f84b9:  mov    %eax,%ebx
0x00000000000f84bc:  calll  0xf8386

----------------
IN: 
0x00000000000f84c2:  mov    %cs:0x6904,%edx
0x00000000000f84c8:  imul   %ebx,%edx
0x00000000000f84cc:  add    %edx,%eax
0x00000000000f84cf:  pop    %ebx
0x00000000000f84d1:  retl   

----------------
IN: 
0x00000000000f90f3:  mov    %eax,%ebx
0x00000000000f90f6:  add    $0x7,%ebp
0x00000000000f90fa:  mov    %ebp,%edx
0x00000000000f90fd:  in     (%dx),%al
0x00000000000f90fe:  mov    %esi,%edx
0x00000000000f9101:  and    %eax,%edx
0x00000000000f9104:  mov    %edi,%ecx
0x00000000000f9107:  cmp    %cl,%dl
0x00000000000f9109:  jne    0xf9111

----------------
IN: 
0x00000000000f910b:  movzbl %al,%eax
0x00000000000f910f:  jmp    0xf913f

----------------
IN: 
0x00000000000f913f:  pop    %ebx
0x00000000000f9141:  pop    %esi
0x00000000000f9143:  pop    %edi
0x00000000000f9145:  pop    %ebp
0x00000000000f9147:  retl   

----------------
IN: 
0x00000000000fba6e:  test   %eax,%eax
0x00000000000fba71:  js     0xfbaff

----------------
IN: 
0x00000000000fba75:  addr32 mov 0x4(%esp),%ecx
0x00000000000fba7b:  test   %cl,%cl
0x00000000000fba7d:  je     0xfbad6

----------------
IN: 
0x00000000000fba7f:  mov    $0x7d00,%eax
0x00000000000fba85:  calll  0xf84b7

----------------
IN: 
0x00000000000fba8b:  mov    %eax,%ebp
0x00000000000fba8e:  add    $0x6,%edi
0x00000000000fba92:  mov    $0xb0,%al
0x00000000000fba94:  mov    %edi,%edx
0x00000000000fba97:  out    %al,(%dx)
0x00000000000fba98:  calll  0xf8496

----------------
IN: 
0x00000000000f8496:  mov    %cs:0x6904,%eax
0x00000000000f849b:  imul   $0x190,%eax,%eax
0x00000000000f84a2:  add    $0xf423f,%eax
0x00000000000f84a8:  mov    $0xf4240,%ecx
0x00000000000f84ae:  xor    %edx,%edx
0x00000000000f84b1:  div    %ecx
0x00000000000f84b4:  jmp    0xf8451

----------------
IN: 
0x00000000000fba9e:  mov    %esi,%eax
0x00000000000fbaa1:  calll  0xf9149

----------------
IN: 
0x00000000000fbaa7:  test   %eax,%eax
0x00000000000fbaaa:  js     0xfbaff

----------------
IN: 
0x00000000000fbaac:  mov    %edi,%edx
0x00000000000fbaaf:  in     (%dx),%al
0x00000000000fbab0:  cmp    $0xb0,%al
0x00000000000fbab2:  je     0xfbade

----------------
IN: 
0x00000000000fbade:  addr32 mov %cs:-0xf0000(%ebx),%al
0x00000000000fbae6:  cmp    $0x20,%al
0x00000000000fbae8:  jne    0xfbaff

----------------
IN: 
0x00000000000fbaea:  mov    %esi,%ecx
0x00000000000fbaed:  mov    $0x40,%edx
0x00000000000fbaf3:  mov    $0x40,%eax
0x00000000000fbaf9:  calll  0xf90d6

----------------
IN: 
0x00000000000fbaff:  mov    $0x8,%al
0x00000000000fbb01:  addr32 mov 0x2(%esp),%dx
0x00000000000fbb06:  out    %al,(%dx)
0x00000000000fbb07:  jmp    0xfbc39

----------------
IN: 
0x00000000000fbc39:  xor    %eax,%eax
0x00000000000fbc3c:  add    $0x8,%esp
0x00000000000fbc40:  pop    %ebx
0x00000000000fbc42:  pop    %esi
0x00000000000fbc44:  pop    %edi
0x00000000000fbc46:  pop    %ebp
0x00000000000fbc48:  retl   

----------------
IN: 
0x00000000000fbc7d:  mov    %bx,%es
0x00000000000fbc7f:  addr32 mov 0x10(%esp),%edx
0x00000000000fbc85:  addr32 mov %dx,%es:0x10(%ebp)
0x00000000000fbc8a:  add    $0x14,%esp
0x00000000000fbc8e:  pop    %ebx
0x00000000000fbc90:  pop    %esi
0x00000000000fbc92:  pop    %edi
0x00000000000fbc94:  pop    %ebp
0x00000000000fbc96:  retl   

----------------
IN: 
0x00000000000fe6bd:  jmp    0xfe6e8

----------------
IN: 
0x00000000000fe6e8:  pop    %edx
0x00000000000fe6ea:  pop    %ebx
0x00000000000fe6ec:  pop    %esi
0x00000000000fe6ee:  pop    %edi
0x00000000000fe6f0:  retl   

----------------
IN: 
0x00000000000f7eed:  mov    %eax,%edx
0x00000000000f7ef0:  or     $0x8f,%dh
0x00000000000f7ef3:  mov    %ebx,%eax
0x00000000000f7ef6:  calll  0xf7dd8

----------------
IN: 
0x00000000000f7dd8:  mov    $0x40,%ecx
0x00000000000f7dde:  addr32 cmpb $0x0,0x14(%eax)
0x00000000000f7de3:  js     0xf7dee

----------------
IN: 
0x00000000000f7dee:  mov    %cx,%es
0x00000000000f7df0:  mov    %dl,%es:0x74
0x00000000000f7df5:  test   %dl,%dl
0x00000000000f7df7:  je     0xf7e04

----------------
IN: 
0x00000000000f7e04:  jmp    0xfff45

----------------
IN: 
0x00000000000fff45:  addr32 movb $0x0,0x1d(%eax)
0x00000000000fff4a:  addr32 andw $0xfffffffe,0x24(%eax)
0x00000000000fff4f:  retl   

----------------
IN: 
0x00000000000f7efc:  add    $0x14,%esp
0x00000000000f7f00:  pop    %ebx
0x00000000000f7f02:  retl   

----------------
IN: 
0x00000000000fd603:  mov    %esp,%eax
0x00000000000fd606:  addr32 mov 0x2a(%eax),%ss

----------------
IN: 
0x00000000000fd60a:  addr32 mov 0x26(%eax),%esp

----------------
IN: 
0x00000000000fd60f:  pop    %edx
0x00000000000fd611:  pop    %dx
0x00000000000fd612:  addr32 pushw 0x24(%eax)
0x00000000000fd616:  addr32 pushl 0x20(%eax)
0x00000000000fd61b:  addr32 mov 0x4(%eax),%edi
0x00000000000fd620:  addr32 mov 0x8(%eax),%esi
0x00000000000fd625:  addr32 mov 0xc(%eax),%ebp
0x00000000000fd62a:  addr32 mov 0x10(%eax),%ebx
0x00000000000fd62f:  addr32 mov 0x14(%eax),%edx
0x00000000000fd634:  addr32 mov 0x18(%eax),%ecx
0x00000000000fd639:  addr32 mov 0x2(%eax),%es
0x00000000000fd63d:  addr32 pushw (%eax)
0x00000000000fd640:  addr32 pushl 0x1c(%eax)
0x00000000000fd645:  pop    %eax
0x00000000000fd647:  pop    %ds
0x00000000000fd648:  iret   

----------------
IN: 
0x0000000000007c88:  mov    $0x7cb6,%si
0x0000000000007c8b:  mov    $0x42,%ah
0x0000000000007c8d:  mov    $0x80,%dl
0x0000000000007c8f:  int    $0x13

----------------
IN: 
0x00000000000fb598:  cmp    $0x44,%al
0x00000000000fb59a:  je     0xfb6c5

----------------
IN: 
0x00000000000fb59e:  ja     0xfb5cc

----------------
IN: 
0x00000000000fb5a0:  cmp    $0x41,%al
0x00000000000fb5a2:  je     0xfb699

----------------
IN: 
0x00000000000fb5a6:  ja     0xfb5b7

----------------
IN: 
0x00000000000fb5b7:  cmp    $0x42,%al
0x00000000000fb5b9:  je     0xfb6bc

----------------
IN: 
0x00000000000fb6bc:  mov    $0x2,%ecx
0x00000000000fb6c2:  jmp    0xfb7a2

----------------
IN: 
0x00000000000fb7a2:  mov    %ebx,%eax
0x00000000000fb7a5:  pop    %ebx
0x00000000000fb7a7:  jmp    0xf7e07

----------------
IN: 
0x00000000000f7e07:  push   %edi
0x00000000000f7e09:  push   %esi
0x00000000000f7e0b:  push   %ebx
0x00000000000f7e0d:  sub    $0x14,%esp
0x00000000000f7e11:  mov    %eax,%ebx
0x00000000000f7e14:  addr32 movzwl 0x8(%eax),%esi
0x00000000000f7e1a:  addr32 mov (%eax),%es
0x00000000000f7e1d:  addr32 mov %es:0x8(%esi),%eax
0x00000000000f7e23:  addr32 mov %es:0xc(%esi),%edi
0x00000000000f7e29:  addr32 mov %eax,(%esp)
0x00000000000f7e2e:  addr32 mov %edi,0x4(%esp)
0x00000000000f7e34:  addr32 mov %cl,0x12(%esp)
0x00000000000f7e39:  addr32 mov %edx,0xc(%esp)
0x00000000000f7e3f:  addr32 mov %cs:-0xefff4(%edx),%ecx
0x00000000000f7e48:  addr32 mov %cs:-0xefff0(%edx),%edx
0x00000000000f7e51:  cmp    %edx,%edi
0x00000000000f7e54:  jb     0xf7e65

----------------
IN: 
0x00000000000f7e56:  ja     0xf7e5d

----------------
IN: 
0x00000000000f7e58:  cmp    %ecx,%eax
0x00000000000f7e5b:  jb     0xf7e65

----------------
IN: 
0x00000000000f7e65:  addr32 mov (%ebx),%es
0x00000000000f7e68:  addr32 mov %es:0x4(%esi),%edx
0x00000000000f7e6e:  mov    %edx,%eax
0x00000000000f7e71:  shr    $0x10,%eax
0x00000000000f7e75:  shl    $0x4,%eax
0x00000000000f7e79:  movzwl %dx,%edx
0x00000000000f7e7d:  add    %edx,%eax
0x00000000000f7e80:  addr32 mov %eax,0x8(%esp)
0x00000000000f7e86:  addr32 mov (%ebx),%es
0x00000000000f7e89:  addr32 mov %es:0x2(%esi),%ax
0x00000000000f7e8e:  addr32 mov %ax,0x10(%esp)
0x00000000000f7e93:  mov    $0x7700,%edx
0x00000000000f7e99:  test   %ax,%ax
0x00000000000f7e9b:  je     0xf7eba

----------------
IN: 
0x00000000000f7e9d:  mov    %esp,%eax
0x00000000000f7ea0:  calll  0xf76da

----------------
IN: 
0x00000000000fb9f4:  xor    %edx,%edx
0x00000000000fb9f7:  jmp    0xfb9ff

----------------
IN: 
0x00000000000fb9ff:  mov    %esi,%eax
0x00000000000fba02:  calll  0xf9299

----------------
IN: 
0x00000000000f9299:  push   %ebp
0x00000000000f929b:  push   %edi
0x00000000000f929d:  push   %esi
0x00000000000f929f:  push   %ebx
0x00000000000f92a1:  sub    $0xc,%esp
0x00000000000f92a5:  mov    %eax,%edi
0x00000000000f92a8:  mov    %edx,%ebp
0x00000000000f92ab:  addr32 mov (%eax),%ebx
0x00000000000f92af:  addr32 mov 0x4(%eax),%esi
0x00000000000f92b4:  mov    $0xc,%ecx
0x00000000000f92ba:  xor    %edx,%edx
0x00000000000f92bd:  mov    %esp,%eax
0x00000000000f92c0:  calll  0xf7505

----------------
IN: 
0x00000000000f7505:  test   %ecx,%ecx
0x00000000000f7508:  je     0xf7512

----------------
IN: 
0x00000000000f750a:  dec    %ecx
0x00000000000f750c:  addr32 mov %dl,(%eax,%ecx,1)
0x00000000000f7510:  jmp    0xf7505

----------------
IN: 
0x00000000000f7512:  retl   

----------------
IN: 
0x00000000000f92c6:  addr32 mov 0x10(%edi),%ecx
0x00000000000f92cb:  cmp    $0xff,%cx
0x00000000000f92cf:  ja     0xf92ec

----------------
IN: 
0x00000000000f92d1:  movzwl %cx,%eax
0x00000000000f92d5:  xor    %edx,%edx
0x00000000000f92d8:  add    %ebx,%eax
0x00000000000f92db:  adc    %esi,%edx
0x00000000000f92de:  cmp    $0x0,%edx
0x00000000000f92e2:  ja     0xf92ec

----------------
IN: 
0x00000000000f92e4:  cmp    $0xfffffff,%eax
0x00000000000f92ea:  jbe    0xf933c

----------------
IN: 
0x00000000000f933c:  cmp    $0x1,%ebp
0x00000000000f9340:  sbb    %eax,%eax
0x00000000000f9343:  and    $0xfffffff0,%eax
0x00000000000f9347:  add    $0x30,%eax
0x00000000000f934b:  addr32 mov %al,0x6(%esp)
0x00000000000f9350:  addr32 mov %cl,0x1(%esp)
0x00000000000f9355:  addr32 mov %bl,0x2(%esp)
0x00000000000f935a:  mov    %ebx,%eax
0x00000000000f935d:  mov    %esi,%edx
0x00000000000f9360:  shrd   $0x8,%edx,%eax
0x00000000000f9365:  shr    $0x8,%edx
0x00000000000f9369:  addr32 mov %al,0x3(%esp)
0x00000000000f936e:  mov    %ebx,%eax
0x00000000000f9371:  mov    %esi,%edx
0x00000000000f9374:  shrd   $0x10,%edx,%eax
0x00000000000f9379:  shr    $0x10,%edx
0x00000000000f937d:  addr32 mov %al,0x4(%esp)
0x00000000000f9382:  mov    %ebx,%eax
0x00000000000f9385:  mov    %esi,%edx
0x00000000000f9388:  shrd   $0x18,%edx,%eax
0x00000000000f938d:  shr    $0x18,%edx
0x00000000000f9391:  mov    %al,%bl
0x00000000000f9393:  and    $0xf,%ebx
0x00000000000f9397:  or     $0x40,%ebx
0x00000000000f939b:  addr32 mov %bl,0x5(%esp)
0x00000000000f93a0:  addr32 mov 0xc(%edi),%ecx

----------------
IN: 
0x00000000000f93a5:  addr32 mov %cs:-0xeffdc(%ecx),%eax
0x00000000000f93ae:  addr32 mov %cs:-0xf0000(%eax),%si
0x00000000000f93b6:  addr32 mov %cs:-0xefffe(%eax),%bx
0x00000000000f93be:  add    $0x2,%ebx
0x00000000000f93c2:  mov    $0xa,%al
0x00000000000f93c4:  mov    %ebx,%edx
0x00000000000f93c7:  out    %al,(%dx)
0x00000000000f93c8:  mov    %esp,%edx
0x00000000000f93cb:  mov    %ecx,%eax
0x00000000000f93ce:  calll  0xf9159

----------------
IN: 
0x00000000000f9159:  push   %ebp
0x00000000000f915b:  push   %edi
0x00000000000f915d:  push   %esi
0x00000000000f915f:  push   %ebx
0x00000000000f9161:  mov    %edx,%edi
0x00000000000f9164:  addr32 mov %cs:-0xeffdc(%eax),%edx
0x00000000000f916d:  addr32 mov %cs:-0xeffd8(%eax),%bl
0x00000000000f9175:  addr32 mov %cs:-0xf0000(%edx),%si
0x00000000000f917d:  movzwl %si,%ebp
0x00000000000f9181:  mov    %ebp,%eax
0x00000000000f9184:  calll  0xf9149

----------------
IN: 
0x00000000000f918a:  test   %eax,%eax
0x00000000000f918d:  js     0xf9256

----------------
IN: 
0x00000000000f9191:  addr32 mov 0x5(%edi),%al
0x00000000000f9195:  and    $0x4f,%eax
0x00000000000f9199:  cmp    $0x1,%bl
0x00000000000f919c:  sbb    %ecx,%ecx
0x00000000000f919f:  and    $0xfffffff0,%ecx
0x00000000000f91a3:  sub    $0x50,%ecx
0x00000000000f91a7:  or     %eax,%ecx
0x00000000000f91aa:  addr32 lea 0x6(%esi),%edx
0x00000000000f91af:  in     (%dx),%al
0x00000000000f91b0:  mov    %al,%bl
0x00000000000f91b2:  mov    %cl,%al
0x00000000000f91b4:  out    %al,(%dx)
0x00000000000f91b5:  xor    %ecx,%ebx
0x00000000000f91b8:  and    $0x10,%bl
0x00000000000f91bb:  jne    0xf9204

----------------
IN: 
0x00000000000f91bd:  addr32 mov 0x6(%edi),%cl
0x00000000000f91c1:  mov    %ecx,%eax
0x00000000000f91c4:  and    $0xee,%eax
0x00000000000f91ca:  cmp    $0x24,%eax
0x00000000000f91ce:  jne    0xf921a

----------------
IN: 
0x00000000000f921a:  addr32 mov (%edi),%al
0x00000000000f921d:  addr32 lea 0x1(%esi),%edx
0x00000000000f9222:  out    %al,(%dx)
0x00000000000f9223:  addr32 mov 0x1(%edi),%al
0x00000000000f9227:  addr32 lea 0x2(%esi),%edx
0x00000000000f922c:  out    %al,(%dx)
0x00000000000f922d:  addr32 mov 0x2(%edi),%al
0x00000000000f9231:  addr32 lea 0x3(%esi),%edx
0x00000000000f9236:  out    %al,(%dx)
0x00000000000f9237:  addr32 mov 0x3(%edi),%al
0x00000000000f923b:  addr32 lea 0x4(%esi),%edx
0x00000000000f9240:  out    %al,(%dx)
0x00000000000f9241:  addr32 mov 0x4(%edi),%al
0x00000000000f9245:  addr32 lea 0x5(%esi),%edx
0x00000000000f924a:  out    %al,(%dx)
0x00000000000f924b:  addr32 lea 0x7(%esi),%edx
0x00000000000f9250:  mov    %cl,%al
0x00000000000f9252:  out    %al,(%dx)
0x00000000000f9253:  xor    %eax,%eax
0x00000000000f9256:  pop    %ebx
0x00000000000f9258:  pop    %esi
0x00000000000f925a:  pop    %edi
0x00000000000f925c:  pop    %ebp
0x00000000000f925e:  retl   

----------------
IN: 
0x00000000000f93d4:  mov    %eax,%ecx
0x00000000000f93d7:  test   %eax,%eax
0x00000000000f93da:  jne    0xf9400

----------------
IN: 
0x00000000000f93dc:  movzwl %si,%eax
0x00000000000f93e0:  calll  0xf9260

----------------
IN: 
0x00000000000f9260:  push   %ebx
0x00000000000f9262:  mov    %eax,%ebx
0x00000000000f9265:  calll  0xf8496

----------------
IN: 
0x00000000000f926b:  movzwl %bx,%eax
0x00000000000f926f:  calll  0xf9149

----------------
IN: 
0x00000000000f9275:  test   %eax,%eax
0x00000000000f9278:  js     0xf9295

----------------
IN: 
0x00000000000f927a:  test   $0x1,%al
0x00000000000f927c:  jne    0xf928f

----------------
IN: 
0x00000000000f927e:  and    $0x8,%eax
0x00000000000f9282:  cmp    $0x1,%eax
0x00000000000f9286:  sbb    %eax,%eax
0x00000000000f9289:  and    $0xfffffffb,%eax
0x00000000000f928d:  jmp    0xf9295

----------------
IN: 
0x00000000000f9295:  pop    %ebx
0x00000000000f9297:  retl   

----------------
IN: 
0x00000000000f93e6:  mov    %eax,%ecx
0x00000000000f93e9:  test   %eax,%eax
0x00000000000f93ec:  jne    0xf9400

----------------
IN: 
0x00000000000f93ee:  mov    $0x200,%cx
0x00000000000f93f1:  mov    %ebp,%edx
0x00000000000f93f4:  mov    %edi,%eax
0x00000000000f93f7:  calll  0xfe837

----------------
IN: 
0x00000000000fe837:  push   %ebp
0x00000000000fe839:  push   %edi
0x00000000000fe83b:  push   %esi
0x00000000000fe83d:  push   %ebx
0x00000000000fe83f:  sub    $0x18,%esp
0x00000000000fe843:  mov    %eax,%ebx
0x00000000000fe846:  addr32 mov %edx,0x8(%esp)
0x00000000000fe84c:  mov    %ecx,%edx
0x00000000000fe84f:  addr32 mov %ecx,0xc(%esp)
0x00000000000fe855:  addr32 mov 0xc(%eax),%eax
0x00000000000fe85a:  addr32 mov %cs:-0xeffdc(%eax),%eax
0x00000000000fe863:  addr32 mov %cs:-0xf0000(%eax),%di
0x00000000000fe86b:  addr32 mov %di,0x10(%esp)
0x00000000000fe870:  addr32 mov %cs:-0xefffe(%eax),%si
0x00000000000fe878:  addr32 movzwl 0x10(%ebx),%ebp
0x00000000000fe87e:  addr32 mov 0x8(%ebx),%eax
0x00000000000fe883:  addr32 mov %eax,(%esp)
0x00000000000fe888:  mov    $0x2,%ecx
0x00000000000fe88e:  mov    %edx,%eax
0x00000000000fe891:  cltd   
0x00000000000fe893:  idiv   %ecx
0x00000000000fe896:  movzwl %ax,%eax
0x00000000000fe89a:  addr32 mov %eax,0x4(%esp)
0x00000000000fe8a0:  addr32 lea 0x2(%esi),%eax
0x00000000000fe8a5:  addr32 mov %ax,0x12(%esp)
0x00000000000fe8aa:  movzwl %di,%eax
0x00000000000fe8ae:  addr32 mov %eax,0x14(%esp)
0x00000000000fe8b4:  addr32 cmpl $0x0,0x8(%esp)
0x00000000000fe8bb:  je     0xfe8e1

----------------
IN: 
0x00000000000fe8e1:  addr32 mov (%esp),%edi
0x00000000000fe8e6:  mov    %edi,%eax
0x00000000000fe8e9:  shr    $0x4,%eax
0x00000000000fe8ed:  mov    %ax,%es
0x00000000000fe8ef:  and    $0xf,%edi
0x00000000000fe8f3:  addr32 mov 0x4(%esp),%ecx
0x00000000000fe8f9:  addr32 mov 0x10(%esp),%edx
0x00000000000fe8ff:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000fe8ff:  rep addr32 insw (%dx),%es:(%edi)

----------------
IN: 
0x00000000000fe902:  addr32 mov 0xc(%esp),%eax
0x00000000000fe908:  addr32 add %eax,(%esp)
0x00000000000fe90d:  addr32 mov 0x12(%esp),%dx
0x00000000000fe912:  in     (%dx),%al
0x00000000000fe913:  addr32 mov 0x14(%esp),%eax
0x00000000000fe919:  calll  0xf9149

----------------
IN: 
0x00000000000fe91f:  test   %eax,%eax
0x00000000000fe922:  jns    0xfe92a

----------------
IN: 
0x00000000000fe92a:  dec    %ebp
0x00000000000fe92c:  je     0xfe948

----------------
IN: 
0x00000000000fe948:  mov    %eax,%edx
0x00000000000fe94b:  and    $0x89,%edx
0x00000000000fe952:  addr32 cmpl $0x0,0x8(%esp)
0x00000000000fe959:  je     0xfe964

----------------
IN: 
0x00000000000fe964:  cmp    $0x1,%edx
0x00000000000fe968:  sbb    %eax,%eax
0x00000000000fe96b:  not    %eax
0x00000000000fe96e:  and    $0xfffffff9,%eax
0x00000000000fe972:  add    $0x18,%esp
0x00000000000fe976:  pop    %ebx
0x00000000000fe978:  pop    %esi
0x00000000000fe97a:  pop    %edi
0x00000000000fe97c:  pop    %ebp
0x00000000000fe97e:  retl   

----------------
IN: 
0x00000000000f93fd:  mov    %eax,%ecx
0x00000000000f9400:  mov    $0x8,%al
0x00000000000f9402:  mov    %ebx,%edx
0x00000000000f9405:  out    %al,(%dx)
0x00000000000f9406:  cmp    $0x1,%ecx
0x00000000000f940a:  sbb    %eax,%eax
0x00000000000f940d:  not    %eax
0x00000000000f9410:  and    $0xc,%eax
0x00000000000f9414:  add    $0xc,%esp
0x00000000000f9418:  pop    %ebx
0x00000000000f941a:  pop    %esi
0x00000000000f941c:  pop    %edi
0x00000000000f941e:  pop    %ebp
0x00000000000f9420:  retl   

----------------
IN: 
0x00000000000fba08:  jmp    0xfbc1e

----------------
IN: 
0x00000000000fbc1e:  test   %eax,%eax
0x00000000000fbc21:  jne    0xfbc2b

----------------
IN: 
0x00000000000fbc23:  jmp    0xfbc3c

----------------
IN: 
0x00000000000fbc3c:  add    $0x8,%esp
0x00000000000fbc40:  pop    %ebx
0x00000000000fbc42:  pop    %esi
0x00000000000fbc44:  pop    %edi
0x00000000000fbc46:  pop    %ebp
0x00000000000fbc48:  retl   

----------------
IN: 
0x00000000000f7ea6:  addr32 mov (%ebx),%es
0x00000000000f7ea9:  addr32 mov 0x10(%esp),%edx
0x00000000000f7eaf:  addr32 mov %dx,%es:0x2(%esi)
0x00000000000f7eb4:  or     $0x7f,%ah
0x00000000000f7eb7:  mov    %eax,%edx
0x00000000000f7eba:  mov    %ebx,%eax
0x00000000000f7ebd:  calll  0xf7dd8

----------------
IN: 
0x00000000000f7ec3:  add    $0x14,%esp
0x00000000000f7ec7:  pop    %ebx
0x00000000000f7ec9:  pop    %esi
0x00000000000f7ecb:  pop    %edi
0x00000000000f7ecd:  retl   

----------------
IN: 
0x0000000000007c91:  jb     0x7c81

----------------
IN: 
0x0000000000007c93:  pop    %si

----------------
IN: 
0x0000000000007c93:  pop    %si

----------------
IN: 
0x0000000000007c94:  pop    %dx
0x0000000000007c95:  pop    %ax
0x0000000000007c96:  ret    

----------------
IN: 
0x0000000000007ca7:  mov    0x60d,%al

----------------
IN: 
0x0000000000007ca7:  mov    0x60d,%al

----------------
IN: 
0x0000000000007caa:  mulw   0x60b

----------------
IN: 
0x0000000000007cae:  mov    %ax,0x7cc6

----------------
IN: 
0x0000000000007cb1:  ljmp   $0x0,$0x7e00

----------------
IN: 
0x0000000000007e00:  add    %al,(%bx,%si)

