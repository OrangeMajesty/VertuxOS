;RootDirSectors (0) = ((RDE * 32) + (fat_sector_to_klaster  – 1)) / fat_sector_to_klaster ;
;FirstDataSector = fat_reserv_sectors + (fat_copys * fat32_bigsektorpearlfat) + RootDirSectors; Корневой каталог
;FirstSectorofCluster = ((N – 2) * fat_sector_to_klaster) + FirstDataSector;	содержимое файла по fat
;DataSec = fat_bigtotalsektors – (fat_reserv_sectors + (fat_copys * fat32_bigsektorpearlfat) + RootDirSectors);
;CountofClusters = DataSec / fat_sector_to_klaster;
;ThisFATSecNum = fat_reserv_sectors + (FATOffset / fat_sector_to_klaster );
;ThisFATEntOffset = REM(FATOffset / fat_sector_to_klaster );
;== Именение значений таблицы видет к нарушению работы программы ==
fat_OEM 		db 	'Ssys.fat'
fat_size_sector 	dw 	512
fat_sector_to_klaster 	db 	8
fat_reserv_sectors 	dw	32
fat_copys 		db 	2
RDE			dw	0
fat_bigtotalsektor	dw	0
fat_diskid 		db 	0xF8
fat_sektorperfat	dw	0
fat_sektorpertrack	dw	16
fat_head		dw	4
fat_hidesektor		dd	0
fat_bigtotalsektors	dd	1966080; размер в секторах
fat32_bigsektorpearlfat	dd	1917
fat32_flags		dw	0000h
fat32_fsver		dw	0000h
fat32root_cul		dd	2
fat32_infosector	dw	1
fat32_BackBootSector	dw	6
reserv			db	12 dup (0)
fat32_Drivenum		db	80h
fat32_reserv1		db	01h
fat32_bootsig		db	29h
fat32_voiid		dd	0xD1525943
fat_volumelabel		db	'           ';11
fat_SysID		db	'FAT32   '
RootDirSectors 		dq	0

virtual at 0xd12 ;Size: 32
	Dir_name		db 11 dup (?)
	Dir_attr		db 0
	Dir_NTresrv		db 0
	Dir_CtrTimeTenth	db ?
	Dir_FstClusHI		dw ?;99 91
	;db 6 dup(?)
	Dir_WrtTime		dw ?
	Dir_wrtDate		dw ?
	Dir_FstClusLO		dw ?
	Dir_Filesize		dd ?
end virtual

FAT32_Root_dir:
	mov ax, word[fat32_bigsektorpearlfat] ;firstDatasector
	mov cx, 2
	mul cx
	mov di, ax
	add di, [fat_reserv_sectors]
	mov  word[RootDirSectors], di
	mov word[Ldb_bq], di
	ret
Load_FILE:
	pusha
	mov cx, [num]
	mov ax, 0
@@:
	test cx, cx
	jz @f
	add ax, 32
	loop @b
@@:
	mov cx, 200
	mov si, buf
	add si, ax
	mov di, 0xd12
	rep movsb 
	popa
	ret
macro cmp_file file, str, offs_str2 {
	mov ax, 0
@@:
	mov cx, offs_str2
	sub cx, str
	mov di, file
	mov si, 0xd12
	add si, str
	repe cmpsb
	je Next_load
	inc ax
	mov [num], ax
	call Load_FILE
	
	mov ah, 0eh
	mov al, '2'
	int 10h
	
	jmp @b
}
	LDB:
	db 10h,0
	dw 01h
buffer	dw buf
	dw 0x00
Ldb_bq	dq 2

num dw 0
	
	
;0000	Неиспользуемый кластер
;от 1 до количества кластеров	Номер кластера со следующей частью файла
;FFFF0h - FFFF6	Зарезервированный кластер
;FFF7	Испорченный кластер
;FFF8h - FFFFh	Конец файла (эта позиция соответствует последнему кластеру файла )
	
			;File attributes:
			;ATTR_READ_ONLY   	0x01
			;ATTR_HIDDEN 	0x02
			;ATTR_SYSTEM 	0x04
			;ATTR_VOLUME_ID 	0x08
			;ATTR_DIRECTORY	0x10
			;ATTR_ARCHIVE  	0x20
