;====== PCI\ATA instruction ======
; Ver 0.1
; ARH x32
;===========================


; BASE PORTs IO

IDE_ata_Bus_Primary  		dw 0x1F0, 0x3F7	;IRQ14

IDE_ata_Bus_Secondary		dw 0x170, 0x376 ;IQR15

; ===============
; 0xA0 - Master       | 0xB0 - Slave 		> HPort
; Read sectors - 0x20 | Write Sectors - 0x30 	> Status
; 0 выбирает Устройство 0 (мастер). 10h будет выбирать устройство 1 (Slave).
; ===============

; Registers offset
IDE_ata_data 	equ 0h
IDE_ata_Err 	equ 01h
IDE_ata_SCount	equ 02h
IDE_ata_LBAlo	equ 03h
IDE_ata_LBAmid	equ 04h
IDE_ata_LBAhi	equ 05h
IDE_ata_HPort	equ 06h
IDE_ata_Status	equ 07h

; Status offset
IDE_ata_Status_ERR 	equ 00h
IDE_ata_Status_DRQ	equ 03h
IDE_ata_Status_SRV	equ 04h
IDE_ata_Status_DF	equ 05h
IDE_ata_Status_RDY	equ 06h
IDE_ata_Status_BSY	equ 07h

; Register Control offset
IDE_ata_Control_nIEN 	equ 0h
IDE_ata_Control_SRST	equ 02h
IDE_ata_Control_HOB	equ 07h

ATA_Reset:

ret

ATA_Detect:

	call ATA_Reset
	;xor eax, eax
	
	mov dx, [IDE_ata_Bus_Primary]
	add dx, IDE_ata_Status
@@:
	in al, dx
	and al, 10000000b
	jne @b
@@:
	in al, dx
	and al, 01000000b
	je @b
	
	mov dx, [IDE_ata_Bus_Primary]
	add dx, IDE_ata_HPort
	
	mov al, 0x10
	out dx, al
	
	mov dx, [IDE_ata_Bus_Primary]
	add dx, IDE_ata_Status
	mov al, 0ECh
	out dx, al

	;mov dx, 0x1F7
@@:
	in al, dx
	in al, dx
	in al, dx
	in al, dx
	and al, 00001000b
	je @b

	mov si, ATA_Found
	call printStr
ret
ATA_Found db 0x2,'Device Found ',10,0
buf db 256 dup 0x2,(17),0
